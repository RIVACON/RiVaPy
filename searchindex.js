Search.setIndex({"alltitles": {"AmericanVanillaSpecification": [[18, "americanvanillaspecification"]], "BarrierSpecification": [[18, "barrierspecification"]], "Basic Idea": [[5, "Basic-Idea"]], "Bonds": [[17, "bonds"]], "Calibration": [[9, "Calibration"]], "Collateral - Coupons and Dividends": [[5, "Collateral---Coupons-and-Dividends"]], "Collateral - Voting Rights": [[5, "Collateral---Voting-Rights"]], "Components": [[16, "components"]], "Compute Discount Factors": [[6, "Compute-Discount-Factors"]], "Contents:": [[2, null], [15, null], [19, null], [23, null], [24, null], [27, null], [29, null], [31, null]], "Creating Discount Curves": [[6, "Creating-Discount-Curves"]], "Credit Default Data": [[36, "credit-default-data"]], "Credit Default Swaps": [[17, "module-rivapy.instruments.cds_specification"]], "Credit Instruments": [[17, "credit-instruments"]], "Curves": [[23, "curves"]], "Date Tools": [[35, "date-tools"]], "DateTimeGrid": [[35, "datetimegrid"]], "Deep Hedging of Green PPAs": [[13, "Deep-Hedging-of-Green-PPAs"]], "Definition of Discount Curves": [[6, "Definition-of-Discount-Curves"]], "Delta Plots": [[7, "Delta-Plots"], [13, "Delta-Plots"]], "Delta vs Volume": [[7, "Delta-vs-Volume"]], "Developer Guide": [[0, "developer-guide"]], "Different Types of Collateral": [[5, "Different-Types-of-Collateral"]], "Different Types of Repos": [[5, "Different-Types-of-Repos"]], "Discount Curve": [[21, "discount-curve"]], "Discount Curves": [[6, "Discount-Curves"]], "DiscountCurve": [[21, "discountcurve"]], "DiscountCurveParametrized": [[21, "discountcurveparametrized"], [21, "id3"]], "Dividend Tables": [[22, "dividend-tables"]], "Docstrings": [[0, "docstrings"]], "Economic Functions": [[5, "Economic-Functions"]], "Energy and Weather": [[27, "energy-and-weather"]], "Enums": [[35, "enums"]], "Equity": [[23, "equity"], [28, "equity"]], "Equity Instruments": [[18, "equity-instruments"]], "EuropeanVanillaSpecification": [[18, "europeanvanillaspecification"]], "Exercises": [[6, "Exercises"]], "Financial Instruments": [[4, "financial-instruments"]], "Forecast Models (Forward Models)": [[26, "forecast-models-forward-models"]], "Forecast Simulations": [[12, "Forecast-Simulations"]], "Forward Models": [[26, "forward-models"]], "Forward Values": [[8, "Forward-Values"]], "General Collateral": [[5, "General-Collateral"]], "Glossary": [[1, "glossary"]], "Green PPA Hedging": [[7, "Green-PPA-Hedging"]], "Green PPA Pricing - Expected Value": [[14, "Green-PPA-Pricing---Expected-Value"]], "Green PPA Specification": [[14, "Green-PPA-Specification"]], "Green Power Purchase Agreement": [[20, "green-power-purchase-agreement"]], "Hedge PnL Distribution": [[7, "Hedge-PnL-Distribution"], [13, "Hedge-PnL-Distribution"]], "Heston Model": [[28, "heston-model"]], "Imports": [[0, "imports"]], "Installation": [[3, "installation"]], "Instantenous Production Models (Spot Models)": [[26, "instantenous-production-models-spot-models"]], "Instruments": [[19, "instruments"]], "Interfaces": [[33, "interfaces"]], "LinearDemandForwardModel": [[26, "lineardemandforwardmodel"]], "LoadModel": [[26, "loadmodel"]], "Local Volatility Model": [[28, "local-volatility-model"]], "Logging": [[0, "logging"]], "Logging Usage": [[0, "logging-usage"]], "Lucia-Schwartz": [[30, "lucia-schwartz"]], "Lucia-Schwartz Model": [[8, "Lucia-Schwartz-Model"]], "Market Data": [[4, "market-data"]], "Marketdata": [[24, "marketdata"]], "MemoryExpressSpecification": [[18, "memoryexpressspecification"]], "Models": [[4, "models"], [29, "models"]], "Modelsetup": [[11, "Modelsetup"]], "Module Documentation": [[15, "module-documentation"]], "MultiRegionWindForecastModel": [[26, "multiregionwindforecastmodel"]], "Multiregion Windpower Model": [[11, "Multiregion-Windpower-Model"]], "Naming": [[0, "naming"]], "Notebook Gallery": [[4, "notebook-gallery"]], "Open Repos": [[5, "Open-Repos"]], "Ornstein-Uhlenbeck": [[30, "ornstein-uhlenbeck"]], "Ornstein-Uhlenbeck Model": [[9, "Ornstein-Uhlenbeck-Model"]], "PPA Hedging": [[7, "PPA-Hedging"], [13, "PPA-Hedging"]], "Parametrizations": [[21, "parametrizations"]], "Path Plots": [[7, "Path-Plots"], [13, "Path-Plots"]], "Path Simulation": [[11, "Path-Simulation"]], "Plotting Discount Curves": [[6, "Plotting-Discount-Curves"]], "Power": [[25, "power"], [26, "power"]], "Power Instruments": [[20, "power-instruments"]], "Power Purchase Agreement": [[20, "power-purchase-agreement"]], "PowerPriceForwardCurve": [[25, "powerpriceforwardcurve"]], "Powerprice and Wind Modeling": [[10, "Powerprice-and-Wind-Modeling"]], "Pricing": [[4, "pricing"], [31, "pricing"], [34, "module-rivapy.pricing.analytics"]], "PricingRequest": [[32, "pricingrequest"]], "RainbowSpecification": [[18, "rainbowspecification"]], "Repurchase Agreements": [[5, "Repurchase-Agreements"]], "Residual Demand Forward Model": [[13, "Residual-Demand-Forward-Model"]], "ResidualDemandForwardModel": [[26, "residualdemandforwardmodel"]], "ResidualDemandModel": [[26, "residualdemandmodel"]], "Risks": [[5, "Risks"]], "Sample and Test Data": [[36, "sample-and-test-data"]], "Schedules": [[20, "schedules"]], "Scott Chesney": [[28, "scott-chesney"]], "Securities Lending": [[5, "Securities-Lending"]], "Setup Green PPA Specification": [[7, "Setup-Green-PPA-Specification"]], "Setup Model for Wind and Power Prices": [[7, "Setup-Model-for-Wind-and-Power-Prices"]], "Setup the discount curve": [[6, "Setup-the-discount-curve"]], "Setup the specification": [[6, "Setup-the-specification"]], "Simulation of Powerprices and Wind": [[10, "Simulation-of-Powerprices-and-Wind"]], "Simulation of Spot": [[8, "Simulation-of-Spot"], [9, "Simulation-of-Spot"]], "Simulation with forecasts at discrete timepoints only": [[10, "Simulation-with-forecasts-at-discrete-timepoints-only"]], "Solar": [[26, "solar"]], "SolarPowerModel": [[26, "solarpowermodel"]], "Sources:": [[5, "Sources:"]], "Special Collateral": [[5, "Special-Collateral"]], "Spot Models": [[26, "spot-models"]], "Spreadcurves": [[36, "spreadcurves"]], "Stochastic Local Volatility Model": [[28, "stochastic-local-volatility-model"]], "Stochastic Processes": [[30, "stochastic-processes"]], "Styleguide": [[0, "styleguide"]], "SupplyFunction": [[26, "supplyfunction"]], "TODO Comments": [[0, "todo-comments"]], "The Repo Market": [[5, "The-Repo-Market"]], "The Size of the European Repo Market": [[5, "The-Size-of-the-European-Repo-Market"]], "Tools": [[35, "tools"]], "Tri-party Repos": [[5, "Tri-party-Repos"]], "Type Annotation": [[0, "type-annotation"]], "Typical Terms for Repos": [[5, "Typical-Terms-for-Repos"]], "Unit Testing": [[0, "unit-testing"]], "Volatility Parametrizations": [[23, "volatility-parametrizations"]], "Volatility Surface": [[23, "volatility-surface"]], "Welcome to rivapy\u2019s documentation!": [[2, "welcome-to-rivapy-s-documentation"]], "Wind": [[26, "wind"]], "Wind Power Forecast Model": [[12, "Wind-Power-Forecast-Model"]], "WindPowerForecastModel": [[26, "windpowerforecastmodel"]]}, "docnames": ["developer_guide", "glossary", "index", "install", "notebooks/index", "notebooks/instruments/repurchase_agreement", "notebooks/marketdata/discount_curves", "notebooks/models/_green_ppa_hedging_old", "notebooks/models/lucia_schwartz", "notebooks/models/ornstein_uhlenbeck", "notebooks/models/powerprice_wind_model", "notebooks/models/residual_demand_forward_model_multi_region", "notebooks/models/windpower_forecast_model", "notebooks/pricing/green_ppa_deep_hedging", "notebooks/pricing/green_ppa_expected_value", "rivapy/index", "rivapy/instruments/components", "rivapy/instruments/credit", "rivapy/instruments/equity", "rivapy/instruments/index", "rivapy/instruments/power", "rivapy/marketdata/discountcurves", "rivapy/marketdata/dividends", "rivapy/marketdata/equity", "rivapy/marketdata/index", "rivapy/marketdata/power", "rivapy/models/energy/energy_weather", "rivapy/models/energy/index", "rivapy/models/equity", "rivapy/models/index", "rivapy/models/stochastic_processes", "rivapy/pricing/index", "rivapy/pricing/pricing_request", "rivapy/rivapy.interfaces", "rivapy/rivapy.pricing", "rivapy/rivapy.tools", "sample_data/index"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["developer_guide.rst", "glossary.rst", "index.rst", "install.rst", "notebooks/index.rst", "notebooks/instruments/repurchase_agreement.ipynb", "notebooks/marketdata/discount_curves.ipynb", "notebooks/models/_green_ppa_hedging_old.ipynb", "notebooks/models/lucia_schwartz.ipynb", "notebooks/models/ornstein_uhlenbeck.ipynb", "notebooks/models/powerprice_wind_model.ipynb", "notebooks/models/residual_demand_forward_model_multi_region.ipynb", "notebooks/models/windpower_forecast_model.ipynb", "notebooks/pricing/green_ppa_deep_hedging.ipynb", "notebooks/pricing/green_ppa_expected_value.ipynb", "rivapy/index.rst", "rivapy/instruments/components.rst", "rivapy/instruments/credit.rst", "rivapy/instruments/equity.rst", "rivapy/instruments/index.rst", "rivapy/instruments/power.rst", "rivapy/marketdata/discountcurves.rst", "rivapy/marketdata/dividends.rst", "rivapy/marketdata/equity.rst", "rivapy/marketdata/index.rst", "rivapy/marketdata/power.rst", "rivapy/models/energy/energy_weather.rst", "rivapy/models/energy/index.rst", "rivapy/models/equity.rst", "rivapy/models/index.rst", "rivapy/models/stochastic_processes.rst", "rivapy/pricing/index.rst", "rivapy/pricing/pricing_request.rst", "rivapy/rivapy.interfaces.rst", "rivapy/rivapy.pricing.rst", "rivapy/rivapy.tools.rst", "sample_data/index.rst"], "indexentries": {"_create_sample() (rivapy.instruments.bond_specifications.plainvanillacouponbondspecification static method)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification._create_sample", false]], "_create_sample() (rivapy.instruments.bond_specifications.zerocouponbondspecification static method)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification._create_sample", false]], "_create_sample() (rivapy.instruments.components.issuer static method)": [[16, "rivapy.instruments.components.Issuer._create_sample", false]], "act252 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT252", false]], "act360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT360", false]], "act365fixed (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.Act365Fixed", false]], "act_act (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT_ACT", false]], "americanpdepricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.AmericanPdePricingData", false]], "americanvanillaspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.AmericanVanillaSpecification", false]], "applies() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.applies", false]], "apply_mc_step() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.apply_mc_step", false]], "apply_mc_step() (rivapy.models.localvol method)": [[28, "rivapy.models.LocalVol.apply_mc_step", false]], "apply_mc_step() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.apply_mc_step", false]], "apply_mc_step() (rivapy.models.scottchesneymodel method)": [[28, "rivapy.models.ScottChesneyModel.apply_mc_step", false]], "apply_mc_step() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.apply_mc_step", false]], "backwards (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.backwards", false]], "barrierspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.BarrierSpecification", false]], "basepricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BasePricingData", false]], "black76pricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.Black76PricingData", false]], "bond (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.bond", false]], "bondpricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BondPricingData", false]], "bondpricingparameter (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BondPricingParameter", false]], "business_day_convention (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.business_day_convention", false]], "calc_implied_vol() (rivapy.marketdata.volatilitygridparametrization method)": [[23, "rivapy.marketdata.VolatilityGridParametrization.calc_implied_vol", false]], "calc_implied_vol() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.calc_implied_vol", false]], "calc_implied_vol() (rivapy.marketdata.volatilitysurface method)": [[23, "rivapy.marketdata.VolatilitySurface.calc_implied_vol", false]], "calendar (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.calendar", false]], "calibrate() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.calibrate", false]], "calibrate() (rivapy.models.windpowermodel static method)": [[26, "rivapy.models.WindPowerModel.calibrate", false]], "calibrate_mc() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.calibrate_MC", false]], "call_price() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.call_price", false]], "cash flow": [[1, "term-Cash-Flow", true]], "cdspricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.CDSPricingData", false]], "cdsspecification (class in rivapy.instruments.cds_specification)": [[17, "rivapy.instruments.cds_specification.CDSSpecification", false]], "collateralized (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.COLLATERALIZED", false]], "combospecification (class in rivapy.instruments)": [[19, "rivapy.instruments.ComboSpecification", false]], "compute() (rivapy.marketdata.nelsonsiegel static method)": [[21, "rivapy.marketdata.NelsonSiegel.compute", false]], "compute() (rivapy.marketdata.nelsonsiegelsvensson static method)": [[21, "rivapy.marketdata.NelsonSiegelSvensson.compute", false]], "compute() (rivapy.models.supplyfunction method)": [[26, "rivapy.models.SupplyFunction.compute", false]], "compute() (rivapy.tools.interfaces.datetimefunction method)": [[33, "rivapy.tools.interfaces.DateTimeFunction.compute", false]], "compute_call_price() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.compute_call_price", false]], "compute_european_price_buehler() (in module rivapy.pricing.analytics)": [[34, "rivapy.pricing.analytics.compute_european_price_Buehler", false]], "compute_expected_value() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.compute_expected_value", false]], "compute_expected_value() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.compute_expected_value", false]], "compute_flows() (rivapy.instruments.greenppaspecification method)": [[20, "rivapy.instruments.GreenPPASpecification.compute_flows", false]], "compute_flows() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.compute_flows", false]], "compute_fwd_value() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.compute_fwd_value", false]], "compute_implied_vol_buehler() (in module rivapy.pricing.analytics)": [[34, "rivapy.pricing.analytics.compute_implied_vol_Buehler", false]], "compute_local_var() (rivapy.models.localvol static method)": [[28, "rivapy.models.LocalVol.compute_local_var", false]], "conditional_probability_density() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.conditional_probability_density", false]], "constant (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.CONSTANT", false]], "constant (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.CONSTANT", false]], "constant (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.CONSTANT", false]], "constantrate (class in rivapy.marketdata)": [[21, "rivapy.marketdata.ConstantRate", false]], "constrained_spline (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.CONSTRAINED_SPLINE", false]], "country (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.country", false]], "creditdefaultdata (class in rivapy.sample_data.market_data.credit_default)": [[36, "rivapy.sample_data.market_data.credit_default.CreditDefaultData", false]], "datetimefunction (class in rivapy.tools.interfaces)": [[33, "rivapy.tools.interfaces.DateTimeFunction", false]], "datetimegrid (class in rivapy.tools)": [[35, "rivapy.tools.DateTimeGrid", false]], "daycountertype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.DayCounterType", false]], "days (rivapy.tools.period property)": [[35, "rivapy.tools.Period.days", false]], "delta (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.DELTA", false]], "discount_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.discount_curve", false]], "discountcurve (class in rivapy.marketdata)": [[21, "rivapy.marketdata.DiscountCurve", false]], "discountcurveparametrized (class in rivapy.marketdata)": [[21, "rivapy.marketdata.DiscountCurveParametrized", false]], "dividendtable (class in rivapy.marketdata)": [[22, "rivapy.marketdata.DividendTable", false]], "docstringexample (class in rivapy.tools.example_docstring)": [[0, "rivapy.tools.example_docstring.DocStringExample", false]], "end_day (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.end_day", false]], "equity (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.EQUITY", false]], "equityforwardcurve (class in rivapy.marketdata)": [[23, "rivapy.marketdata.EquityForwardCurve", false]], "esg_rating (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.esg_rating", false]], "europeanvanillaspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.EuropeanVanillaSpecification", false]], "eval_call_functions() (rivapy.models.windpowerforecastmodel static method)": [[26, "rivapy.models.WindPowerForecastModel.eval_call_functions", false]], "expected_cashflows() (rivapy.instruments.bond_specifications.plainvanillacouponbondspecification method)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification.expected_cashflows", false]], "expected_cashflows() (rivapy.instruments.bond_specifications.zerocouponbondspecification method)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification.expected_cashflows", false]], "extrapolationtype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.ExtrapolationType", false]], "fair value": [[1, "term-Fair-Value", true]], "feller_condition() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.feller_condition", false]], "fixing_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.fixing_curve", false]], "following (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.FOLLOWING", false]], "from_string() (rivapy.tools.period static method)": [[35, "rivapy.tools.Period.from_string", false]], "gamma (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.GAMMA", false]], "generate_dates() (rivapy.tools.schedule method)": [[35, "rivapy.tools.Schedule.generate_dates", false]], "german (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.GERMAN", false]], "get() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.get", false]], "get() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.get", false]], "get() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.get", false]], "get() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.get", false]], "get_curve() (rivapy.sample_data.market_data.spread_curves.spreadcurvecollection method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection.get_curve", false]], "get_curve() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.get_curve", false]], "get_daily_subgrid() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_daily_subgrid", false]], "get_dates() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.get_dates", false]], "get_day_of_week() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_day_of_week", false]], "get_day_of_year() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_day_of_year", false]], "get_df() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_df", false]], "get_df() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.get_df", false]], "get_df() (rivapy.marketdata.powerpriceforwardcurve method)": [[25, "rivapy.marketdata.PowerPriceForwardCurve.get_df", false]], "get_eta() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_eta", false]], "get_forward() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.get_forward", false]], "get_fwd_atm_vols() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_fwd_atm_vols", false]], "get_gamma() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_gamma", false]], "get_hour_of_day() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_hour_of_day", false]], "get_initial_value() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.get_initial_value", false]], "get_initial_value() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.get_initial_value", false]], "get_minute_of_day() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_minute_of_day", false]], "get_params() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_params", false]], "get_rho() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_rho", false]], "get_schedule() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.get_schedule", false]], "get_schedule() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_schedule", false]], "get_technology() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.get_technology", false]], "get_technology() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.get_technology", false]], "getprice() (rivapy.pricing.pricing_data.pricingresults method)": [[34, "rivapy.pricing.pricing_data.PricingResults.getPrice", false]], "greenppapricingrequest (class in rivapy.pricing.pricing_request)": [[32, "rivapy.pricing.pricing_request.GreenPPAPricingRequest", false]], "greenppaspecification (class in rivapy.instruments)": [[20, "rivapy.instruments.GreenPPASpecification", false]], "hagan (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.HAGAN", false]], "hagan_df (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.HAGAN_DF", false]], "hestonmodel (class in rivapy.models)": [[28, "rivapy.models.HestonModel", false]], "inflationinterpolation (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.InflationInterpolation", false]], "interpolationtype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.InterpolationType", false]], "issuer (class in rivapy.instruments.components)": [[16, "rivapy.instruments.components.Issuer", false]], "japan (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.JAPAN", false]], "linear (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.LINEAR", false]], "linear (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.LINEAR", false]], "linear_log (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.LINEAR_LOG", false]], "linear_log (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.LINEAR_LOG", false]], "lineardemandforwardmodel (class in rivapy.models)": [[26, "rivapy.models.LinearDemandForwardModel", false]], "lineardemandforwardmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult", false]], "load() (rivapy.marketdata.volatilitysurface static method)": [[23, "rivapy.marketdata.VolatilitySurface.load", false]], "loadmodel (class in rivapy.models)": [[26, "rivapy.models.LoadModel", false]], "localvol (class in rivapy.models)": [[28, "rivapy.models.LocalVol", false]], "luciaschwartz (class in rivapy.models)": [[30, "rivapy.models.LuciaSchwartz", false]], "memoryexpressspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.MemoryExpressSpecification", false]], "mezzanine (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.MEZZANINE", false]], "modified_following (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING", false]], "modified_following_bimonthly (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING_BIMONTHLY", false]], "modified_following_eom (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING_EOM", false]], "modified_preceding (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_PRECEDING", false]], "module": [[17, "module-rivapy.instruments.cds_specification", false], [34, "module-rivapy.pricing.analytics", false], [34, "module-rivapy.pricing.pricing_data", false]], "months (rivapy.tools.period property)": [[35, "rivapy.tools.Period.months", false]], "multiregionwindforecastmodel (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel", false]], "multiregionwindforecastmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult", false]], "multiregionwindforecastmodel.region (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region", false]], "n_deliveries() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.n_deliveries", false]], "n_forwards() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.n_forwards", false]], "n_forwards() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.n_forwards", false]], "n_forwards() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.n_forwards", false]], "n_forwards() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.n_forwards", false]], "n_random() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.n_random", false]], "name (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.name", false]], "name() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.name", false]], "nearest (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.NEAREST", false]], "nelsonsiegel (class in rivapy.marketdata)": [[21, "rivapy.marketdata.NelsonSiegel", false]], "nelsonsiegelsvensson (class in rivapy.marketdata)": [[21, "rivapy.marketdata.NelsonSiegelSvensson", false]], "non_preferred_senior (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.NON_PREFERRED_SENIOR", false]], "none (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.NONE", false]], "none (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.NONE", false]], "none (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.NONE", false]], "obj_id (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.obj_id", false]], "ornsteinuhlenbeck (class in rivapy.models)": [[30, "rivapy.models.OrnsteinUhlenbeck", false]], "par_spread() (rivapy.pricing.pricing_data.cdspricingdata method)": [[34, "rivapy.pricing.pricing_data.CDSPricingData.par_spread", false]], "parameters (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.parameters", false]], "past_fixing (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.past_fixing", false]], "period (class in rivapy.tools)": [[35, "rivapy.tools.Period", false]], "plainvanillacouponbondspecification (class in rivapy.instruments.bond_specifications)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification", false]], "plot() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.plot", false]], "plot() (rivapy.marketdata.equityforwardcurve method)": [[23, "rivapy.marketdata.EquityForwardCurve.plot", false]], "plot() (rivapy.models.supplyfunction method)": [[26, "rivapy.models.SupplyFunction.plot", false]], "powerpriceforwardcurve (class in rivapy.marketdata)": [[25, "rivapy.marketdata.PowerPriceForwardCurve", false]], "ppaspecification (class in rivapy.instruments)": [[20, "rivapy.instruments.PPASpecification", false]], "preceding (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.PRECEDING", false]], "preferred_senior (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.PREFERRED_SENIOR", false]], "price (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.PRICE", false]], "price() (rivapy.pricing.pricing_data.americanpdepricingdata method)": [[34, "rivapy.pricing.pricing_data.AmericanPdePricingData.price", false]], "price() (rivapy.pricing.pricing_data.black76pricingdata method)": [[34, "rivapy.pricing.pricing_data.Black76PricingData.price", false]], "price() (rivapy.pricing.pricing_data.cdspricingdata method)": [[34, "rivapy.pricing.pricing_data.CDSPricingData.price", false]], "pricer (rivapy.pricing.pricing_data.basepricingdata property)": [[34, "rivapy.pricing.pricing_data.BasePricingData.pricer", false]], "pricing_request (rivapy.pricing.pricing_data.basepricingdata property)": [[34, "rivapy.pricing.pricing_data.BasePricingData.pricing_request", false]], "pricingresults (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.PricingResults", false]], "rainbowspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.RainbowSpecification", false]], "rating (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.rating", false]], "recovery_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.recovery_curve", false]], "region_names() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.region_names", false]], "region_relative_capacity() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.region_relative_capacity", false]], "residualdemandforwardmodel (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandForwardModel", false]], "residualdemandforwardmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult", false]], "residualdemandmodel (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandModel", false]], "resulttype (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.ResultType", false]], "rho (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.RHO", false]], "rivapy.instruments.cds_specification": [[17, "module-rivapy.instruments.cds_specification", false]], "rivapy.pricing.analytics": [[34, "module-rivapy.pricing.analytics", false]], "rivapy.pricing.pricing_data": [[34, "module-rivapy.pricing.pricing_data", false]], "rnd_shape() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.rnd_shape", false]], "rnd_shape() (rivapy.models.loadmodel method)": [[26, "rivapy.models.LoadModel.rnd_shape", false]], "rnd_shape() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.rnd_shape", false]], "rnd_shape() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.rnd_shape", false]], "rnd_shape() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.rnd_shape", false]], "rnd_shape() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.rnd_shape", false]], "rnd_shape() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.rnd_shape", false]], "rnd_shape() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.rnd_shape", false]], "rnd_shape() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.rnd_shape", false]], "rollconvention (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.RollConvention", false]], "sample() (rivapy.sample_data.market_data.credit_default.creditdefaultdata static method)": [[36, "rivapy.sample_data.market_data.credit_default.CreditDefaultData.sample", false]], "sample() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.sample", false]], "sample_new() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.sample_new", false]], "schedule (class in rivapy.tools)": [[35, "rivapy.tools.Schedule", false]], "scottchesneymodel (class in rivapy.models)": [[28, "rivapy.models.ScottChesneyModel", false]], "sector (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.sector", false]], "securitizationlevel (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.SecuritizationLevel", false]], "senior_secured (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SENIOR_SECURED", false]], "senior_unsecured (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SENIOR_UNSECURED", false]], "set_amount() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.set_amount", false]], "set_params() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.set_params", false]], "set_price() (rivapy.pricing.pricing_data.pricingresults method)": [[34, "rivapy.pricing.pricing_data.PricingResults.set_price", false]], "set_stickyness() (rivapy.marketdata.volatilitysurface static method)": [[23, "rivapy.marketdata.VolatilitySurface.set_stickyness", false]], "simpleschedule (class in rivapy.instruments)": [[20, "rivapy.instruments.SimpleSchedule", false]], "simulate() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.simulate", false]], "simulate() (rivapy.models.loadmodel method)": [[26, "rivapy.models.LoadModel.simulate", false]], "simulate() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.simulate", false]], "simulate() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.simulate", false]], "simulate() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.simulate", false]], "simulate() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.simulate", false]], "simulate() (rivapy.models.residualdemandmodel method)": [[26, "rivapy.models.ResidualDemandModel.simulate", false]], "simulate() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.simulate", false]], "simulate() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.simulate", false]], "simulate() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.simulate", false]], "solarpowermodel (class in rivapy.models)": [[26, "rivapy.models.SolarPowerModel", false]], "specification": [[1, "term-Specification", true]], "spreadcurvecollection (class in rivapy.sample_data.market_data.spread_curves)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection", false]], "spreadcurvesampler (class in rivapy.sample_data.market_data.spread_curves)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler", false]], "start_day (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.start_day", false]], "stickyfwdmoneyness (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyFwdMoneyness", false]], "stickystrike (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyStrike", false]], "stickyxstrike (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyXStrike", false]], "stochasticlocalvol (class in rivapy.models)": [[28, "rivapy.models.StochasticLocalVol", false]], "stub (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.stub", false]], "subordinated (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SUBORDINATED", false]], "supplyfunction (class in rivapy.models)": [[26, "rivapy.models.SupplyFunction", false]], "survival_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.survival_curve", false]], "theoretical value": [[1, "term-Theoretical-Value", true]], "theta (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.THETA", false]], "thirtye360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ThirtyE360", false]], "thirtyu360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ThirtyU360", false]], "time_period (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.time_period", false]], "total_capacity() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.total_capacity", false]], "udls() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.udls", false]], "udls() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.udls", false]], "udls() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.udls", false]], "udls() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.udls", false]], "udls() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.udls", false]], "udls() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.udls", false]], "udls() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.udls", false]], "udls() (rivapy.models.residualdemandmodel method)": [[26, "rivapy.models.ResidualDemandModel.udls", false]], "udls() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.udls", false]], "udls() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.udls", false]], "udls() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.udls", false]], "udls() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.udls", false]], "unadjusted (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.UNADJUSTED", false]], "undefined (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.UNDEFINED", false]], "validate() (rivapy.instruments.cds_specification.cdsspecification method)": [[17, "rivapy.instruments.cds_specification.CDSSpecification.validate", false]], "valuation_date (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.valuation_date", false]], "value() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.value", false]], "value() (rivapy.marketdata.discountcurveparametrized method)": [[21, "rivapy.marketdata.DiscountCurveParametrized.value", false]], "value() (rivapy.marketdata.equityforwardcurve method)": [[23, "rivapy.marketdata.EquityForwardCurve.value", false]], "value() (rivapy.marketdata.powerpriceforwardcurve method)": [[25, "rivapy.marketdata.PowerPriceForwardCurve.value", false]], "value_rate() (rivapy.marketdata.discountcurveparametrized method)": [[21, "rivapy.marketdata.DiscountCurveParametrized.value_rate", false]], "vanna (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.VANNA", false]], "vega (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.VEGA", false]], "volatilitygridparametrization (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityGridParametrization", false]], "volatilityparametrizationflat (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationFlat", false]], "volatilityparametrizationsabr (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSABR", false]], "volatilityparametrizationssvi (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI", false]], "volatilityparametrizationsvi (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSVI", false]], "volatilityparametrizationterm (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationTerm", false]], "volatilitystickyness (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.VolatilityStickyness", false]], "volatilitysurface (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilitySurface", false]], "windpowerforecastmodel (class in rivapy.models)": [[26, "rivapy.models.WindPowerForecastModel", false]], "windpowerforecastmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult", false]], "windpowermodel (class in rivapy.models)": [[26, "rivapy.models.WindPowerModel", false]], "years (rivapy.tools.period property)": [[35, "rivapy.tools.Period.years", false]], "zerocouponbondspecification (class in rivapy.instruments.bond_specifications)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification", false]]}, "objects": {"rivapy.instruments": [[18, 0, 1, "", "AmericanVanillaSpecification"], [18, 0, 1, "", "BarrierSpecification"], [19, 0, 1, "", "ComboSpecification"], [18, 0, 1, "", "EuropeanVanillaSpecification"], [20, 0, 1, "", "GreenPPASpecification"], [18, 0, 1, "", "MemoryExpressSpecification"], [20, 0, 1, "", "PPASpecification"], [18, 0, 1, "", "RainbowSpecification"], [20, 0, 1, "", "SimpleSchedule"], [17, 2, 0, "-", "cds_specification"]], "rivapy.instruments.GreenPPASpecification": [[20, 1, 1, "", "compute_flows"]], "rivapy.instruments.PPASpecification": [[20, 1, 1, "", "compute_flows"], [20, 1, 1, "", "get_schedule"], [20, 1, 1, "", "n_deliveries"], [20, 1, 1, "", "set_amount"]], "rivapy.instruments.SimpleSchedule": [[20, 1, 1, "", "applies"], [20, 1, 1, "", "get_df"], [20, 1, 1, "", "get_params"], [20, 1, 1, "", "get_schedule"]], "rivapy.instruments.bond_specifications": [[17, 0, 1, "", "PlainVanillaCouponBondSpecification"], [17, 0, 1, "", "ZeroCouponBondSpecification"]], "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification": [[17, 1, 1, "", "_create_sample"], [17, 1, 1, "", "expected_cashflows"]], "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification": [[17, 1, 1, "", "_create_sample"], [17, 1, 1, "", "expected_cashflows"]], "rivapy.instruments.cds_specification": [[17, 0, 1, "", "CDSSpecification"]], "rivapy.instruments.cds_specification.CDSSpecification": [[17, 1, 1, "", "validate"]], "rivapy.instruments.components": [[16, 0, 1, "", "Issuer"]], "rivapy.instruments.components.Issuer": [[16, 1, 1, "", "_create_sample"], [16, 3, 1, "", "country"], [16, 3, 1, "", "esg_rating"], [16, 3, 1, "", "name"], [16, 3, 1, "", "obj_id"], [16, 3, 1, "", "rating"], [16, 3, 1, "", "sector"]], "rivapy.marketdata": [[21, 0, 1, "", "ConstantRate"], [21, 0, 1, "", "DiscountCurve"], [21, 0, 1, "", "DiscountCurveParametrized"], [22, 0, 1, "", "DividendTable"], [23, 0, 1, "", "EquityForwardCurve"], [21, 0, 1, "", "NelsonSiegel"], [21, 0, 1, "", "NelsonSiegelSvensson"], [25, 0, 1, "", "PowerPriceForwardCurve"], [23, 0, 1, "", "VolatilityGridParametrization"], [23, 0, 1, "", "VolatilityParametrizationFlat"], [23, 0, 1, "", "VolatilityParametrizationSABR"], [23, 0, 1, "", "VolatilityParametrizationSSVI"], [23, 0, 1, "", "VolatilityParametrizationSVI"], [23, 0, 1, "", "VolatilityParametrizationTerm"], [23, 0, 1, "", "VolatilitySurface"]], "rivapy.marketdata.DiscountCurve": [[21, 1, 1, "", "get_dates"], [21, 1, 1, "", "get_df"], [21, 1, 1, "", "plot"], [21, 1, 1, "", "value"]], "rivapy.marketdata.DiscountCurveParametrized": [[21, 1, 1, "", "value"], [21, 1, 1, "", "value_rate"]], "rivapy.marketdata.EquityForwardCurve": [[23, 1, 1, "", "plot"], [23, 1, 1, "", "value"]], "rivapy.marketdata.NelsonSiegel": [[21, 1, 1, "", "compute"]], "rivapy.marketdata.NelsonSiegelSvensson": [[21, 1, 1, "", "compute"]], "rivapy.marketdata.PowerPriceForwardCurve": [[25, 1, 1, "", "get_df"], [25, 1, 1, "", "value"]], "rivapy.marketdata.VolatilityGridParametrization": [[23, 1, 1, "", "calc_implied_vol"]], "rivapy.marketdata.VolatilityParametrizationSSVI": [[23, 1, 1, "", "calc_implied_vol"], [23, 1, 1, "", "get_eta"], [23, 1, 1, "", "get_fwd_atm_vols"], [23, 1, 1, "", "get_gamma"], [23, 1, 1, "", "get_rho"]], "rivapy.marketdata.VolatilitySurface": [[23, 1, 1, "", "calc_implied_vol"], [23, 1, 1, "", "load"], [23, 1, 1, "", "set_stickyness"]], "rivapy.models": [[28, 0, 1, "", "HestonModel"], [26, 0, 1, "", "LinearDemandForwardModel"], [26, 0, 1, "", "LoadModel"], [28, 0, 1, "", "LocalVol"], [30, 0, 1, "", "LuciaSchwartz"], [26, 0, 1, "", "MultiRegionWindForecastModel"], [30, 0, 1, "", "OrnsteinUhlenbeck"], [26, 0, 1, "", "ResidualDemandForwardModel"], [26, 0, 1, "", "ResidualDemandModel"], [28, 0, 1, "", "ScottChesneyModel"], [26, 0, 1, "", "SolarPowerModel"], [28, 0, 1, "", "StochasticLocalVol"], [26, 0, 1, "", "SupplyFunction"], [26, 0, 1, "", "WindPowerForecastModel"], [26, 0, 1, "", "WindPowerModel"]], "rivapy.models.HestonModel": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "call_price"], [28, 1, 1, "", "feller_condition"], [28, 1, 1, "", "get_initial_value"]], "rivapy.models.LinearDemandForwardModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "get_technology"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.LoadModel": [[26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"]], "rivapy.models.LocalVol": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "compute_local_var"]], "rivapy.models.LuciaSchwartz": [[30, 1, 1, "", "compute_expected_value"], [30, 1, 1, "", "compute_fwd_value"], [30, 1, 1, "", "rnd_shape"], [30, 1, 1, "", "simulate"]], "rivapy.models.MultiRegionWindForecastModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 0, 1, "", "Region"], [26, 1, 1, "", "region_names"], [26, 1, 1, "", "region_relative_capacity"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "total_capacity"], [26, 1, 1, "", "udls"]], "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.MultiRegionWindForecastModel.Region": [[26, 1, 1, "", "n_random"], [26, 1, 1, "", "name"], [26, 1, 1, "", "udls"]], "rivapy.models.OrnsteinUhlenbeck": [[30, 1, 1, "", "apply_mc_step"], [30, 1, 1, "", "calibrate"], [30, 1, 1, "", "compute_call_price"], [30, 1, 1, "", "compute_expected_value"], [30, 1, 1, "", "conditional_probability_density"], [30, 1, 1, "", "rnd_shape"], [30, 1, 1, "", "simulate"]], "rivapy.models.ResidualDemandForwardModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "get_technology"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.ResidualDemandModel": [[26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.ScottChesneyModel": [[28, 1, 1, "", "apply_mc_step"]], "rivapy.models.SolarPowerModel": [[26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.StochasticLocalVol": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "calibrate_MC"], [28, 1, 1, "", "get_initial_value"]], "rivapy.models.SupplyFunction": [[26, 1, 1, "", "compute"], [26, 1, 1, "", "plot"]], "rivapy.models.WindPowerForecastModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "eval_call_functions"], [26, 1, 1, "", "get_forward"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.WindPowerForecastModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.WindPowerModel": [[26, 1, 1, "", "calibrate"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.pricing": [[34, 2, 0, "-", "analytics"], [34, 2, 0, "-", "pricing_data"]], "rivapy.pricing.analytics": [[34, 4, 1, "", "compute_european_price_Buehler"], [34, 4, 1, "", "compute_implied_vol_Buehler"]], "rivapy.pricing.pricing_data": [[34, 0, 1, "", "AmericanPdePricingData"], [34, 0, 1, "", "BasePricingData"], [34, 0, 1, "", "Black76PricingData"], [34, 0, 1, "", "BondPricingData"], [34, 0, 1, "", "BondPricingParameter"], [34, 0, 1, "", "CDSPricingData"], [34, 0, 1, "", "PricingResults"], [34, 0, 1, "", "ResultType"]], "rivapy.pricing.pricing_data.AmericanPdePricingData": [[34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.BasePricingData": [[34, 3, 1, "", "pricer"], [34, 3, 1, "", "pricing_request"]], "rivapy.pricing.pricing_data.Black76PricingData": [[34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.BondPricingData": [[34, 3, 1, "", "bond"], [34, 3, 1, "", "discount_curve"], [34, 3, 1, "", "fixing_curve"], [34, 3, 1, "", "parameters"], [34, 3, 1, "", "past_fixing"], [34, 3, 1, "", "recovery_curve"], [34, 3, 1, "", "survival_curve"], [34, 3, 1, "", "valuation_date"]], "rivapy.pricing.pricing_data.CDSPricingData": [[34, 1, 1, "", "par_spread"], [34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.PricingResults": [[34, 1, 1, "", "getPrice"], [34, 1, 1, "", "set_price"]], "rivapy.pricing.pricing_data.ResultType": [[34, 5, 1, "", "DELTA"], [34, 5, 1, "", "GAMMA"], [34, 5, 1, "", "PRICE"], [34, 5, 1, "", "RHO"], [34, 5, 1, "", "THETA"], [34, 5, 1, "", "VANNA"], [34, 5, 1, "", "VEGA"]], "rivapy.pricing.pricing_request": [[32, 0, 1, "", "GreenPPAPricingRequest"]], "rivapy.sample_data.market_data.credit_default": [[36, 0, 1, "", "CreditDefaultData"]], "rivapy.sample_data.market_data.credit_default.CreditDefaultData": [[36, 1, 1, "", "sample"]], "rivapy.sample_data.market_data.spread_curves": [[36, 0, 1, "", "SpreadCurveCollection"], [36, 0, 1, "", "SpreadCurveSampler"]], "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection": [[36, 1, 1, "", "get_curve"]], "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler": [[36, 1, 1, "", "get_curve"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "sample_new"], [36, 1, 1, "", "set_params"]], "rivapy.tools": [[35, 0, 1, "", "DateTimeGrid"], [35, 0, 1, "", "Period"], [35, 0, 1, "", "Schedule"]], "rivapy.tools.DateTimeGrid": [[35, 1, 1, "", "get_daily_subgrid"], [35, 1, 1, "", "get_day_of_week"], [35, 1, 1, "", "get_day_of_year"], [35, 1, 1, "", "get_hour_of_day"], [35, 1, 1, "", "get_minute_of_day"]], "rivapy.tools.Period": [[35, 3, 1, "", "days"], [35, 1, 1, "", "from_string"], [35, 3, 1, "", "months"], [35, 3, 1, "", "years"]], "rivapy.tools.Schedule": [[35, 3, 1, "", "backwards"], [35, 3, 1, "", "business_day_convention"], [35, 3, 1, "", "calendar"], [35, 3, 1, "", "end_day"], [35, 1, 1, "", "generate_dates"], [35, 3, 1, "", "start_day"], [35, 3, 1, "", "stub"], [35, 3, 1, "", "time_period"]], "rivapy.tools.enums": [[35, 0, 1, "", "DayCounterType"], [35, 0, 1, "", "ExtrapolationType"], [35, 0, 1, "", "InflationInterpolation"], [35, 0, 1, "", "InterpolationType"], [35, 0, 1, "", "RollConvention"], [35, 0, 1, "", "SecuritizationLevel"], [35, 0, 1, "", "VolatilityStickyness"]], "rivapy.tools.enums.DayCounterType": [[35, 5, 1, "", "ACT252"], [35, 5, 1, "", "ACT360"], [35, 5, 1, "", "ACT_ACT"], [35, 5, 1, "", "Act365Fixed"], [35, 5, 1, "", "ThirtyE360"], [35, 5, 1, "", "ThirtyU360"]], "rivapy.tools.enums.ExtrapolationType": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "LINEAR"], [35, 5, 1, "", "LINEAR_LOG"], [35, 5, 1, "", "NONE"]], "rivapy.tools.enums.InflationInterpolation": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "GERMAN"], [35, 5, 1, "", "JAPAN"], [35, 5, 1, "", "UNDEFINED"]], "rivapy.tools.enums.InterpolationType": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "CONSTRAINED_SPLINE"], [35, 5, 1, "", "HAGAN"], [35, 5, 1, "", "HAGAN_DF"], [35, 5, 1, "", "LINEAR"], [35, 5, 1, "", "LINEAR_LOG"]], "rivapy.tools.enums.RollConvention": [[35, 5, 1, "", "FOLLOWING"], [35, 5, 1, "", "MODIFIED_FOLLOWING"], [35, 5, 1, "", "MODIFIED_FOLLOWING_BIMONTHLY"], [35, 5, 1, "", "MODIFIED_FOLLOWING_EOM"], [35, 5, 1, "", "MODIFIED_PRECEDING"], [35, 5, 1, "", "NEAREST"], [35, 5, 1, "", "PRECEDING"], [35, 5, 1, "", "UNADJUSTED"]], "rivapy.tools.enums.SecuritizationLevel": [[35, 5, 1, "", "COLLATERALIZED"], [35, 5, 1, "", "EQUITY"], [35, 5, 1, "", "MEZZANINE"], [35, 5, 1, "", "NONE"], [35, 5, 1, "", "NON_PREFERRED_SENIOR"], [35, 5, 1, "", "PREFERRED_SENIOR"], [35, 5, 1, "", "SENIOR_SECURED"], [35, 5, 1, "", "SENIOR_UNSECURED"], [35, 5, 1, "", "SUBORDINATED"]], "rivapy.tools.enums.VolatilityStickyness": [[35, 5, 1, "", "NONE"], [35, 5, 1, "", "StickyFwdMoneyness"], [35, 5, 1, "", "StickyStrike"], [35, 5, 1, "", "StickyXStrike"]], "rivapy.tools.example_docstring": [[0, 0, 1, "", "DocStringExample"]], "rivapy.tools.interfaces": [[33, 0, 1, "", "DateTimeFunction"]], "rivapy.tools.interfaces.DateTimeFunction": [[33, 1, 1, "", "compute"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [0, 5, 6, 7, 9, 11, 13, 16, 17, 20, 26, 28, 30, 35], "0": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 26, 28, 30, 34, 35, 36], "000": 5, "0003": 6, "001": 26, "0018e": 13, "0036": 7, "0052": 7, "0059": 6, "0064": 7, "0065": 6, "00689862": 14, "0086": 6, "01": [5, 28], "0101": 6, "01461317": 14, "0192": 7, "02": [6, 21], "0230": 7, "024": 5, "0272": 7, "03": 6, "0329": 7, "0389": 7, "0396": 7, "04": 13, "041": 5, "0437": 7, "0452": 7, "04721905": 14, "0486": 7, "0492": 7, "05": [9, 13, 21, 34], "0504": 7, "0546": 7, "0594": 7, "05a": 13, "06": 13, "0604": 7, "0606": 7, "07": 9, "07224311": 14, "0741": 7, "0742": 7, "0748": 7, "077": 8, "0778": 7, "0795": 7, "0800": 7, "08113649": 14, "0840": 7, "094": 5, "0984": 7, "1": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 26, 28, 30, 34, 35, 36], "10": [5, 6, 7, 9, 10, 11, 13, 14, 21, 23, 26, 30], "100": [5, 7, 8, 9, 10, 11, 12, 13, 17, 26], "1000": [7, 13, 26], "10000": 7, "100_000": [8, 13], "101": [7, 14], "1013846631785": 30, "102": [5, 7, 8], "1023": 30, "10256533": 14, "103": 7, "104": [7, 8], "105": 7, "106": [7, 14], "107": [7, 8], "1076": 7, "1077": 7, "108": 7, "109": 7, "10_000": [7, 8, 9, 10, 11, 12, 13], "10m": 7, "10yr": 23, "11": [5, 6, 7, 8, 9, 10, 11, 13, 35], "110": 7, "111": 7, "112": 7, "113": 7, "114": 7, "115": 7, "116": 7, "117": [7, 14], "118": 7, "1187": 7, "119": 7, "11m": 7, "12": [5, 7, 10, 11, 12, 13, 14], "120": [7, 14, 21], "120_000": [7, 11], "121": 7, "122": 7, "123": 7, "124": [7, 14], "12449773": 14, "125": 7, "126": 7, "127": 7, "128": 7, "129": 7, "12m": 7, "13": [5, 7, 13], "130": 7, "131": 7, "1315": 7, "132": 7, "133": 7, "134": 7, "1345": 7, "135": 7, "1358": 7, "136": 7, "137": 7, "138": [5, 7], "139": 7, "14": [5, 7, 11, 12, 13], "140": 7, "141": 7, "142": 7, "143": 7, "1433": 7, "144": [7, 14], "1440": 7, "145": 7, "146": 7, "1461": 7, "147": 7, "148": 7, "149": 7, "14m": 7, "15": [5, 7, 8, 13], "150": [7, 14], "151": 7, "152": 7, "153": [7, 14], "154": 7, "155": 7, "156": 7, "157": 7, "1573": 7, "158": 7, "15811348": 7, "159": 7, "15m": 7, "16": [5, 7, 8, 9, 13, 14], "160": 7, "161": 7, "162": 7, "1623": 7, "163": 7, "164": 7, "165": 7, "1652": 7, "166": 7, "167": 7, "168": 7, "169": 7, "17": [7, 9, 13], "170": 7, "171": 7, "17195511": 7, "172": 7, "1720": 7, "1725": 7, "173": 7, "174": 7, "175": 7, "176": 7, "17623418": 14, "177": 7, "177259": 13, "177279": 13, "1776": 7, "178": 7, "179": 7, "18": [7, 9, 13], "180": [6, 7, 10], "181": 7, "182": 7, "183": 7, "184": 7, "1848": 7, "185": 7, "186": 7, "1866": 7, "187": 7, "18714333": 7, "188": 7, "1884": 7, "189": 7, "19": [7, 13], "190": 7, "191": 7, "1912": 7, "1913": 7, "1915637": 14, "192": 7, "1920": 23, "193": 7, "194": 7, "195": 7, "1950": 7, "196": 7, "197": 7, "198": 7, "199": 7, "1bp": 5, "1h": [14, 20, 25, 35], "1m": 13, "1y": [17, 35], "2": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 26, 28, 34, 35, 36], "20": [7, 8, 13, 14], "200": [7, 34], "2002": 30, "2008": 6, "2012": [5, 26], "2015": 7, "2017": 6, "2018908": 26, "2019": 5, "2020": 35, "2021": [5, 35], "2022": [5, 14], "2023": [7, 9, 13, 14, 20, 21], "2027": 7, "2033323": 23, "2050e": 13, "2057733429": 13, "2063": 7, "2063e": 13, "2071": 7, "2094": 7, "2097": 7, "2099e": 13, "21": [7, 12, 35], "2104": 7, "2132e": 13, "2139": 26, "22": [7, 12, 13], "2222": 7, "22650758": 14, "22908045": 14, "2296": 7, "23": [7, 12], "24": [7, 11, 13, 14, 23, 26], "2419": 7, "25": [7, 9, 14], "250": [7, 13], "2567": 7, "26": 7, "2610": 7, "26119041": 7, "2641": 7, "27": [7, 14], "2700": 7, "27188838": 14, "2791": 7, "28": [7, 10], "2849": 7, "2886": 7, "2896": 7, "29": [7, 8, 9, 13], "2935": 7, "2f": [10, 12], "2m": [7, 13], "3": [5, 6, 7, 8, 9, 11, 13, 20, 23, 34, 35], "30": [5, 7, 14, 21, 34], "300": [6, 12], "3058": 7, "3094e": 13, "30d": 5, "30e360": 35, "30u360": 35, "31": [7, 12, 14], "31010233": 14, "3125": 7, "313": [7, 13], "3196": 7, "32": [7, 13], "3217": 7, "3237": 7, "3255": 7, "3296": 7, "33": 7, "3316": 7, "3353e": 13, "3395": 7, "33955937000052": 14, "34": 7, "3400e": 13, "3430e": 13, "3455": 7, "3459": 7, "34946064": 14, "3494e": 13, "35": [7, 14], "36": [7, 14], "3628": 7, "3632": 7, "3636": 7, "365": [6, 8, 9, 10, 11, 12, 13, 23, 26], "3650": 23, "37": [7, 13, 14], "38": 7, "3876": 7, "3880": 7, "38856324": 14, "3887": 7, "39": [7, 8, 9, 10, 11, 13, 14], "3911": 7, "3m": [7, 13], "4": [5, 6, 7, 9, 11, 12, 13, 14, 20, 23, 26, 34], "40": [7, 10, 12], "400": [7, 11, 13], "4032": 7, "4047": 7, "40655705": 14, "4071": 7, "4086": 7, "4093": 7, "41": [7, 14], "4141": 7, "4154": 7, "4197": 7, "42": [7, 10, 11, 12, 13, 14], "4217": 18, "4218": 7, "43": [7, 14], "4303e": 13, "4321": 7, "4335e": 13, "44": [7, 14], "4402": 7, "44033623": 7, "4417": 7, "4448": 7, "44512558": 7, "45": [7, 12], "4545": 7, "46": [7, 12], "4609": 7, "46445778": 14, "4688": 7, "47": 7, "4701e": 13, "4706": 7, "4707756": 7, "4734": 7, "47875851": 14, "48": [7, 13], "4807": 7, "48219098": 14, "4872": 7, "48726577": 14, "4873": 7, "49": 7, "4946": 7, "4963": 7, "4m": [7, 13], "4th": 6, "5": [5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 28, 30, 34, 35, 36], "50": [7, 11, 14, 30], "5013": 7, "5057": 7, "5070": 7, "508": 5, "5089": 7, "50994349": 7, "51": 7, "5113": 7, "5151421": 14, "52": [7, 10, 14], "5205": 7, "52760532": 14, "5281": 7, "5292": 7, "53": [7, 10], "5345": 7, "5377": 7, "53804398": 7, "53898621": 7, "54": [7, 10], "5415": 7, "54989147": 7, "55": [7, 10, 14], "5523": 7, "5578": 7, "56": [5, 7, 10, 14], "5614": 7, "5636": 7, "56582072": 14, "5680": 7, "5682": 7, "56825408": 14, "57": [7, 10, 11, 13], "5723": 7, "5764": 7, "58": 7, "5881": 7, "5896": 7, "5899": 7, "59": [5, 7], "59260888": 14, "5941": 7, "5947e": 13, "59769197": 14, "5e": [7, 13], "5m": 7, "5th": 6, "5yr": 9, "6": [5, 6, 7, 9, 11, 12, 13, 14, 20, 26, 34, 35], "60": [7, 34], "6003e": 13, "6024": 7, "6051": 7, "6052": 7, "6060": 7, "6065": 7, "6082": 7, "61": 7, "6114": 7, "61169815": 7, "62": 7, "6200": 7, "6208": 7, "6272": 7, "63": 7, "6346302": 7, "63575482": 14, "6373": 7, "6378": 7, "64": [7, 9, 13], "6425": 7, "6431": 7, "6435": 7, "64533424": 7, "6486": 7, "65": [7, 11], "65277778": 14, "658": 5, "65894031": 14, "66": 7, "6651": 7, "6652": 7, "66679196": 14, "6689e": 13, "67": [7, 13], "6717": 7, "6763": 7, "68": [7, 11], "680": 5, "6811": 7, "6875": 7, "6876": 7, "69": 7, "69465256": 7, "6965": 7, "6972": 7, "6m": [7, 35], "7": [5, 6, 7, 10, 11, 12, 13, 26], "70": [7, 14], "7014": 7, "7022": 7, "7038": 7, "71": 7, "7104": 7, "7149": 7, "72": 7, "720": 6, "7209": 7, "7241621": 7, "7251": 7, "726": 5, "73": [7, 14], "74": 7, "7421": 7, "7443": 7, "7481": 7, "75": [7, 11], "7541e": 13, "7550": 7, "75_000": [7, 11], "76": 7, "7625": 7, "77": 7, "7719": 7, "7734": 7, "78": 7, "7818": 7, "7835": 7, "7846": 7, "78492806280833": 10, "78853215": 14, "79": 7, "7964592": 7, "7986522910880403": 12, "8": [5, 6, 7, 10, 11, 12, 13, 26, 35], "80": [7, 13, 14, 26], "800": 5, "8045": 7, "8088": 7, "81": [7, 8, 14], "8107": 7, "8145": 7, "8150": 7, "8181": 7, "81824448": 14, "82": [7, 14], "8205": 7, "8207e": 13, "83": 7, "8327": 7, "83472586": 14, "8396e": 13, "84": 7, "8431": 7, "8447": 7, "8472": 7, "85": [7, 13, 14], "86": 7, "860283": 9, "860298": 9, "8608": 7, "8617": 7, "8637": 7, "8670": 7, "87": 7, "8701": 7, "8704": 7, "8753": 7, "88": [7, 14], "8848": 7, "89": [7, 14], "8905": 7, "8921": 7, "89261341": 7, "8_000": [7, 13], "8m": 7, "8th": 5, "9": [5, 6, 7, 13], "90": [5, 6, 7], "90576107": 14, "91": [7, 14], "91135311": 7, "92": 7, "9283": 7, "93": 7, "93505478": 7, "93655777": 7, "9377141": 7, "93932056": 7, "94": 7, "94349718": 7, "94514942": 7, "9483": 7, "95": [7, 36], "9541502": 7, "9591e": 13, "96": 7, "96342516": 7, "96750641": 7, "9687": 7, "97": 7, "9708209": 7, "97665215": 7, "98": [7, 8], "9853143806656076": 6, "98755884": 7, "98860263": 14, "99": [7, 10, 13, 26], "9926300321180352": 6, "99336384": 14, "9956": 7, "9m": 7, "A": [0, 1, 5, 6, 28, 35], "ATS": 5, "And": 0, "As": [0, 5, 36], "At": [3, 5], "Be": 0, "But": 0, "By": [8, 20, 25, 30], "For": [0, 5, 6, 7, 9, 11, 36], "If": [5, 6, 16, 17, 20, 21, 25, 30, 32, 35], "In": [0, 5, 8, 9, 10, 20, 30], "It": [0, 2, 5, 9, 11, 20, 21, 25, 26, 30, 34, 36], "No": [9, 13], "Not": 28, "One": [5, 25, 30], "Such": 5, "That": 26, "The": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 25, 26, 28, 30, 35, 36], "There": 24, "These": [5, 24], "To": [0, 3, 6, 7, 11, 12, 14], "_": 26, "__init__": [8, 9, 10, 11, 13], "_create_sampl": [16, 17, 36], "_description_": [0, 16, 21, 26, 28, 30, 36], "_holidaybas": 35, "_inv_logit": 12, "_list": 17, "_logger": 0, "_logit": 12, "_path": 12, "_summary_": [21, 28], "_type_": [26, 28], "_union": [17, 35], "_volatilityparametrizationexpiri": 23, "aaa": 16, "ab": [7, 13], "abbrevi": 0, "abc": 33, "abl": 5, "about": [0, 6, 8, 30], "abov": [5, 6, 9, 13, 21, 23, 30, 36], "absolut": [17, 20, 26], "abstract": 33, "abstract_id": 23, "accept": 35, "accoci": 5, "accord": [5, 6, 20, 28, 35, 36], "account": 5, "accru": 5, "accrual": 35, "accrual_start": 17, "act252": 35, "act360": 35, "act365": 21, "act365fix": [6, 21, 35], "act_act": 35, "actact": 35, "action": 5, "ad": [6, 35], "addit": 5, "addition": [5, 6], "additional_st": [7, 13], "additive_correct": 26, "adequ": 36, "adjust": [5, 35], "advanc": [8, 30], "advantag": 6, "aforment": 0, "after": [5, 6, 7, 11, 17, 21, 26, 36], "ag": 36, "against": [5, 20], "agent": 5, "agre": 5, "agreement": 19, "align": 5, "all": [1, 5, 6, 8, 9, 10, 11, 13, 16, 17, 20, 21, 24, 26, 35, 36], "allow": [5, 6, 9, 21, 35], "alpha": [7, 8, 9, 10, 11, 12, 13, 23, 28], "alpha_t": 23, "alphabet": 17, "alreadi": [5, 7, 12, 14], "also": [0, 5, 6, 8, 9, 24], "altern": 5, "alwai": [0, 1], "ambigu": 0, "american": 18, "americanpdepricingd": 34, "americanpdepricingdata": 34, "americanvanillaspecif": 19, "amount": [5, 20, 26, 36], "an": [0, 5, 6, 9, 11, 21, 23, 24, 25, 26, 30, 34, 35, 36], "analogon": 5, "analysi": 2, "analyst": [8, 30], "analyt": [6, 34], "andrea": 26, "ani": 5, "annex": 5, "annual": 6, "annum": 5, "anoth": 5, "api": 0, "append": [7, 8, 9, 10, 11, 14], "appli": [5, 6, 20, 23, 26, 28], "applic": 26, "apply_mc_step": [28, 29, 30], "approach": 5, "approx": 12, "approxim": [8, 12], "ar": [0, 1, 5, 6, 8, 16, 20, 21, 23, 24, 25, 26, 28, 30, 35, 36], "arang": 9, "arbitrag": 5, "arbitrari": [6, 21], "arepsilon": 30, "arg": 30, "argmin": [7, 13], "argument": [0, 6, 13, 14, 21, 23, 30], "around": 9, "arrai": [7, 8, 14, 16, 23, 25, 28, 30], "arriv": 10, "artifici": 11, "asctim": 0, "asia": [20, 25], "ask": 5, "asset": 5, "assum": [5, 8, 11, 17, 20, 23, 30], "assumpt": 6, "asymptot": 21, "atm": 23, "automat": 5, "autoreload": [6, 7, 8, 10, 11, 12, 13, 14], "avail": [8, 9, 10, 11, 13], "averag": [8, 9, 30], "avoid": 0, "axhlin": [7, 13], "axi": [10, 12], "axvlin": [7, 13], "b": [0, 6, 8, 10, 23, 36], "back": [5, 8, 30], "backbond": 23, "backward": 35, "bank": [5, 35], "bar": 26, "barrierspecif": 19, "base": [6, 17, 19, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 36], "basedatedcurv": 34, "basefwdmodel": 26, "basekt": 5, "basemodel": 26, "basepricingdata": 34, "basi": [5, 36], "basicconfig": 0, "basket": 5, "batch_siz": [7, 13], "becom": 5, "been": [5, 36], "befor": [6, 18, 20], "begin": [5, 35], "behavior": [8, 9, 30], "being": [0, 5, 35], "belong": [20, 21, 36], "below": [5, 36], "benefit": 5, "best": [0, 5], "beta": [23, 36], "beta0": 21, "beta1": 21, "beta2": 21, "beta3": 21, "beta_0": 21, "beta_1": 21, "beta_2": 21, "between": [5, 6, 12, 21, 23, 26, 28, 30, 35], "biggl": 23, "biggr": 23, "bigl": 23, "bigr": 23, "billion": 5, "bin": [7, 9, 10, 11, 12, 13], "black": 34, "black76pricingd": 34, "black76pricingdata": 34, "bond": [5, 19, 34, 36], "bond_specif": 17, "bondbasespecif": 34, "bondpric": 34, "bondpricingdata": 34, "bondpricingparamet": 34, "bondpricingrequest": 34, "book": 5, "bool": [17, 18, 20, 21, 28, 30, 32, 34, 35], "borrow": 5, "borrow_curv": 23, "both": [5, 35], "bought": 5, "boundari": [34, 35], "bp": 5, "brentq": 34, "brownian": 23, "bsic": 23, "buehler": 34, "bui": 5, "built": 0, "bunch": 36, "busi": [5, 35], "business_day_convent": 35, "buyer": [5, 17], "c": [6, 8, 10, 11, 36], "cal": 34, "calc_implied_vol": 23, "calcul": [5, 6, 23, 28, 32], "calendar": 35, "calibr": [26, 28, 29, 30, 36], "calibrate_mc": [28, 29], "call": [0, 5, 6, 12, 13, 18, 28, 30, 34], "call_param": 28, "call_pric": [28, 29], "callabl": [21, 26, 30], "can": [0, 2, 5, 6, 8, 9, 10, 18, 21, 28, 30, 34, 36], "cannot": [9, 13], "cap": 26, "capac": [5, 7, 10, 11, 13, 20, 26], "capacity_solar": [14, 26], "capacity_wind": [14, 26], "capit": 5, "captur": 9, "care": 0, "carri": 5, "case": 5, "cash": [1, 5, 32], "cash_settl": 17, "cashflow": [1, 6, 17], "cc": [9, 13], "cdot": [5, 26], "cdot100": 5, "cds_specif": 17, "cdspricingdata": 34, "cdsspecif": [17, 34], "cell": 11, "central": 5, "certain": [1, 5, 8, 36], "cev": 23, "cf_expect": [14, 32], "cf_path": [14, 32], "cfm": 23, "chang": [5, 8, 9, 30], "characterist": 28, "cheapest": 5, "check": [0, 6, 20], "checker": 0, "chesnei": 29, "chi": 23, "choos": 6, "chosen": 16, "circumst": 0, "cite": 0, "class": [0, 2, 5, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36], "classifi": 5, "classnam": 0, "clearstream": 5, "close": [5, 13, 14], "coars": 6, "code": [0, 6, 11, 18], "coeffici": 36, "collater": [18, 35], "collateralis": 5, "collect": 36, "color": 11, "column": 28, "com": 23, "comb": 13, "combin": [5, 36], "combospecif": [15, 19], "come": [5, 10], "command": 6, "commit": 5, "commod": 8, "commoditii": 9, "common": [5, 24], "commonli": 5, "compar": [5, 6, 21], "compat": 28, "compens": 5, "compensatori": 5, "compil": 13, "complex": [8, 30], "compli": 35, "compon": [15, 19, 23], "compound": [5, 6, 21], "comput": [5, 8, 21, 23, 26, 28, 30, 33, 34, 35, 36], "compute_call_pric": [29, 30], "compute_delta": [7, 13], "compute_european_price_buehl": 34, "compute_expected_valu": [12, 29, 30], "compute_flow": 20, "compute_fwd_valu": [8, 29, 30], "compute_implied_vol_buehl": 34, "compute_local_var": [28, 29], "compute_pnl": [7, 13], "compute_pnl_figur": [7, 13], "condit": [5, 8, 26, 28, 30], "conditional_probability_dens": [29, 30], "conduct": 5, "configur": [13, 34], "conjunct": 21, "consecut": 35, "consid": [0, 8, 9, 10, 11, 13], "consist": [5, 20, 35], "consistet": 36, "constant": [6, 20, 21, 23, 30, 35, 36], "constantr": 21, "constrained_splin": 35, "construct": [6, 36], "constructor": [0, 17, 18, 21, 34, 35], "contain": [0, 6, 7, 11, 13, 14, 20, 23, 28, 30, 36], "context": 9, "continu": [6, 21], "continuo": 30, "contract": [5, 8, 17, 18, 20], "contractu": 5, "contrast": [6, 20, 26], "control": 21, "convent": [5, 6, 35], "convert": 6, "convex": 6, "copor": 5, "copula": 36, "corpor": 5, "correct": [0, 6, 26], "correl": [5, 23, 28, 30], "correspond": [5, 6, 11], "could": [9, 13], "council": 5, "count": 6, "counter": 6, "counterparti": 5, "countri": [16, 35, 36], "country_curv": 36, "country_prob": 16, "country_weight": 36, "coupon": [17, 35], "coupon_freq": 17, "cov": 36, "covari": 36, "cover": [5, 18], "creat": [35, 36], "creation": 36, "credit": [2, 5, 15, 19], "credit_default": 36, "creditdefaultdata": 36, "cuda": [9, 13], "cuda_visible_devic": 13, "cudart": [9, 13], "cudart_stub": [9, 13], "curr": 18, "currenc": [1, 17, 18, 36], "currency_spread": 36, "current": [0, 5, 6, 8, 9, 10, 12, 23, 26, 28, 30, 35, 36], "curv": [15, 24, 25, 34, 36], "curvatur": 23, "custodi": 5, "custodian": 5, "cycl": 5, "d": [5, 6, 16, 21, 23, 26, 28, 30, 35], "dai": [5, 6, 7, 11, 13, 18, 21, 23, 26, 34, 35], "daili": [5, 9, 35], "dailti": 5, "daily_maximum_process": 26, "danger": 0, "data": [2, 6, 9, 11, 16, 18, 24, 26, 30], "datafram": [20, 25, 26, 36], "datapoint": [30, 35], "date": [5, 6, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 34], "date_rang": [13, 14, 20, 25, 35], "datetim": [6, 7, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 25, 26, 33, 34, 35, 36], "datetime_grid": [7, 10, 11, 12, 13, 14, 35], "datetimefunct": [15, 33], "datetimegrid": [7, 10, 11, 12, 13, 15, 20, 26, 33], "datetimeindex": 35, "datetimepint": 25, "datetimepoint": [20, 25], "daycount": [21, 23, 35], "daycountertyp": [6, 21, 23, 35], "days_end": 23, "days_to_matur": 6, "dc": [6, 21], "dc_hagan": 6, "dc_linear": 6, "deal": 35, "debug": [0, 14], "decai": 23, "decay_r": [7, 13], "decay_step": [7, 13], "decid": 0, "decis": [5, 8, 30], "declar": 0, "decreas": 5, "deephedgemodel": [7, 13], "def": [7, 13], "default": [2, 5, 9, 13, 16, 18, 19, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35], "defaulti": 5, "defin": [2, 6, 10, 11, 16, 18, 20, 21, 35, 36], "definit": [17, 23], "delet": 0, "deliv": [5, 20], "deliveri": [5, 8, 20, 30], "delta": [30, 34], "delta_t": 30, "demand": [5, 8, 26, 30], "demonstr": [5, 11], "denot": [9, 11, 26], "densiti": [7, 9, 11, 13], "depend": [6, 9, 20, 26, 30], "depositori": 5, "depp": [0, 7, 13], "deprec": [13, 14], "depth": [0, 6, 7, 13], "deriv": [6, 20, 30], "describ": [0, 5, 6, 8, 20, 28], "descript": [0, 5, 17, 22, 23, 28, 30, 34, 36], "desir": 6, "detail": [20, 25, 30, 35, 36], "determin": [1, 5, 6, 8, 9, 23, 30, 34, 36], "determinist": [26, 30], "develop": [2, 3, 8, 9, 10, 11, 13, 14], "deviat": 0, "deviation_model": 26, "deviation_process": 26, "df": [6, 21], "df1": 6, "df2": 6, "df_t": 23, "diagram": 6, "dict": [20, 26, 36], "dict_kei": 13, "dictionari": 20, "did": 36, "differ": [0, 2, 6, 11, 12, 26, 28, 30, 36], "difficulti": 5, "dimension": [23, 25, 28, 30], "direct": 35, "directli": [0, 5, 21, 23], "directori": [9, 13], "dirti": 5, "discount": [15, 23, 24, 34], "discount_curv": [23, 34], "discount_factor": [6, 21], "discount_r": 6, "discountcurv": [0, 6, 23, 24, 34], "discountcurveparametr": 24, "discoutn": 6, "discrep": 5, "discret": [5, 30], "discuss": 30, "displai": [13, 14], "distanc": 35, "distinct": 21, "distinctli": 5, "distribut": [10, 12, 36], "div_cash": 22, "div_tabl": 23, "div_yield": 22, "divid": [5, 6], "dividend": [18, 23, 24, 30, 34], "dividendt": [22, 23], "dlerror": [9, 13], "do": [0, 5, 9, 13], "doc": [8, 10, 11], "docstringexampl": 0, "document": [0, 20, 25, 35], "doe": [21, 30], "doeltz": [8, 9, 10, 11, 13, 14], "doi": [26, 30], "done": 9, "dot": 28, "down": 5, "downloaf": 3, "dpi": 11, "drawn": 36, "drift": [9, 30], "drive": 23, "driven": [5, 23], "driver": 5, "dsc_fac": 6, "dso_load": [9, 13], "dt": [6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 23, 25, 26, 28, 30, 35, 36], "dt_grid": 33, "due": 5, "dure": [0, 5], "dw_": 28, "dw_2": 30, "dw_t": [9, 23, 26, 30], "dw_y": 28, "dx": [26, 30], "dx_1": 30, "dx_2": 30, "dx_t": 9, "dy": 28, "dynam": [9, 13], "e": [0, 6, 11, 12, 17, 20, 21, 23, 26, 28, 30, 34, 35, 36], "e_t": [26, 30], "each": [0, 5, 16, 17, 20, 23, 25, 28, 30, 35, 36], "earlier": 5, "easi": 11, "ecb": 35, "economi": [8, 30], "eduardo": 30, "effect": [5, 10, 23], "effici": [5, 11, 12, 26], "either": [5, 6, 9, 20, 21, 30, 35], "electr": [8, 26, 30], "electron": [5, 26], "element": 16, "els": [7, 13], "empti": 9, "enabl": [0, 5], "encapsul": 1, "encod": 36, "encount": 30, "end": [5, 13, 14, 20, 23, 25, 30, 35], "end_dai": 35, "enddat": 35, "ends_onli": 35, "energi": [8, 15, 20, 29, 30], "enough": 0, "ensembl": 6, "ensur": [6, 26, 35], "enter": 6, "entitl": 5, "enum": [6, 15, 18, 21, 23, 36], "environ": 13, "epoch": [7, 13], "equal": [6, 16, 21, 25, 26, 30], "equiti": [5, 15, 19, 24, 29, 35], "equityforwardcurv": 23, "equival": 5, "erc": 5, "error": [0, 6], "esg": 36, "esg_rat": 16, "esg_rating_prob": 16, "esg_spread": 36, "esgrat": [16, 36], "estim": 1, "eta": 23, "etc": [34, 35], "eu": 5, "euler": [28, 30], "eur": [5, 17, 18], "euroclear": 5, "europ": 5, "european": 18, "europeanvanillaspecif": 19, "eval_call_funct": 26, "evalu": 2, "even": 35, "event": [1, 5, 8, 30], "everi": [0, 6], "evid": 30, "evolut": 9, "ex": 18, "ex_dat": 22, "exactli": [6, 8], "exampl": [0, 5, 6, 9, 20, 21, 25, 26, 35, 36], "example_docstr": 0, "exce": 5, "exceed": 5, "except": [5, 6, 16, 21, 23, 25, 34, 35, 36], "exceptionnam": 0, "exchang": [5, 30], "exclud": [20, 25], "exempt": 0, "exercis": 18, "exercise_before_ex_d": 18, "exist": [0, 35], "exp": 6, "expect": [0, 5, 17, 26, 30], "expected_": 12, "expected_cashflow": 17, "expir": [18, 23], "expiri": [5, 10, 11, 12, 13, 17, 18, 23, 26], "explain": [8, 11, 30], "explicit": [16, 30], "exploit": 5, "expos": 5, "exposur": 5, "express": [5, 23, 35], "extens": [7, 12, 14], "extrapol": [6, 21], "extrapolationtyp": [6, 21, 35], "f": [0, 7, 8, 11, 13, 21, 23, 26, 30], "f_t": 23, "face": [5, 17], "facilit": 5, "fact": 5, "factor": [8, 20, 21, 23, 30], "factoryobject": [7, 13, 21, 26, 30, 36], "failur": [8, 30], "fair": 1, "fals": [6, 18, 21, 32, 35], "fanci": 36, "faq": 5, "farest": 23, "fast": [9, 30], "faster": 30, "favor": [13, 14], "featur": [20, 36], "fee": 5, "feed": 5, "feller": 28, "feller_condit": [28, 29], "few": 5, "fice": 5, "figsiz": [7, 9, 10, 11, 12, 13], "figur": [6, 7, 9, 10, 11, 12, 13, 30, 36], "file": [0, 9, 11, 13], "filenam": [0, 23], "fill_valu": [7, 13], "final": [6, 7, 9, 10, 13, 17, 36], "financ": [5, 9], "financi": [2, 5, 6], "find": [0, 6], "fine": 6, "first": [0, 6, 16, 17, 28, 30, 35, 36], "first_coupond": 17, "fist": 35, "fit": 30, "fix": [5, 8, 17, 20, 35, 36], "fixed_pric": [7, 13, 14, 20], "fixing_curv": 34, "fk": 23, "flag": [17, 35], "flat": [6, 21, 23, 36], "float": [0, 5, 17, 18, 20, 21, 22, 23, 26, 28, 30, 34, 36], "floor": 26, "flow": [1, 5, 32], "fluctuat": 9, "foat": 17, "folder": 0, "follow": [0, 5, 6, 7, 11, 30, 35, 36], "fontsiz": 11, "forad": 25, "forecast": [7, 11, 20, 27, 29], "forecast_amount": 20, "forecast_hour": [7, 13], "forecast_point": 10, "forecast_timepoint": [10, 26], "form": [3, 28], "format": [0, 10, 12], "formula": [0, 21, 23, 36], "forward": [6, 10, 11, 21, 23, 25, 27, 29, 30, 35], "forward_curv": 23, "forward_expiri": [11, 13, 26], "forward_start_valu": 30, "forwardsimulationresult": 26, "found": 13, "four": [7, 11], "frac": [5, 8, 21, 23, 26, 30, 36], "fraction": [6, 17], "framework": [0, 8, 30], "freq": [13, 14, 20, 25, 35], "frequenc": [6, 17, 20, 25, 35], "frequent": 5, "from": [0, 1, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 26, 28, 30, 34, 35, 36], "from_str": [17, 35], "fuel": [8, 30], "fulfil": 28, "full": [5, 7, 13], "fullfil": 28, "function": [0, 6, 8, 9, 10, 11, 13, 21, 23, 25, 26, 28, 30, 35, 36], "function_nam": 0, "function_parameter_nam": 0, "fund": 5, "funding_curv": 23, "further": [5, 20, 25], "furthermor": 5, "futur": [1, 5, 6, 9, 11, 21], "futurewarn": [13, 14], "fwd": 6, "fwd0": 11, "fwd_atm_vol": 23, "fwd_df": 6, "g": [0, 11, 17, 20, 30, 35], "galleri": 2, "gamma": [23, 34], "gaussian": 36, "gc": 5, "gener": [6, 16, 20, 25, 28, 35, 36], "generate_d": 35, "geopanda": 11, "geopandas_residual_demand_forward_model": 11, "german": 35, "get": [6, 10, 11, 12, 17, 23, 26], "get_color": 11, "get_curv": 36, "get_daily_subgrid": 35, "get_dat": 21, "get_day_of_week": 35, "get_day_of_year": 35, "get_df": [20, 21, 25], "get_eta": 23, "get_forward": 26, "get_fwd_atm_vol": 23, "get_gamma": 23, "get_hour_of_dai": 35, "get_initial_valu": [28, 29], "get_minute_of_dai": 35, "get_param": 20, "get_rho": 23, "get_schedul": [14, 20], "get_technologi": 26, "getlogg": [0, 14], "getpric": 34, "getter": [16, 34, 35], "github": 3, "give": [5, 6, 21], "given": [5, 6, 9, 11, 21, 23, 26, 28, 30, 34, 35, 36], "global": [0, 5], "global_constant_nam": 0, "global_var_nam": 0, "glossari": 2, "gmra": 5, "go": 5, "good": 0, "googl": 0, "got": 13, "govern": [5, 8, 30], "gpu": [9, 13], "grant": 5, "granular": 6, "graph": 6, "greeen": 11, "green": [19, 32], "green_ppa": 14, "green_ppa_mean_pric": 14, "green_ppa_pr": [7, 13], "greenppadeephedgingpric": [7, 13], "greenppapricingrequest": [14, 31, 32], "greenppaspecif": [7, 13, 14, 20], "grid": [9, 11, 23, 28, 35], "gt": 13, "guid": [2, 5], "h": [5, 7, 13], "ha": [0, 5, 6, 9, 25, 30], "hagan": [6, 35], "hagan_df": [6, 21, 35], "haircut": 5, "hand": 10, "handl": [1, 2, 10, 24, 35, 36], "hash": [7, 13], "hash_for_dict": [7, 13], "hash_kei": [7, 13], "have": [3, 5, 9, 11, 13, 24, 26, 36], "he": 5, "hedg": 5, "hedge_model": [7, 13], "hedge_result": [7, 13], "help": [6, 8, 30], "helper": 6, "henc": [5, 6], "here": [0, 1, 6, 9, 11, 17, 21, 26, 30, 36], "heston": 29, "hestonmodel": [28, 29], "heta": 28, "high": 5, "higher": [5, 30, 36], "highest_pric": 26, "highest_price_ou_model": 26, "hint": 0, "hist": [7, 9, 10, 11, 12, 13], "histori": 9, "hold": [5, 25], "holidai": 35, "holidaybas": 35, "holidays_d": 35, "home": [9, 13, 14], "hong_kong": [20, 25], "horizon": 9, "hot": 36, "hour": [7, 11, 20], "how": [9, 11, 30], "howev": 5, "hpfc": 14, "hqla": 5, "html": [13, 14], "http": 23, "hump": 21, "i": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "i_0": 11, "i_t": 11, "ic": 26, "ic_t": 26, "icma": 5, "id": [6, 16, 17, 18, 20, 21, 22, 23, 25], "identifi": [6, 18, 20, 21, 23, 24, 25, 26], "ignor": [9, 13, 20, 28], "illustr": [5, 7], "im": 5, "imag": 5, "immedi": 5, "impact": 25, "implement": [5, 26], "impli": [23, 28, 34], "implicit": 5, "import": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 35], "inabl": 5, "includ": [0, 5, 20, 21, 25, 35], "inclus": [13, 14, 35], "incom": [5, 36], "incomplet": 35, "increas": 5, "independ": [5, 36], "index": [2, 5, 20], "indic": [10, 17, 18, 35, 36], "indiffer": 5, "individu": 0, "inflationinterpol": 35, "influenc": [5, 8, 30], "inform": [1, 6, 8, 30], "init": 5, "initi": [5, 11, 26, 28, 30], "initial_forecast": [7, 10, 11, 12, 13, 26], "initial_lr": [7, 13], "initial_vari": 28, "inlin": [6, 7, 10, 11, 12, 13, 14], "inplac": [28, 30], "insert": [0, 7, 10, 11, 12, 13], "instal": [2, 8, 9, 10, 11, 13, 26], "instance_var_nam": 0, "instantan": 23, "instanten": [27, 29], "institut": 5, "instructiosn": 11, "instrument": [0, 2, 5, 7, 13, 14, 15, 16, 26, 36], "int": [0, 16, 17, 20, 21, 23, 26, 30, 34, 35, 36], "int_": [8, 30], "integ": 20, "integr": [5, 8, 28, 30], "integration_step": 34, "integration_steps": 34, "intent": 5, "intenum": 34, "inter": 6, "interest": [0, 5, 30], "interfac": [2, 7, 13, 15], "intermedi": 5, "intern": [5, 6, 17, 26, 35, 36], "internali": 17, "interpol": [6, 21, 23], "interpolationtyp": [6, 21, 35], "interpret": 30, "interval": 8, "introduc": 30, "introduct": 5, "inv_logit_from_expect": 12, "invers": 12, "inverstor": 5, "invert": 11, "invest": 5, "investor": 5, "ipykernel_437888": 13, "ipython": [13, 14], "is_cal": 34, "isin": 17, "iso": 18, "issu": [0, 5], "issuanc": 17, "issue_d": 17, "issuer": [5, 16, 17, 18, 19, 36], "item": [7, 13], "iter": [9, 34], "its": [5, 6, 9, 35], "j": [11, 30], "januari": 5, "japan": 35, "journal": 26, "jp": 5, "json": [7, 13, 14, 20], "julio": 30, "june": 5, "jupyt": 6, "just": [0, 3, 6, 7, 11, 16, 20, 26, 30, 35], "k": [7, 11, 13, 23, 28, 30], "kappa": [8, 28, 30], "kei": [5, 7, 10, 11, 13, 26], "kernel": 28, "keyword": 30, "kind": 20, "kwarg": [6, 7, 13, 21, 23, 26, 34], "l": [7, 13], "l_t": 26, "label": [8, 9, 10, 11, 12, 17], "label_fwd1": 8, "label_fwd2": 8, "lambda": [9, 26, 30], "larg": [5, 21], "larger": 5, "last": [6, 13, 16, 35], "later": 5, "latest": [3, 6], "learn": 28, "least": [9, 30], "left": [5, 11, 35], "legal": 5, "legend": [6, 8, 9, 11, 12], "len": [6, 7, 10, 11, 14], "lender": [5, 36], "length": 21, "leq": 26, "let": 11, "letter": [0, 35], "level": [0, 9, 17, 18, 26, 28, 30, 36], "levelnam": 0, "leverag": [5, 23], "libcudart": [9, 13], "librari": [6, 9, 13], "lie": 17, "life": [5, 10], "lifecycl": 1, "like": [0, 5, 36], "likelihood": [9, 30], "lin": 6, "line": [0, 6], "linear": [6, 23, 26, 35, 36], "linear_log": 35, "lineardemandforwardmodel": [7, 10, 13, 27, 29], "linearlog": [6, 35], "lineno": 0, "link": 5, "linspac": [7, 8, 10, 11, 12, 13, 26], "liqud": 5, "liquid": 5, "liquidli": 8, "list": [6, 7, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 26, 30, 35], "liter": 0, "live": 36, "ln": 23, "load": [7, 9, 12, 13, 14, 20, 23, 26], "load_ext": [6, 7, 8, 10, 11, 12, 13, 14], "load_model": 26, "load_profil": 26, "loadmodel": [27, 29], "loan": 5, "local": [20, 25, 29, 35], "local_var": 28, "local_var_nam": 0, "local_vol_grid": 28, "localvol": [28, 29], "locat": [0, 7, 13, 14, 20, 21], "locaton": 21, "log": [2, 6, 7, 13, 14, 26, 28], "logger": [0, 14], "logic": [0, 6], "logist": [11, 26, 36], "loglevel": 0, "long": [5, 8, 9, 30], "long_run_vari": 28, "longer": [0, 5, 35], "longrun": 21, "look": 5, "loss": [5, 7, 13, 17], "low": 5, "lower": [5, 36], "lpha": 28, "ls_model": 8, "lt": 13, "lucia": 29, "luciaschwartz": [8, 29, 30], "luxembourg": 5, "lv": 28, "m": [7, 13, 23, 30, 35], "machin": [9, 13, 28], "mai": [0, 3, 5, 6, 8, 9, 10, 11, 13, 20, 30, 36], "main": [5, 6], "mainten": [8, 30], "make": [8, 9, 11, 30], "manag": [5, 8, 30], "mandatori": 0, "mani": 5, "manner": [8, 30], "manual": [6, 13, 18], "manufactur": 5, "margin": 5, "marign": 5, "marker": 6, "market": [1, 2, 6, 8, 24, 30], "market_data": [23, 36], "marketdata": [0, 2, 6, 14, 15, 21, 22, 23, 25, 36], "markovian": 9, "master": 5, "math": [6, 30], "mathemat": [8, 30], "matplotlib": [6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 23], "matrix": 36, "matur": [5, 6, 17, 21, 28, 30, 34], "maturity_d": 17, "max_capac": [7, 13, 14, 20], "max_effici": 26, "max_lv": 28, "max_pric": 26, "max_strik": [10, 12], "max_vol": 34, "maxim": [11, 20], "maximum": [9, 30], "maximum_likelihood": 30, "mbox": 36, "mc": [28, 30], "mean": [5, 7, 8, 9, 10, 12, 13, 26, 28, 30, 35], "mean_level": [9, 26], "mean_reversion_level": [9, 30], "mean_reversion_spe": [7, 9, 10, 11, 28], "meaning": 11, "meanrevers": 9, "meant": 0, "measur": 30, "meet": 5, "memoryexpressspecif": 19, "mention": [5, 6], "messag": [0, 5, 6], "method": [0, 6, 8, 9, 10, 17, 25, 26, 28, 30, 36], "method_nam": 0, "mezzanin": 35, "mid": [11, 26], "min_effici": 26, "min_lv": 28, "min_strik": [10, 12], "min_vol": 34, "minimis": 5, "minimum": [5, 9, 30], "minimum_least_squar": [9, 30], "minu": [5, 17], "mitig": 5, "model": [0, 1, 2, 15, 20, 23, 27, 30, 34], "model_hash": [7, 13], "model_result": 13, "modifi": [0, 6], "modified_follow": 35, "modified_following_bimonthli": 35, "modified_following_eom": 35, "modified_preced": 35, "modifiedfollow": 35, "modifiedfollowingbimonthli": 35, "modifiedfollowingeom": 35, "modifiedpreced": 35, "modul": [0, 2, 6, 8, 9, 10, 11, 13, 34, 35], "module_nam": 0, "monai": 20, "mondai": 20, "monei": [5, 23], "monetari": 5, "monoton": 6, "month": [5, 35], "more": [0, 5, 8, 26, 30, 35, 36], "moreov": 35, "morgan": 5, "most": [0, 5, 6, 8, 13], "mostli": 21, "motion": 23, "move": [8, 30], "mr_speed": 9, "mu": [8, 9, 30], "much": [0, 5], "multipl": 13, "multipli": [17, 20, 26, 28], "multiregionwindforecastmodel": [7, 10, 11, 13, 27, 29], "must": [6, 7, 9, 17, 18, 20, 21, 23, 35], "n": [5, 11, 21, 26, 28], "n_call_strik": [10, 12], "n_data": 36, "n_deliveri": 20, "n_forward": 26, "n_random": 26, "n_sampl": [16, 17], "n_sim": [7, 8, 11, 13, 14, 26, 28, 30], "n_timepoint": [26, 30], "n_timestep": [13, 26], "n_x": [7, 13], "n_y": [7, 13], "naiv": [20, 25], "name": [6, 16, 17, 18, 20, 23, 25, 26, 34, 35], "nation": 5, "natur": 5, "nb_neuron": [7, 13], "ndarrai": [16, 20, 23, 25, 26, 28, 30, 33, 36], "nearest": [23, 35], "nearli": 6, "necessari": 6, "need": [5, 6, 24, 26], "neg": 5, "neighbor": 23, "neighbour": 35, "nelson": [21, 36], "nelsonsiegel": [21, 36], "nelsonsiegelsvensson": 21, "net": 5, "neutral": 30, "new": [5, 10, 35], "newli": 6, "next": [5, 6, 7, 11, 28], "nice": 6, "nomin": 5, "non": [0, 5, 6, 20, 35], "non_preferred_senior": 35, "none": [6, 8, 11, 16, 17, 20, 21, 23, 25, 26, 28, 30, 34, 35, 36], "nontrivi": 0, "nor": 3, "nordic": 30, "normal": [5, 8, 9, 10, 11, 12, 13, 20, 26, 28, 30], "note": [0, 6, 30, 35], "notebook": [2, 6, 8, 10, 11], "notic": 5, "notifi": 5, "notimplementederror": 30, "notion": 17, "now": [7, 13], "np": [7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23, 25, 26, 28, 30, 36], "nu": [23, 26], "number": [6, 9, 11, 16, 17, 21, 23, 25, 28, 30, 35, 36], "numer": 0, "numpi": [7, 8, 9, 10, 11, 12, 13, 14, 16], "o": [13, 17], "obj_id": [16, 17, 21], "object": [6, 9, 13, 17, 19, 21, 22, 23, 24, 25, 26, 28, 34, 35, 36], "object_id": 6, "oblig": 5, "obtain": [11, 26], "obviou": 0, "occur": 36, "offpeak": 26, "offshor": [7, 13, 26], "offshore_fwd0": 13, "often": [5, 8, 9], "onc": 5, "one": [0, 5, 6, 7, 8, 11, 23, 26, 30, 35, 36], "onedimension": 30, "ones": 14, "onli": [0, 5, 6, 9, 17, 20, 30, 35, 36], "onshor": [7, 12, 13, 26], "onshore_fwd0": [7, 12, 13], "onshore_wind": 12, "open": [7, 9, 13], "oper": 5, "option": [2, 5, 6, 16, 17, 18, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "order": [5, 23, 26], "ordererd": 16, "origin": [0, 5], "ornstein": [26, 29], "ornsteinuhlenbeck": [9, 10, 13, 26, 29, 30], "other": [0, 5, 6, 35, 36], "otherwis": [21, 30], "ou": [9, 12], "ou_additive_forward_correct": 26, "ou_model": 9, "our": 6, "out": [5, 35], "outdat": 3, "outsid": 0, "outsourc": 5, "outstand": 5, "over": [7, 8, 9, 10, 11, 26, 28, 30], "overal": [8, 26, 30, 36], "overview": [5, 6], "ownership": 5, "p": [7, 11, 13, 35], "p_": 5, "p_d": 5, "p_t": 26, "packag": [0, 2, 3, 36], "package_nam": 0, "page": 2, "pai": 5, "paid": [5, 17, 20], "paif": 20, "pairplot": 36, "panda": [6, 14, 20, 25, 35, 36], "paper": [17, 23, 26], "par_spread": 34, "param": [7, 10, 12, 13, 20, 26, 34, 36], "paramet": [0, 5, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36], "parameter": 36, "parametr": [28, 36], "parametris": 28, "parenthes": 6, "part": [0, 5, 28], "particip": 5, "particular": [0, 5, 35], "pass": [21, 23], "past": [1, 9, 21], "past_fix": 34, "path": [8, 9, 10, 12, 14, 26, 28, 30, 32], "pattern": 0, "pay_dat": 22, "payment": [1, 5, 17, 35], "payoff": [7, 13], "pd": [6, 13, 14, 35, 36], "peak": 26, "peak_hour": 26, "per": 5, "percentag": [5, 11, 26], "percentil": [7, 13], "perfect": 0, "perform": 9, "period": [5, 8, 17, 20, 30, 35], "permiss": 5, "perspect": 5, "pfc": 20, "phenomena": 9, "phi": 11, "phone": 5, "physic": 17, "pip": 3, "place": 0, "placehold": 0, "plai": 5, "plainvanillacouponbond": 17, "plainvanillacouponbondspecif": [17, 36], "plant": [8, 20, 30], "platform": [9, 13], "pleas": [0, 3, 6], "plot": [8, 9, 10, 11, 12, 21, 23, 26], "plot_efficiency_map": 11, "plt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 21], "plto": [21, 23], "plu": 5, "png": 11, "point": [0, 5, 8, 11, 20, 25, 30], "polici": [5, 8, 30], "posit": [5, 6, 17], "possibl": [0, 5], "potenti": [1, 35], "power": [8, 10, 14, 15, 19, 24, 27, 29, 30], "power_fwd_pric": [7, 10, 13, 26], "power_germani": [7, 10, 13], "power_germany_fwd0": [7, 10, 13], "power_nam": [7, 10, 13, 26], "powerpriceforwardcurv": [14, 24], "ppa": [11, 20, 32], "ppa_spec": [7, 13], "ppa_spec_hash": [7, 13], "ppa_specif": 13, "ppaspecif": 20, "pr": 14, "practic": [0, 5], "practition": 5, "practiv": 5, "preced": 35, "precis": 35, "prefer": 17, "preferred_senior": 35, "premium": 17, "premium_pay_d": 17, "price": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 15, 18, 20, 23, 24, 25, 26, 28, 30, 32, 36], "pricer": 34, "pricing_data": 34, "pricing_param": [7, 13], "pricing_request": [14, 32, 34], "pricing_result": [7, 13], "pricingrequest": [15, 31, 34], "pricingrequestbas": 32, "pricingresult": 34, "primari": 5, "primarili": 5, "principl": [0, 5], "print": [6, 8, 10], "prior": 5, "privod": 5, "probabl": [6, 16, 36], "problem": 6, "procedur": 35, "process": [8, 9, 11, 15, 26, 29, 34], "produc": 5, "product": [1, 8, 20, 24, 27, 29], "profil": 26, "project": [0, 7, 13], "projected_kei": [7, 13], "promot": 5, "properti": [0, 9, 16, 34, 35], "proport": 5, "protect": 17, "protection_start": 17, "prove": 6, "provid": [0, 2, 5, 6, 8, 24, 30, 36], "provinc": 35, "pruchas": 5, "ptime": 6, "public": 0, "purchas": [5, 19], "purpos": [7, 11], "put": [18, 34], "putl": 34, "py": [0, 8, 9, 10, 11, 13, 14], "pypi": 3, "pyplot": [6, 7, 8, 9, 10, 11, 12, 13, 14], "python": [0, 2], "pytyp": 0, "pyvacon": [8, 9, 10, 11, 13], "q": [26, 30], "q_i": 11, "qm": 30, "qm_kwarg": 30, "quadratur": 30, "qualiti": 5, "qualnam": [34, 35], "quantit": 1, "quantiti": 20, "query_proper_noun_for_th": 0, "quiet": 5, "quot": 5, "r": [5, 6, 7, 8, 10, 12, 13, 20, 26, 30, 34, 36], "r_t": 26, "rai": 0, "rainbowspecif": 19, "rais": [16, 23, 25, 30, 35], "random": [7, 8, 9, 10, 11, 12, 13, 26, 28, 30], "rang": [6, 7, 8, 9, 10, 11, 12, 21, 26], "rate": [5, 6, 16, 17, 21, 23, 30, 34, 36], "rate_parametr": 21, "rating_curv": 36, "rating_prob": 16, "rating_weight": 36, "ratio": 18, "ration": 1, "raw": 23, "rd_model": 14, "rdm_sampl": 14, "re": 5, "read": 0, "reader": 0, "real": [9, 10, 17], "realiz": 12, "reason": [0, 5], "rebal": 5, "rebat": 5, "receiv": 5, "recent": [6, 13], "recevi": 5, "recommend": [0, 5], "recov": 5, "recoveri": 17, "recovery_curv": 34, "reduc": 5, "ref_dat": [17, 33, 36], "refdat": [6, 20, 21, 22, 23, 25], "refer": [0, 5, 6, 20, 21, 24, 25], "regard": 35, "region": [7, 10, 11, 13, 26, 36], "region_": [7, 10, 11], "region_0": [10, 11], "region_0_fwd0": [10, 11], "region_0_fwd1": 11, "region_0_fwd2": 11, "region_0_fwd3": 11, "region_1": 11, "region_1_fwd0": 11, "region_1_fwd1": 11, "region_1_fwd2": 11, "region_1_fwd3": 11, "region_2": 11, "region_2_fwd0": 11, "region_2_fwd1": 11, "region_2_fwd2": 11, "region_2_fwd3": 11, "region_forecast_model": 26, "region_nam": 26, "region_relative_capac": 26, "regions_result": 26, "regress": [28, 36], "regular": [3, 5, 7, 13], "reinvest": 5, "rel": [5, 17], "relat": [5, 8, 20, 26, 30, 36], "relationship": 5, "relativedelta": 34, "relev": 0, "reload": [7, 12, 14], "reload_ext": [7, 12, 14], "remain": 35, "remov": 5, "renew": 20, "repai": 5, "repo": [3, 13], "repo_dir": 13, "repres": [5, 6, 20], "reproduc": 28, "repsect": 11, "request": [5, 34], "requir": [1, 5], "requisit": 5, "res_demand_high": 26, "res_demand_low": 26, "research": 30, "reshap": 9, "residu": 26, "residual_demand_fwd_model": [7, 11, 12, 13], "residual_demand_model": [10, 13, 14], "residualdemandforwardmodel": [11, 13, 27, 29], "residualdemandmodel": [27, 29], "respect": [0, 6, 8, 11, 20, 23, 26, 28, 30, 35, 36], "respons": [5, 23], "restrict": 20, "result": [5, 6, 7, 10, 11, 12, 13, 14, 17, 20, 25, 26, 35], "result_col": 20, "resulttyp": 34, "retain": 5, "retriev": [0, 6, 20], "return": [0, 5, 6, 7, 9, 13, 16, 17, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "reult": 35, "revalu": 5, "revers": [5, 9, 26, 28, 30], "revert": [8, 30], "review": 30, "rho": [8, 23, 28, 30, 34], "right": 11, "risk": [8, 30], "riski": 5, "rivapi": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36], "rnd": [8, 9, 10, 11, 12, 13, 26, 28, 30], "rnd_load": 26, "rnd_shape": [8, 10, 11, 12, 13, 26, 29, 30], "rnd_solar": 26, "rnd_state": 26, "rnd_weight": [7, 10, 11, 13, 26], "rnd_wind": 26, "role": 5, "roll": [6, 35], "rollconvent": 35, "romberg": 30, "row": [23, 28, 36], "rt": 6, "rule": [0, 35], "run": 11, "run_hedge_experi": [7, 13], "s0": 28, "s_": 36, "sabr": 23, "sabr_param": 23, "said": 5, "same": [5, 7, 35], "sampl": [0, 2, 16], "sample_data": [0, 14, 36], "sample_new": 36, "satisfi": 23, "saturdai": 35, "save": [7, 13, 36], "savefig": 11, "sc": 5, "scenario": 5, "schedul": [6, 7, 8, 13, 19, 25, 30, 35], "scheme": [6, 30], "schole": 34, "schwartz": 29, "scipi": [13, 30, 34], "scott": 29, "scottchesneymodel": [28, 29], "search": [2, 23], "seasonal_funct": 26, "seasonality_funct": 26, "sec_level": 17, "sec_level_spread": 36, "sec_lvl": 18, "second": [6, 28, 30], "section": [0, 5, 6], "secton": 20, "sector": [16, 36], "sector_prob": 16, "sector_spread": 36, "sector_weight": 36, "securit": [17, 18, 36], "securitization_level": 17, "securitizationlevel": [17, 18, 35], "see": [0, 6, 17, 20, 21, 25, 26, 35, 36], "seed": [7, 10, 11, 12, 13, 14, 16, 17, 26, 36], "seen": [5, 30], "select": [5, 7, 13, 18, 34], "self": [13, 14], "sell": 5, "seller": 5, "send_acronym_via_http": 0, "senior_secur": [35, 36], "senior_unsecur": [35, 36], "sens": 36, "separ": [0, 8, 30], "serializ": 20, "server": 3, "set": [0, 5, 7, 9, 11, 13, 16, 18, 20, 23, 26, 35, 36], "set_amount": 20, "set_param": 36, "set_pric": 34, "set_sticky": 23, "setlevel": [0, 14], "settl": 17, "setup": [10, 11, 26], "sever": [9, 24], "shall": [6, 35], "shape": [7, 8, 9, 10, 11, 12, 13, 23, 26, 28, 30], "share": [9, 13, 18], "share_ratio": 18, "she": 5, "short": [0, 5, 8, 21, 30, 35], "shorter": 35, "shortli": 5, "shortrun": 21, "should": [0, 5], "show": 6, "showsth": 36, "side": 5, "siegel": [21, 36], "sigma": [9, 12, 23, 26, 30], "sigma1": [8, 30], "sigma2": [8, 30], "sigma_": 23, "sigma_1": 30, "sigma_1dw_1": 30, "sigma_2": 30, "sigma_b": 23, "sigmoid": [11, 26], "significantli": 5, "significantlli": 5, "sim": 9, "similar": 5, "simliar": 0, "simpl": [12, 17, 20, 25, 26, 30, 36], "simple_correct": 12, "simple_schedul": [14, 20], "simpleschedul": [14, 20], "simpli": [6, 10], "simplifi": 23, "simualt": 9, "simul": [7, 13, 20, 26, 28, 29, 30, 32], "simulated_pow": 10, "simulated_power_disc": 10, "simulated_wind": 10, "simulated_wind_disc": 10, "simulatn": 5, "sinc": 5, "singl": [18, 20, 36], "size": [0, 8, 9, 10, 11, 12, 13, 21, 26, 30], "skew": 23, "slv": [28, 30], "smile": 23, "smoothli": 6, "smoothstep": 11, "smoothstepsupplycurv": 13, "snippet": 11, "so": [0, 5, 6, 9, 13, 26, 28, 30, 36], "soem": 0, "sol3": 23, "solar": [20, 27, 29], "solar_germani": 26, "solar_model": 26, "solarpowermodel": [27, 29], "sold": 5, "solut": 0, "some": [0, 5, 6, 16, 17, 20, 36], "someon": 0, "sort": 23, "sought": 5, "sourc": [0, 3, 8, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36], "spatial": 11, "spec": [7, 13, 34], "special": [13, 36], "specif": [1, 5, 17, 18, 20, 34, 35, 36], "specifi": [8, 17, 30, 35], "speed": [9, 11, 26, 28, 30], "speed_of_mean_revers": [7, 9, 10, 11, 12, 13, 26, 30], "splien": 23, "spot": [23, 27, 28, 29, 30], "spot_step": 34, "spread": [5, 36], "spread_curv": 36, "spreadcurv": 2, "spreadcurvecollect": 36, "spreadcurvesampl": 36, "sqrt": [23, 26, 30], "squar": [9, 30], "ssrn": [23, 26], "ssvi": 23, "stabil": 5, "stage": 3, "standard": [0, 26], "star": 36, "start": [13, 14, 17, 20, 25, 28, 30, 34, 35], "start_dai": 35, "start_valu": [8, 9, 26, 30], "start_value_load": 26, "start_value_solar": 26, "start_value_wind": 26, "startvalu": [12, 26], "state": 9, "statement": 0, "static": [16, 17, 21, 23, 26, 28, 35, 36], "stationari": 9, "statist": 9, "step": [6, 7, 13, 28, 30], "stickyfwdmoney": 35, "stickystrik": 35, "stickyxstrik": 35, "still": 5, "stoch_vol_model": 28, "stochast": [11, 15, 23, 29], "stochastic_vol_model": 28, "stochasticlocalvol": [28, 29], "stochasticvolatilitymodel": 28, "stochasticvolmodel": 28, "store": [6, 23, 24], "str": [7, 8, 9, 10, 11, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 34, 35, 36], "strateg": 5, "strategi": [5, 8, 30], "stream_executor": [9, 13], "strftime": [7, 13], "strict": 0, "strictli": 36, "strike": [7, 13, 18, 23, 26, 28, 30, 34], "string": [0, 10, 12, 17, 35], "structur": 6, "stub": [17, 35], "style": [0, 13, 14], "styleguid": 2, "subgrid": 35, "subject": 5, "submodul": 0, "subordin": [5, 35, 36], "subplot": [7, 9, 10, 12, 13], "subsequ": [0, 6], "substitut": 5, "suffici": 5, "suitabl": 6, "sum": 26, "sum_i": 26, "summari": 22, "sundai": [20, 35], "suppli": [5, 8, 30], "supply_curv": 26, "supplyfunct": [27, 29], "support": [5, 20], "surfac": [2, 24, 28, 34], "survei": 5, "survival_curv": 34, "survivalcurv": 34, "svi": 23, "svi_param": 23, "swap": [19, 30], "swig": 6, "switch": 0, "sy": [7, 8, 9, 10, 11, 12, 13, 14], "symbol": 0, "synonym": 1, "system": 5, "t": [5, 6, 7, 8, 10, 11, 12, 13, 20, 21, 23, 26, 30, 34, 36], "t0": [28, 30], "t1": [8, 28, 30], "t2": [8, 30], "t_1": [8, 30], "t_2": [8, 30], "tabl": [20, 23, 24], "take": 5, "taken": [5, 30], "target2": 35, "tau": 21, "tau2": 21, "tax_factor": 22, "technolog": [8, 30], "technologi": [7, 13, 14, 20, 26], "teh": 30, "templat": 0, "temporari": [0, 5], "temporarili": 5, "ten": [7, 11], "tend": [8, 30], "tendenc": 9, "tensorboard_logdir": [7, 13], "tensorflow": [9, 13], "term": [0, 8, 9, 21, 23, 26, 30], "termin": [5, 30], "test": [2, 9, 16], "test_dc": 6, "text": 5, "th": 30, "than": [5, 35], "thei": [5, 24], "them": [0, 5], "thena": 36, "theo_val": [14, 32], "theoret": [1, 32], "theori": 5, "therebi": 5, "theta": [28, 30, 34], "thi": [0, 3, 5, 6, 8, 9, 10, 11, 13, 20, 21, 23, 25, 26, 28, 30, 35, 36], "think": 0, "third": [5, 6], "thirtye360": 35, "thirtyu360": 35, "thoroughli": 0, "those": 5, "though": 35, "three": [7, 11, 36], "through": [5, 21, 35], "throw": [30, 34], "thrown": [21, 35], "thu": 5, "time": [1, 5, 6, 8, 9, 10, 11, 12, 20, 25, 26, 28, 30, 35], "time_grid": 28, "time_period": 35, "time_steps_year": 34, "timedelta": [6, 7, 13, 21], "timegrid": [6, 7, 8, 9, 10, 11, 12, 13, 21, 26, 30], "timegridpoint": [10, 35], "timepoint": [7, 12, 20, 25, 30, 35], "timeseri": 28, "timest": 30, "timestamp": 35, "timestep": 28, "timezon": [20, 25], "titl": [5, 9, 10, 12], "tmp": [11, 13], "to_dict": [7, 13], "to_pydatetim": [13, 14], "togeth": [6, 17, 35, 36], "tool": [0, 2, 7, 10, 11, 12, 13, 14, 15, 17, 33, 36], "total": [5, 11, 20, 23, 26], "total_capac": [20, 26], "toward": [8, 30], "tr": 5, "traceback": 13, "trade": [5, 8, 30], "trader": [8, 30], "train": 13, "transact": 5, "transform": 35, "trend": [8, 30], "true": [7, 9, 11, 13, 14, 17, 21, 28, 30, 32, 34, 35], "try": 0, "ttm": [7, 13, 23, 26, 28, 30], "tuesdai": 20, "tupl": [17, 21, 23, 26, 30, 36], "twinx": 10, "two": [5, 6, 8, 18, 21, 23, 28, 30, 35, 36], "twodimension": 30, "type": [6, 7, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 26, 28, 30, 34, 35, 36], "typeerror": 13, "tz": [13, 14, 20, 25, 35], "tzinfo": [20, 25], "u": [6, 11], "udl": [7, 13, 14, 20, 26], "udl_id": 18, "uhlenbeck": [26, 29], "unadjust": 35, "unamelior": 6, "unbias": 1, "uncertain": 20, "uncom": 6, "undefin": 35, "under": [5, 6, 30], "underli": [5, 18, 20, 26, 28], "understand": [8, 30], "understood": 5, "undiscount": 1, "unexpect": [5, 8, 30], "unfamiliar": 0, "uniform": [9, 30], "uniformli": 36, "union": [20, 21, 25, 26, 30, 35, 36], "uniqu": [17, 20], "unit": 2, "unittest": 0, "unpredict": [8, 30], "unqiu": 16, "until": 6, "up": [5, 7, 9, 11, 13], "updat": 3, "upon": 5, "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 26, 28, 30, 34, 35, 36], "usag": [2, 5], "user": [0, 6, 8, 10, 11], "userwarn": [8, 9, 10, 11, 13], "usual": [0, 5], "uuid": [20, 25], "v": [10, 12, 13], "v0": 28, "val_dat": [7, 13, 34], "valid": 17, "valu": [1, 5, 6, 9, 10, 11, 13, 17, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35], "valuat": [2, 6, 23, 25, 34], "valuation_d": 34, "value_r": 21, "valueerror": 35, "vanilla": 18, "vanna": 34, "var": [7, 13], "varepsilon": 30, "variabl": 0, "varianc": [23, 28, 30], "variat": [5, 26, 30], "vector": [6, 20], "vega": 34, "verbos": [7, 13], "veri": 5, "version": [3, 6], "via": [3, 5, 8, 28, 30, 36], "view": [5, 6], "visual": 11, "vol": [7, 10, 11, 23, 28, 34], "vol_of_vol": 28, "vol_param": [23, 28], "vol_sticky": 23, "vol_surfac": 34, "volati": 9, "volatil": [2, 5, 7, 9, 10, 11, 12, 13, 24, 26, 29, 30, 34], "volatilitygridparametr": 23, "volatilityparametrizationflat": 23, "volatilityparametrizationsabr": 23, "volatilityparametrizationssvi": 23, "volatilityparametrizationsvi": 23, "volatilityparametrizationterm": 23, "volatilitysticky": [23, 35], "volatilitysurfac": 23, "volum": 20, "vscode": 0, "w": [7, 9, 13, 20, 23, 26, 34, 36], "w_": 26, "w_2": 30, "wa": [5, 13, 30], "wagner": 26, "wagnermodel": 14, "wai": [5, 11], "walk": [8, 30], "want": 0, "warn": [8, 9, 10, 11, 13], "we": [0, 3, 6, 7, 8, 9, 11, 20, 26, 36], "weather": [7, 8, 11, 15, 29, 30], "weekdai": 20, "weight": 26, "were": 5, "west": 6, "when": [0, 5, 6, 17, 20, 23], "where": [0, 5, 6, 10, 11, 20, 23, 26, 30, 36], "whether": 35, "which": [5, 6, 8, 21, 30, 35], "while": [5, 9], "who": 5, "why": 0, "wide": 5, "width": [13, 14], "wind": [11, 13, 14, 20, 27, 29], "wind_efficiency_dist": 11, "wind_efficiency_map": 11, "wind_efficiency_simul": 11, "wind_forecast_model": 26, "wind_germani": [7, 10, 11, 13, 26], "wind_germany_fwd0": [10, 11, 13], "wind_germany_fwd1": 11, "wind_germany_fwd2": 11, "wind_germany_fwd3": 11, "wind_model": 26, "wind_nam": 26, "wind_offshor": [7, 13, 26], "wind_onshor": [7, 13, 26], "wind_power_forecast": [7, 10, 13, 26], "wind_region_model": [7, 10, 11], "wind_result": 26, "windpowerforecastmodel": [7, 10, 11, 12, 13, 27, 29], "windpowerforecastmodelparamet": [10, 12, 26], "windpowermodel": [26, 27, 29], "within": [0, 5, 6, 18, 20, 21, 26, 30], "without": [5, 8, 9, 10, 11, 13], "word": [0, 5], "work": [0, 26, 30], "world": 9, "would": [5, 36], "write": [0, 6], "wrong": 5, "x": [6, 7, 9, 11, 12, 13, 26, 28, 30, 34], "x0": [28, 30], "x1": 30, "x2": 30, "x_": [26, 30, 36], "x_0": 11, "x_1": 30, "x_2": 30, "x_delta_t": 30, "x_i": 26, "x_mean_reversion_spe": [7, 10, 13, 26], "x_strike": 28, "x_t": [11, 12, 26, 30], "x_volatil": [7, 10, 13, 26], "xlabel": [6, 7, 9, 10, 11, 12, 13], "y": [7, 13, 28, 35], "y0": 28, "year": [5, 6, 9, 35], "yearfract": 21, "yearli": 17, "yield": [6, 21, 22], "yieldcurv": 2, "ylabel": [6, 7, 10, 11, 12, 13], "you": [0, 3, 8, 9, 10, 11, 13], "your": [0, 9, 13], "z": 23, "zero": [6, 17, 21, 26], "zerocouponbondspecif": 17, "zone": [20, 25, 35]}, "titles": ["Developer Guide", "Glossary", "Welcome to rivapy\u2019s documentation!", "Installation", "Notebook Gallery", "Repurchase Agreements", "Discount Curves", "Green PPA Hedging", "Lucia-Schwartz Model", "Ornstein-Uhlenbeck Model", "Powerprice and Wind Modeling", "Multiregion Windpower Model", "Wind Power Forecast Model", "Deep Hedging of Green PPAs", "Green PPA Pricing - Expected Value", "Module Documentation", "Components", "Credit Instruments", "Equity Instruments", "Instruments", "Power Instruments", "Discount Curve", "Dividend Tables", "Equity", "Marketdata", "Power", "Wind", "Energy and Weather", "Equity", "Models", "Stochastic Processes", "Pricing", "PricingRequest", "Interfaces", "Pricing", "Tools", "Sample and Test Data"], "titleterms": {"": 2, "The": 5, "agreement": [5, 20], "americanvanillaspecif": 18, "annot": 0, "barrierspecif": 18, "basic": 5, "bond": 17, "calibr": 9, "chesnei": 28, "collater": 5, "comment": 0, "compon": 16, "comput": 6, "content": [2, 15, 19, 23, 24, 27, 29, 31], "coupon": 5, "creat": 6, "credit": [17, 36], "curv": [6, 21, 23], "data": [4, 36], "date": 35, "datetimegrid": 35, "deep": 13, "default": [17, 36], "definit": 6, "delta": [7, 13], "demand": 13, "develop": 0, "differ": 5, "discount": [6, 21], "discountcurv": 21, "discountcurveparametr": 21, "discret": 10, "distribut": [7, 13], "dividend": [5, 22], "docstr": 0, "document": [2, 15], "econom": 5, "energi": 27, "enum": 35, "equiti": [18, 23, 28], "european": 5, "europeanvanillaspecif": 18, "exercis": 6, "expect": 14, "factor": 6, "financi": 4, "forecast": [10, 12, 26], "forward": [8, 13, 26], "function": 5, "galleri": 4, "gener": 5, "glossari": 1, "green": [7, 13, 14, 20], "guid": 0, "hedg": [7, 13], "heston": 28, "idea": 5, "import": 0, "instal": 3, "instanten": 26, "instrument": [4, 17, 18, 19, 20], "interfac": 33, "lend": 5, "lineardemandforwardmodel": 26, "loadmodel": 26, "local": 28, "log": 0, "lucia": [8, 30], "market": [4, 5], "marketdata": 24, "memoryexpressspecif": 18, "model": [4, 7, 8, 9, 10, 11, 12, 13, 26, 28, 29], "modelsetup": 11, "modul": 15, "multiregion": 11, "multiregionwindforecastmodel": 26, "name": 0, "notebook": 4, "onli": 10, "open": 5, "ornstein": [9, 30], "parametr": [21, 23], "parti": 5, "path": [7, 11, 13], "plot": [6, 7, 13], "pnl": [7, 13], "power": [7, 12, 20, 25, 26], "powerpric": 10, "powerpriceforwardcurv": 25, "ppa": [7, 13, 14], "price": [4, 7, 14, 31, 34], "pricingrequest": 32, "process": 30, "product": 26, "purchas": 20, "rainbowspecif": 18, "repo": 5, "repurchas": 5, "residu": 13, "residualdemandforwardmodel": 26, "residualdemandmodel": 26, "right": 5, "risk": 5, "rivapi": 2, "sampl": 36, "schedul": 20, "schwartz": [8, 30], "scott": 28, "secur": 5, "setup": [6, 7], "simul": [8, 9, 10, 11, 12], "size": 5, "solar": 26, "solarpowermodel": 26, "sourc": 5, "special": 5, "specif": [6, 7, 14], "spot": [8, 9, 26], "spreadcurv": 36, "stochast": [28, 30], "styleguid": 0, "supplyfunct": 26, "surfac": 23, "swap": 17, "tabl": 22, "term": 5, "test": [0, 36], "timepoint": 10, "todo": 0, "tool": 35, "tri": 5, "type": [0, 5], "typic": 5, "uhlenbeck": [9, 30], "unit": 0, "usag": 0, "v": 7, "valu": [8, 14], "volatil": [23, 28], "volum": 7, "vote": 5, "weather": 27, "welcom": 2, "wind": [7, 10, 12, 26], "windpow": 11, "windpowerforecastmodel": 26}})