Search.setIndex({"docnames": ["developer_guide", "glossary", "index", "install", "notebooks/index", "notebooks/instruments/repurchase_agreement", "notebooks/marketdata/discount_curves", "notebooks/models/_green_ppa_hedging_old", "notebooks/models/lucia_schwartz", "notebooks/models/ornstein_uhlenbeck", "notebooks/models/powerprice_wind_model", "notebooks/models/residual_demand_forward_model_multi_region", "notebooks/models/windpower_forecast_model", "notebooks/pricing/green_ppa_deep_hedging", "notebooks/pricing/green_ppa_expected_value", "rivapy/index", "rivapy/instruments/components", "rivapy/instruments/credit", "rivapy/instruments/equity", "rivapy/instruments/index", "rivapy/instruments/power", "rivapy/marketdata/discountcurves", "rivapy/marketdata/dividends", "rivapy/marketdata/equity", "rivapy/marketdata/index", "rivapy/marketdata/power", "rivapy/models/energy/energy_weather", "rivapy/models/energy/index", "rivapy/models/equity", "rivapy/models/index", "rivapy/models/stochastic_processes", "rivapy/pricing/index", "rivapy/pricing/pricing_request", "rivapy/rivapy.interfaces", "rivapy/rivapy.pricing", "rivapy/rivapy.tools", "sample_data/index"], "filenames": ["developer_guide.rst", "glossary.rst", "index.rst", "install.rst", "notebooks/index.rst", "notebooks/instruments/repurchase_agreement.ipynb", "notebooks/marketdata/discount_curves.ipynb", "notebooks/models/_green_ppa_hedging_old.ipynb", "notebooks/models/lucia_schwartz.ipynb", "notebooks/models/ornstein_uhlenbeck.ipynb", "notebooks/models/powerprice_wind_model.ipynb", "notebooks/models/residual_demand_forward_model_multi_region.ipynb", "notebooks/models/windpower_forecast_model.ipynb", "notebooks/pricing/green_ppa_deep_hedging.ipynb", "notebooks/pricing/green_ppa_expected_value.ipynb", "rivapy/index.rst", "rivapy/instruments/components.rst", "rivapy/instruments/credit.rst", "rivapy/instruments/equity.rst", "rivapy/instruments/index.rst", "rivapy/instruments/power.rst", "rivapy/marketdata/discountcurves.rst", "rivapy/marketdata/dividends.rst", "rivapy/marketdata/equity.rst", "rivapy/marketdata/index.rst", "rivapy/marketdata/power.rst", "rivapy/models/energy/energy_weather.rst", "rivapy/models/energy/index.rst", "rivapy/models/equity.rst", "rivapy/models/index.rst", "rivapy/models/stochastic_processes.rst", "rivapy/pricing/index.rst", "rivapy/pricing/pricing_request.rst", "rivapy/rivapy.interfaces.rst", "rivapy/rivapy.pricing.rst", "rivapy/rivapy.tools.rst", "sample_data/index.rst"], "titles": ["Developer Guide", "Glossary", "Welcome to rivapy\u2019s documentation!", "Installation", "Notebook Gallery", "Repurchase Agreements", "Discount Curves", "Green PPA Hedging", "Lucia-Schwartz Model", "Ornstein-Uhlenbeck Model", "Powerprice and Wind Modeling", "Multiregion Windpower Model", "Wind Power Forecast Model", "Deep Hedging of Green PPAs", "Green PPA Pricing - Expected Value", "Module Documentation", "Components", "Credit Instruments", "Equity Instruments", "Instruments", "Power Instruments", "Discount Curve", "Dividend Tables", "Equity", "Marketdata", "Power", "Wind", "Energy and Weather", "Equity", "Models", "Stochastic Processes", "Pricing", "PricingRequest", "Interfaces", "Pricing", "Tools", "Sample and Test Data"], "terms": {"thi": [0, 3, 5, 6, 8, 9, 10, 11, 13, 20, 21, 23, 25, 26, 28, 30, 35, 36], "section": [0, 5, 6], "contain": [0, 6, 7, 11, 13, 14, 20, 23, 28, 30, 36], "some": [0, 5, 6, 16, 17, 20, 36], "rule": [0, 35], "best": [0, 5], "practic": [0, 5], "rivapi": [0, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36], "should": [0, 5], "consid": [0, 8, 9, 10, 11, 13], "It": [0, 2, 5, 9, 11, 20, 21, 25, 26, 30, 34, 36], "i": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "meant": 0, "strict": 0, "set": [0, 5, 7, 9, 11, 13, 16, 18, 20, 23, 26, 35, 36], "mai": [0, 3, 5, 6, 8, 9, 10, 11, 13, 20, 30, 36], "good": 0, "reason": [0, 5], "why": 0, "someon": 0, "decid": 0, "deviat": 0, "from": [0, 1, 5, 6, 7, 10, 11, 12, 13, 14, 16, 18, 20, 21, 23, 26, 28, 30, 34, 35, 36], "But": 0, "pleas": [0, 3, 6], "think": 0, "about": [0, 6, 8, 30], "point": [0, 5, 8, 11, 20, 25, 30], "here": [0, 1, 6, 9, 11, 17, 21, 26, 30, 36], "when": [0, 5, 6, 17, 20, 23], "And": 0, "you": [0, 3, 8, 9, 10, 11, 13], "one": [0, 5, 6, 7, 8, 11, 23, 26, 30, 35, 36], "modifi": [0, 6], "delet": 0, "just": [0, 3, 6, 7, 11, 16, 20, 26, 30, 35], "rai": 0, "an": [0, 5, 6, 9, 11, 21, 23, 24, 25, 26, 30, 34, 35, 36], "issu": [0, 5], "we": [0, 3, 6, 7, 8, 9, 11, 20, 26, 36], "try": 0, "follow": [0, 5, 6, 7, 11, 30, 35, 36], "googl": 0, "python": [0, 2], "style": [0, 13, 14], "write": [0, 6], "code": [0, 6, 11, 18], "cite": 0, "aforment": 0, "document": [0, 20, 25, 35], "ar": [0, 1, 5, 6, 8, 16, 20, 21, 23, 24, 25, 26, 28, 30, 35, 36], "most": [0, 5, 6, 8, 13], "relev": 0, "interest": [0, 5, 30], "more": [0, 5, 8, 26, 30, 35, 36], "depth": [0, 6, 7, 13], "read": 0, "origin": [0, 5], "us": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 26, 28, 30, 34, 35, 36], "statement": 0, "packag": [0, 2, 3, 36], "modul": [0, 2, 6, 8, 9, 10, 11, 13], "onli": [0, 5, 6, 9, 17, 20, 30, 35, 36], "individu": 0, "class": [0, 2, 5, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36], "function": [0, 6, 8, 9, 10, 11, 13, 21, 23, 25, 26, 28, 30, 35, 36], "exempt": 0, "symbol": 0, "directli": [0, 5, 21, 23], "hint": 0, "method": [0, 6, 8, 9, 10, 17, 25, 26, 28, 30, 36], "argument": [0, 6, 13, 14, 21, 23, 30], "return": [0, 5, 6, 7, 9, 13, 16, 17, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "also": [0, 5, 6, 8, 9, 24], "declar": 0, "variabl": 0, "checker": 0, "like": [0, 5, 36], "pytyp": 0, "dure": [0, 5], "vscode": 0, "user": [0, 6, 8, 10, 11], "recommend": [0, 5], "enabl": [0, 5], "built": 0, "check": [0, 6, 20], "tool": [0, 2, 7, 10, 11, 12, 13, 14, 15, 17, 33, 36], "A": [0, 1, 5, 6, 28, 35], "string": [0, 10, 12, 17, 35], "first": [0, 6, 16, 17, 28, 30, 35, 36], "mandatori": 0, "everi": [0, 6], "ha": [0, 5, 6, 9, 25, 30], "properti": [0, 9, 16, 34, 35], "being": [0, 5, 35], "part": [0, 5, 28], "public": 0, "api": 0, "nontrivi": 0, "size": [0, 8, 9, 10, 11, 12, 13, 21, 26, 30], "non": [0, 5, 6, 20, 35], "obviou": 0, "logic": [0, 6], "The": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 25, 26, 28, 30, 35, 36], "constructor": [0, 17, 18, 21, 34, 35], "describ": [0, 5, 6, 8, 20, 28], "principl": [0, 5], "work": [0, 26, 30], "thoroughli": 0, "As": [0, 5, 36], "sampl": [0, 2, 16], "provid": [0, 2, 5, 6, 8, 24, 30, 36], "templat": 0, "example_docstr": 0, "docstringexampl": 0, "int": [0, 16, 17, 20, 21, 23, 26, 30, 34, 35, 36], "b": [0, 6, 8, 10, 23, 36], "float": [0, 5, 17, 18, 20, 21, 22, 23, 26, 28, 30, 34, 36], "sourc": [0, 3, 8, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36], "exampl": [0, 5, 6, 9, 20, 21, 25, 26, 35, 36], "short": [0, 5, 8, 21, 30, 35], "descript": [0, 5, 17, 22, 23, 28, 30, 34, 36], "longer": [0, 5, 35], "includ": [0, 5, 20, 21, 25, 35], "formula": [0, 21, 23, 36], "paramet": [0, 5, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36], "_description_": [0, 16, 21, 26, 28, 30, 36], "can": [0, 2, 5, 6, 8, 9, 10, 18, 21, 28, 30, 34, 36], "insert": [0, 7, 10, 11, 12, 13], "soem": 0, "note": [0, 6, 30, 35], "Be": 0, "care": 0, "danger": 0, "see": [0, 6, 17, 20, 21, 25, 26, 35, 36], "marketdata": [0, 2, 6, 14, 15, 21, 22, 23, 25, 36], "discountcurv": [0, 6, 23, 24, 34], "refer": [0, 5, 6, 20, 21, 24, 25], "other": [0, 5, 6, 35, 36], "place": 0, "where": [0, 5, 6, 10, 11, 20, 23, 26, 30, 36], "find": [0, 6], "simliar": 0, "e": [0, 6, 11, 12, 17, 20, 21, 23, 26, 28, 30, 34, 35, 36], "g": [0, 11, 17, 20, 30, 35], "depp": [0, 7, 13], "1": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 23, 26, 28, 30, 34, 35, 36], "0": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 26, 28, 30, 34, 35, 36], "2": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 26, 28, 34, 35, 36], "temporari": [0, 5], "term": [0, 8, 9, 21, 23, 26, 30], "solut": 0, "enough": 0, "perfect": 0, "module_nam": 0, "package_nam": 0, "classnam": 0, "method_nam": 0, "exceptionnam": 0, "function_nam": 0, "global_constant_nam": 0, "global_var_nam": 0, "instance_var_nam": 0, "function_parameter_nam": 0, "local_var_nam": 0, "query_proper_noun_for_th": 0, "send_acronym_via_http": 0, "filenam": [0, 23], "avoid": 0, "abbrevi": 0, "In": [0, 5, 8, 9, 10, 20, 30], "particular": [0, 5, 35], "do": [0, 5, 9, 13], "ambigu": 0, "unfamiliar": 0, "reader": 0, "outsid": 0, "your": [0, 9, 13], "project": [0, 7, 13], "letter": [0, 35], "within": [0, 5, 6, 18, 20, 21, 26, 30], "word": [0, 5], "much": [0, 5], "unittest": 0, "possibl": [0, 5], "locat": [0, 7, 13, 14, 20, 21], "folder": 0, "framework": [0, 8, 30], "For": [0, 5, 6, 7, 9, 11, 36], "expect": [0, 5, 17, 26, 30], "pattern": 0, "placehold": 0, "alwai": [0, 1], "call": [0, 5, 6, 12, 13, 18, 28, 30, 34], "them": [0, 5], "liter": 0, "f": [0, 7, 8, 11, 13, 21, 23, 26, 30], "subsequ": [0, 6], "To": [0, 3, 6, 7, 11, 12, 14], "logger": [0, 14], "_logger": 0, "py": [0, 8, 9, 10, 11, 13, 14], "file": [0, 9, 11, 13], "respect": [0, 6, 8, 11, 20, 23, 26, 28, 30, 35, 36], "current": [0, 5, 6, 8, 9, 10, 12, 23, 26, 28, 30, 35, 36], "so": [0, 5, 6, 9, 13, 26, 28, 30, 36], "price": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 15, 18, 20, 23, 24, 25, 26, 28, 30, 32, 36], "line": [0, 6], "retriev": [0, 6, 20], "correct": [0, 6, 26], "standard": [0, 26], "separ": [0, 8, 30], "each": [0, 5, 16, 17, 20, 23, 25, 28, 30, 35, 36], "submodul": 0, "exist": [0, 35], "instrument": [0, 2, 5, 7, 13, 14, 15, 16, 26, 36], "model": [0, 1, 2, 15, 20, 23, 27, 30, 34], "numer": 0, "sample_data": [0, 14, 36], "want": 0, "switch": 0, "global": [0, 5], "usual": [0, 5], "basicconfig": 0, "level": [0, 9, 17, 18, 26, 28, 30, 36], "debug": [0, 14], "format": [0, 10, 12], "asctim": 0, "": [0, 5, 6, 7, 9, 11, 13, 16, 17, 20, 26, 28, 30, 35], "levelnam": 0, "lineno": 0, "messag": [0, 5, 6], "circumst": 0, "differ": [0, 2, 6, 11, 12, 26, 28, 30, 36], "loglevel": 0, "getlogg": [0, 14], "setlevel": [0, 14], "error": [0, 6], "fair": 1, "valu": [1, 5, 6, 9, 10, 11, 13, 17, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35], "ration": 1, "unbias": 1, "estim": 1, "potenti": [1, 35], "market": [1, 2, 6, 8, 24, 30], "synonym": 1, "theoret": [1, 32], "determin": [1, 5, 6, 8, 9, 23, 30, 34, 36], "quantit": 1, "cash": [1, 5, 32], "flow": [1, 5, 32], "payment": [1, 5, 17, 35], "currenc": [1, 17, 18, 36], "certain": [1, 5, 8, 36], "time": [1, 5, 6, 8, 9, 10, 11, 12, 20, 25, 26, 28, 30, 35], "cashflow": [1, 6, 17], "past": [1, 9, 21], "futur": [1, 5, 6, 9, 11, 21], "undiscount": 1, "specif": [1, 5, 17, 18, 20, 34, 35, 36], "encapsul": 1, "all": [1, 5, 6, 8, 9, 10, 11, 13, 16, 17, 20, 21, 24, 26, 35, 36], "inform": [1, 6, 8, 30], "product": [1, 8, 20, 24, 27, 29], "requir": [1, 5], "handl": [1, 2, 10, 24, 35, 36], "lifecycl": 1, "event": [1, 5, 8, 30], "valuat": [2, 6, 23, 25, 34], "analysi": 2, "financi": [2, 5, 6], "data": [2, 6, 9, 11, 16, 18, 24, 26, 30], "yieldcurv": 2, "volatil": [2, 5, 7, 9, 10, 11, 12, 13, 24, 26, 29, 30, 34], "surfac": [2, 24, 28, 34], "defin": [2, 6, 10, 11, 16, 18, 20, 21, 35, 36], "option": [2, 5, 6, 16, 17, 18, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35, 36], "evalu": 2, "instal": [2, 8, 9, 10, 11, 13, 26], "notebook": [2, 6, 8, 10, 11], "galleri": 2, "interfac": [2, 7, 13, 15], "test": [2, 9, 16], "spreadcurv": 2, "credit": [2, 5, 15, 19], "default": [2, 5, 9, 13, 16, 18, 19, 20, 21, 23, 25, 26, 28, 30, 32, 34, 35], "develop": [2, 3, 8, 9, 10, 11, 13, 14], "guid": [2, 5], "styleguid": 2, "unit": 2, "log": [2, 6, 7, 13, 14, 26, 28], "usag": [2, 5], "glossari": 2, "index": [2, 5, 20], "search": [2, 23], "page": 2, "pip": 3, "At": [3, 5], "stage": 3, "have": [3, 5, 9, 11, 13, 24, 26, 36], "nor": 3, "regular": [3, 5, 7, 13], "updat": 3, "pypi": 3, "server": 3, "version": [3, 6], "via": [3, 5, 8, 28, 30, 36], "outdat": 3, "latest": [3, 6], "downloaf": 3, "form": [3, 28], "github": 3, "repo": [3, 13], "view": [5, 6], "loan": 5, "borrow": 5, "seller": 5, "agre": 5, "sell": 5, "asset": 5, "lender": [5, 36], "buyer": [5, 17], "amount": [5, 20, 26, 36], "bui": 5, "sold": 5, "back": [5, 8, 30], "expiri": [5, 10, 11, 12, 13, 17, 18, 23, 26], "contract": [5, 8, 17, 18, 20], "larger": 5, "which": [5, 6, 8, 21, 30, 35], "purchas": [5, 19], "while": [5, 9], "bought": 5, "effect": [5, 10, 23], "rate": [5, 6, 16, 17, 21, 23, 30, 34, 36], "paid": [5, 17, 20], "implicit": 5, "quot": 5, "percentag": [5, 11, 26], "per": 5, "annum": 5, "perspect": 5, "transact": 5, "abov": [5, 6, 9, 13, 21, 23, 30, 36], "revers": [5, 9, 26, 28, 30], "imag": 5, "illustr": [5, 7], "life": [5, 10], "cycl": 5, "plai": 5, "kei": [5, 7, 10, 11, 13, 26], "role": 5, "facilit": 5, "system": 5, "addition": [5, 6], "often": [5, 8, 9], "carri": 5, "out": [5, 35], "central": 5, "bank": [5, 35], "order": [5, 23, 26], "temporarili": 5, "liquid": 5, "remov": 5, "support": [5, 20], "implement": [5, 26], "monetari": 5, "polici": [5, 8, 30], "promot": 5, "stabil": 5, "few": 5, "low": 5, "invest": 5, "effici": [5, 11, 12, 26], "fund": 5, "due": 5, "capac": [5, 7, 10, 11, 13, 20, 26], "high": 5, "qualiti": 5, "hqla": 5, "collateralis": 5, "lower": [5, 36], "particip": 5, "monei": [5, 23], "institut": 5, "inverstor": 5, "meet": 5, "without": [5, 8, 9, 10, 11, 13], "strateg": 5, "long": [5, 8, 9, 30], "oper": 5, "shortli": 5, "mention": [5, 6], "begin": [5, 35], "wide": 5, "reduc": 5, "under": [5, 6, 30], "normal": [5, 8, 9, 10, 11, 12, 13, 20, 26, 28, 30], "condit": [5, 8, 26, 28, 30], "financ": [5, 9], "leverag": [5, 23], "investor": 5, "cover": [5, 18], "posit": [5, 6, 17], "hedg": 5, "strategi": [5, 8, 30], "allow": [5, 6, 9, 21, 35], "These": [5, 24], "import": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 35], "feed": 5, "underli": [5, 18, 20, 26, 28], "through": [5, 21, 35], "trade": [5, 8, 30], "exploit": 5, "discrep": 5, "arbitrag": 5, "intern": [5, 6, 17, 26, 35, 36], "capit": 5, "accoci": 5, "icma": 5, "conduct": 5, "survei": 5, "june": 5, "2022": [5, 14], "3": [5, 6, 7, 8, 9, 11, 13, 20, 23, 34, 35], "ask": 5, "europ": 5, "side": 5, "were": 5, "still": 5, "outstand": 5, "close": [5, 13, 14], "busi": [5, 35], "8th": 5, "accord": [5, 6, 20, 28, 35, 36], "total": [5, 11, 20, 23, 26], "book": 5, "56": [5, 7, 10, 14], "wa": [5, 13, 30], "9": [5, 6, 7, 13], "680": 5, "billion": 5, "eur": [5, 17, 18], "prior": 5, "similar": 5, "59": [5, 7], "year": [5, 6, 9, 35], "earlier": 5, "8": [5, 6, 7, 10, 11, 12, 13, 26, 35], "726": 5, "4": [5, 6, 7, 9, 11, 12, 13, 14, 20, 23, 26, 34], "compar": [5, 6, 21], "matur": [5, 6, 17, 21, 28, 30, 34], "between": [5, 6, 12, 21, 23, 26, 28, 30, 35], "main": [5, 6], "automat": 5, "ATS": 5, "agent": 5, "later": 5, "henc": [5, 6], "than": [5, 35], "commonli": 5, "govern": [5, 8, 30], "bond": [5, 19, 34, 36], "equiti": [5, 15, 19, 24, 29, 35], "copor": 5, "veri": 5, "frequent": 5, "classifi": 5, "gc": 5, "sc": 5, "both": [5, 35], "repres": [5, 6, 20], "two": [5, 6, 8, 18, 21, 23, 28, 30, 35, 36], "driver": 5, "driven": [5, 23], "6": [5, 6, 7, 9, 11, 12, 13, 14, 20, 26, 34, 35], "basekt": 5, "same": [5, 7, 35], "mean": [5, 7, 8, 9, 10, 12, 13, 26, 28, 30, 35], "substitut": 5, "anoth": 5, "indiffer": 5, "given": [5, 6, 9, 11, 21, 23, 26, 28, 30, 34, 35, 36], "fact": 5, "suppli": [5, 8, 30], "demand": [5, 8, 26, 30], "furthermor": 5, "grant": 5, "permiss": 5, "5": [5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 28, 30, 34, 35, 36], "subordin": [5, 35, 36], "primarili": 5, "come": [5, 10], "basket": 5, "privod": 5, "subject": 5, "except": [5, 6, 16, 21, 23, 25, 34, 35, 36], "said": 5, "distinctli": 5, "becom": 5, "larg": [5, 21], "neg": 5, "7": [5, 6, 7, 10, 11, 12, 13, 26], "spread": [5, 36], "seen": [5, 30], "fee": 5, "thu": 5, "understood": 5, "sinc": 5, "intent": 5, "sought": 5, "after": [5, 6, 7, 11, 17, 21, 26, 36], "One": [5, 25, 30], "common": [5, 24], "go": 5, "cheapest": 5, "deliv": [5, 20], "counterparti": 5, "primari": 5, "inabl": 5, "repai": 5, "contractu": 5, "oblig": 5, "higher": [5, 30, 36], "pai": 5, "compens": 5, "consist": [5, 20, 35], "influenc": [5, 8, 30], "liqud": 5, "taken": [5, 30], "riski": 5, "mitig": 5, "loss": [5, 7, 13, 17], "take": 5, "further": [5, 20, 25], "case": 5, "next": [5, 6, 7, 11, 28], "If": [5, 6, 16, 17, 20, 21, 25, 30, 32, 35], "correl": [5, 23, 28, 30], "wrong": 5, "wai": [5, 11], "account": 5, "haircut": 5, "initi": [5, 11, 26, 28, 30], "margin": 5, "init": 5, "adjust": [5, 35], "10": [5, 6, 7, 9, 10, 11, 13, 14, 21, 23, 26, 30], "marign": 5, "unexpect": [5, 8, 30], "face": [5, 17], "difficulti": 5, "respons": [5, 23], "h": [5, 7, 13], "im": 5, "r": [5, 6, 7, 8, 10, 12, 13, 20, 26, 30, 34, 36], "t": [5, 6, 7, 8, 10, 11, 12, 13, 20, 21, 23, 26, 30, 34, 36], "calcul": [5, 6, 23, 28, 32], "align": 5, "p_": 5, "text": 5, "cdot": [5, 26], "frac": [5, 8, 21, 23, 26, 30, 36], "100": [5, 7, 8, 9, 10, 11, 12, 13, 17, 26], "left": [5, 11, 35], "end": [5, 13, 14, 20, 23, 25, 30, 35], "express": [5, 23, 35], "pruchas": 5, "cdot100": 5, "rel": [5, 17], "therebi": 5, "appli": [5, 6, 20, 23, 26, 28], "102": [5, 7, 8], "equival": 5, "relationship": 5, "comput": [5, 8, 21, 23, 26, 28, 30, 33, 34, 35, 36], "need": [5, 6, 24, 26], "result": [5, 6, 7, 10, 11, 12, 13, 14, 17, 20, 25, 26, 35], "041": 5, "12": [5, 7, 10, 11, 12, 13, 14], "onc": 5, "upon": 5, "fix": [5, 8, 17, 20, 35, 36], "full": [5, 7, 13], "quiet": 5, "natur": 5, "increas": 5, "decreas": 5, "significantlli": 5, "expos": 5, "defaulti": 5, "abl": 5, "recov": 5, "variat": [5, 26, 30], "rebal": 5, "assum": [5, 8, 11, 17, 20, 23, 30], "dirti": 5, "p_d": 5, "nomin": 5, "n": [5, 11, 21, 26, 28], "000": 5, "800": 5, "094": 5, "30": [5, 7, 14, 21, 34], "dai": [5, 6, 7, 11, 13, 18, 21, 23, 26, 34, 35], "d": [5, 6, 16, 21, 23, 26, 28, 30, 35], "30d": 5, "90": [5, 6, 7], "accru": 5, "024": 5, "658": 5, "divid": [5, 6], "new": [5, 10, 35], "11": [5, 6, 7, 8, 9, 10, 11, 13, 35], "138": [5, 7], "508": 5, "exce": 5, "alreadi": [5, 7, 12, 14], "hold": [5, 25], "addit": 5, "exceed": 5, "demonstr": [5, 11], "scenario": 5, "significantli": 5, "exposur": 5, "minimis": 5, "minimum": [5, 9, 30], "below": [5, 36], "thei": [5, 24], "daili": [5, 9, 35], "legal": 5, "titl": [5, 9, 10, 12], "produc": 5, "issuer": [5, 16, 17, 18, 19, 36], "howev": 5, "retain": 5, "commit": 5, "its": [5, 6, 9, 35], "plu": 5, "receiv": 5, "correspond": [5, 6, 11], "immedi": 5, "compensatori": 5, "ani": 5, "incom": [5, 36], "manufactur": 5, "14": [5, 7, 11, 12, 13], "he": 5, "she": 5, "entitl": 5, "benefit": 5, "ownership": 5, "annex": 5, "master": 5, "gmra": 5, "decis": [5, 8, 30], "corpor": 5, "action": 5, "give": [5, 6, 21], "requisit": 5, "notic": 5, "select": [5, 7, 13, 18, 34], "deliveri": [5, 8, 20, 30], "custodi": 5, "manag": [5, 8, 30], "outsourc": 5, "third": [5, 6], "Such": 5, "tr": 5, "custodian": 5, "depositori": 5, "nation": 5, "clearstream": 5, "luxembourg": 5, "euroclear": 5, "jp": 5, "morgan": 5, "been": [5, 36], "phone": 5, "electron": [5, 26], "independ": [5, 36], "notifi": 5, "suffici": 5, "revalu": 5, "15": [5, 7, 8, 13], "fice": 5, "date": [5, 6, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 34], "termin": [5, 30], "either": [5, 6, 9, 20, 21, 30, 35], "period": [5, 8, 17, 20, 30, 35], "chang": [5, 8, 9, 30], "up": [5, 7, 9, 11, 13], "down": 5, "re": 5, "request": [5, 34], "altern": 5, "link": 5, "would": [5, 36], "approach": 5, "combin": [5, 36], "minu": [5, 17], "16": [5, 7, 8, 9, 13, 14], "practition": 5, "basi": [5, 36], "bp": 5, "relat": [5, 8, 20, 26, 30, 36], "1bp": 5, "01": [5, 28], "dailti": 5, "compound": [5, 6, 21], "discret": [5, 30], "month": [5, 35], "mani": 5, "exchang": [5, 30], "against": [5, 20], "look": 5, "reinvest": 5, "rebat": 5, "proport": 5, "analogon": 5, "who": 5, "recevi": 5, "simulatn": 5, "net": 5, "those": 5, "faq": 5, "januari": 5, "2019": 5, "2021": [5, 35], "practiv": 5, "eu": 5, "integr": [5, 8, 28, 30], "introduct": 5, "council": 5, "erc": 5, "2012": [5, 26], "13": [5, 7, 13], "theori": 5, "intermedi": 5, "overview": [5, 6], "convent": [5, 6, 35], "datetim": [6, 7, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 25, 26, 33, 34, 35, 36], "dt": [6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 23, 25, 26, 28, 30, 35, 36], "math": [6, 30], "panda": [6, 14, 20, 25, 35, 36], "pd": [6, 13, 14, 35, 36], "matplotlib": [6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 23], "pyplot": [6, 7, 8, 9, 10, 11, 12, 13, 14], "plt": [6, 7, 8, 9, 10, 11, 12, 13, 14, 21], "enum": [6, 15, 18, 21, 23, 36], "daycountertyp": [6, 21, 23, 35], "interpolationtyp": [6, 21, 35], "extrapolationtyp": [6, 21, 35], "load_ext": [6, 7, 8, 10, 11, 12, 13, 14], "autoreload": [6, 7, 8, 10, 11, 12, 13, 14], "lin": 6, "jupyt": 6, "command": 6, "show": 6, "graph": 6, "inlin": [6, 7, 10, 11, 12, 13, 14], "store": [6, 23, 24], "interpol": [6, 21, 23], "arbitrari": [6, 21], "extrapol": [6, 21], "counter": 6, "convert": 6, "fraction": [6, 17], "inter": 6, "assumpt": 6, "continu": [6, 21], "df": [6, 21], "base": [6, 17, 19, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 36], "constant": [6, 20, 21, 23, 30, 35, 36], "rt": 6, "object": [6, 9, 13, 17, 19, 21, 22, 23, 24, 25, 26, 28, 34, 35, 36], "id": [6, 16, 17, 18, 20, 21, 22, 23, 25], "nearli": 6, "structur": 6, "analyt": [6, 34], "librari": [6, 9, 13], "nice": 6, "identifi": [6, 18, 20, 21, 23, 24, 25, 26], "object_id": 6, "test_dc": 6, "enter": 6, "must": [6, 7, 9, 17, 18, 20, 21, 23, 35], "ptime": 6, "get": [6, 10, 11, 12, 17, 23, 26], "forward": [6, 10, 11, 21, 23, 25, 27, 29, 30, 35], "help": [6, 8, 30], "parenthes": 6, "uncom": 6, "refdat": [6, 20, 21, 22, 23, 25], "2017": 6, "list": [6, 7, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 26, 30, 35], "c": [6, 8, 10, 11, 36], "swig": 6, "vector": [6, 20], "helper": 6, "number": [6, 9, 11, 16, 17, 21, 23, 25, 28, 30, 35, 36], "ad": [6, 35], "4th": 6, "5th": 6, "desir": 6, "frequenc": [6, 17, 20, 25, 35], "days_to_matur": 6, "180": [6, 7, 10], "365": [6, 8, 9, 10, 11, 12, 13, 23, 26], "720": 6, "timedelta": [6, 7, 13, 21], "discount_r": 6, "03": 6, "exp": 6, "count": 6, "act365fix": [6, 21, 35], "roll": [6, 35], "schedul": [6, 7, 8, 13, 19, 25, 30, 35], "gener": [6, 16, 20, 25, 28, 35, 36], "type": [6, 7, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 26, 28, 30, 34, 35, 36], "necessari": 6, "until": 6, "last": [6, 13, 16, 35], "hagan_df": [6, 21, 35], "advantag": 6, "monoton": 6, "convex": 6, "unamelior": 6, "contrast": [6, 20, 26], "ensur": [6, 26, 35], "probabl": [6, 16, 36], "suitabl": 6, "problem": 6, "hagan": [6, 35], "west": 6, "construct": [6, 36], "yield": [6, 21, 22], "2008": 6, "diagram": 6, "linear": [6, 23, 26, 35, 36], "newli": 6, "0065": 6, "0003": 6, "0059": 6, "0086": 6, "0101": 6, "02": [6, 21], "dsc_fac": 6, "rang": [6, 7, 8, 9, 10, 11, 12, 21, 26], "len": [6, 7, 10, 11, 14], "dc_linear": 6, "none": [6, 8, 11, 16, 17, 20, 21, 23, 25, 26, 28, 30, 34, 35, 36], "dc_hagan": 6, "discount_factor": [6, 21], "fals": [6, 18, 21, 32, 35], "xlabel": [6, 7, 9, 10, 11, 12, 13], "ylabel": [6, 7, 10, 11, 12, 13], "zero": [6, 17, 21, 26], "legend": [6, 8, 9, 11, 12], "our": 6, "name": [6, 16, 17, 18, 20, 23, 25, 26, 35], "dc": [6, 21], "befor": [6, 18, 20], "manual": [6, 13, 18], "deriv": [6, 20, 30], "recent": [6, 13], "shall": [6, 35], "step": [6, 7, 13, 28, 30], "final": [6, 7, 9, 10, 13, 17, 36], "print": [6, 8, 10], "u": [6, 11], "df1": 6, "9853143806656076": 6, "fwd_df": 6, "fwd": 6, "9926300321180352": 6, "prove": 6, "equal": [6, 16, 21, 25, 26, 30], "df2": 6, "simpli": [6, 10], "discoutn": 6, "depend": [6, 9, 20, 26, 30], "granular": 6, "timegrid": [6, 7, 8, 9, 10, 11, 12, 13, 21, 26, 30], "kwarg": [6, 7, 13, 21, 23, 26, 34], "coars": 6, "300": [6, 12], "marker": 6, "x": [6, 7, 9, 11, 12, 13, 26, 28, 30, 34], "fine": 6, "figur": [6, 7, 9, 10, 11, 12, 13, 30, 36], "second": [6, 28, 30], "flat": [6, 21, 23, 36], "togeth": [6, 17, 35, 36], "exactli": [6, 8], "linearlog": [6, 35], "scheme": [6, 30], "ensembl": 6, "smoothli": 6, "annual": 6, "choos": 6, "25": [7, 9, 14], "sy": [7, 8, 9, 10, 11, 12, 13, 14], "numpi": [7, 8, 9, 10, 11, 12, 13, 14, 16], "np": [7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23, 25, 26, 28, 30, 36], "datetime_grid": [7, 10, 11, 12, 13, 14, 35], "datetimegrid": [7, 10, 11, 12, 13, 15, 20, 26, 33], "residual_demand_fwd_model": [7, 11, 12, 13], "windpowerforecastmodel": [7, 10, 11, 12, 13, 27, 29], "multiregionwindforecastmodel": [7, 10, 11, 13, 27, 29], "lineardemandforwardmodel": [7, 10, 13, 27, 29], "greenppaspecif": [7, 13, 14, 20], "green_ppa_pr": [7, 13], "greenppadeephedgingpric": [7, 13], "extens": [7, 12, 14], "load": [7, 9, 12, 13, 14, 20, 23, 26], "reload": [7, 12, 14], "reload_ext": [7, 12, 14], "58": 7, "wind_region_model": [7, 10, 11], "vol": [7, 10, 11, 23, 28, 34], "mean_reversion_spe": [7, 9, 10, 11, 28], "10_000": [7, 8, 9, 10, 11, 12, 13], "120_000": [7, 11], "75_000": [7, 11], "rnd_weight": [7, 10, 11, 13, 26], "random": [7, 8, 9, 10, 11, 12, 13, 26, 28, 30], "seed": [7, 10, 11, 12, 13, 14, 16, 17, 26, 36], "42": [7, 10, 11, 12, 13, 14], "region": [7, 10, 11, 13, 26, 36], "region_": [7, 10, 11], "str": [7, 8, 9, 10, 11, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 30, 34, 35, 36], "speed_of_mean_revers": [7, 9, 10, 11, 12, 13, 26, 30], "append": [7, 8, 9, 10, 11, 14], "wind_germani": [7, 10, 11, 13, 26], "63": 7, "three": [7, 11, 36], "simul": [7, 13, 20, 26, 28, 29, 30, 32], "weather": [7, 8, 11, 15, 29, 30], "forecast": [7, 11, 20, 27, 29], "over": [7, 8, 9, 10, 11, 26, 28, 30], "ten": [7, 11], "four": [7, 11], "hour": [7, 11, 20], "wind_onshor": [7, 13, 26], "onshor": [7, 12, 13, 26], "80": [7, 13, 14, 26], "wind_offshor": [7, 13, 26], "offshor": [7, 13, 26], "1000": [7, 13, 26], "wind_power_forecast": [7, 10, 13, 26], "x_mean_reversion_spe": [7, 10, 13, 26], "x_volatil": [7, 10, 13, 26], "power_nam": [7, 10, 13, 26], "power_germani": [7, 10, 13], "val_dat": [7, 13, 34], "2023": [7, 9, 13, 14, 20, 21], "strike": [7, 13, 18, 23, 26, 28, 30, 34], "22": [7, 12, 13], "purpos": [7, 11], "timepoint": [7, 12, 20, 25, 30, 35], "spec": [7, 13, 34], "udl": [7, 13, 14, 20, 26], "technologi": [7, 13, 14, 20, 26], "fixed_pric": [7, 13, 14, 20], "max_capac": [7, 13, 14, 20], "35": [7, 14], "open": [7, 9, 13], "hedge_result": [7, 13], "json": [7, 13, 14, 20], "factoryobject": [7, 13, 21, 26, 30, 36], "def": [7, 13], "compute_pnl_figur": [7, 13], "pricing_result": [7, 13], "hedge_model": [7, 13], "compute_pnl": [7, 13], "payoff": [7, 13], "var": [7, 13], "percentil": [7, 13], "99": [7, 10, 13, 26], "run_hedge_experi": [7, 13], "ppa_spec": [7, 13], "param": [7, 10, 12, 13, 20, 26, 34, 36], "to_dict": [7, 13], "ppa_spec_hash": [7, 13], "hash": [7, 13], "model_hash": [7, 13], "pricing_param": [7, 13], "hash_kei": [7, 13], "hash_for_dict": [7, 13], "save": [7, 13, 36], "deephedgemodel": [7, 13], "48": [7, 13], "initial_forecast": [7, 10, 11, 12, 13, 26], "forecast_hour": [7, 13], "18": [7, 9, 13], "power_fwd_pric": [7, 10, 13, 26], "additional_st": [7, 13], "nb_neuron": [7, 13], "32": [7, 13], "n_sim": [7, 8, 11, 13, 14, 26, 28, 30], "epoch": [7, 13], "200": [7, 34], "verbos": [7, 13], "tensorboard_logdir": [7, 13], "now": [7, 13], "strftime": [7, 13], "y": [7, 13, 28, 35], "m": [7, 13, 23, 30, 35], "initial_lr": [7, 13], "5e": [7, 13], "decay_step": [7, 13], "8_000": [7, 13], "batch_siz": [7, 13], "decay_r": [7, 13], "17": [7, 9, 13], "9m": 7, "0748": 7, "10m": 7, "57": [7, 10, 11, 13], "1345": 7, "2935": 7, "3058": 7, "4609": 7, "2791": 7, "5345": 7, "5680": 7, "5070": 7, "11m": 7, "6425": 7, "7022": 7, "6431": 7, "8447": 7, "8181": 7, "0594": 7, "7443": 7, "8472": 7, "7625": 7, "19": [7, 13], "6200": 7, "20": [7, 8, 13, 14], "0329": 7, "21": [7, 12, 35], "8m": 7, "0984": 7, "1440": 7, "23": [7, 12], "0437": 7, "24": [7, 11, 13, 14, 23, 26], "1623": 7, "1652": 7, "26": 7, "1461": 7, "27": [7, 14], "0795": 7, "28": [7, 10], "1315": 7, "29": [7, 8, 9, 13], "4154": 7, "0741": 7, "31": [7, 12, 14], "4873": 7, "0742": 7, "33": 7, "1776": 7, "34": 7, "3237": 7, "4545": 7, "36": [7, 14], "1950": 7, "37": [7, 13, 14], "5764": 7, "38": 7, "5523": 7, "39": [7, 8, 9, 10, 11, 13, 14], "5614": 7, "40": [7, 10, 12], "4321": 7, "41": [7, 14], "5292": 7, "1725": 7, "43": [7, 14], "3911": 7, "44": [7, 14], "4417": 7, "45": [7, 12], "3296": 7, "46": [7, 12], "5636": 7, "47": 7, "6052": 7, "7038": 7, "49": 7, "0396": 7, "50": [7, 11, 14, 30], "6065": 7, "51": 7, "4872": 7, "52": [7, 10, 14], "7104": 7, "53": [7, 10], "5281": 7, "54": [7, 10], "5578": 7, "55": [7, 10, 14], "7209": 7, "6060": 7, "8431": 7, "5013": 7, "6965": 7, "60": [7, 34], "5682": 7, "61": 7, "8205": 7, "62": 7, "6114": 7, "7481": 7, "64": [7, 9, 13], "6208": 7, "65": [7, 11], "7421": 7, "66": 7, "8608": 7, "67": [7, 13], "6763": 7, "68": [7, 11], "6972": 7, "69": 7, "7149": 7, "70": [7, 14], "8701": 7, "71": 7, "7835": 7, "72": 7, "5113": 7, "73": [7, 14], "8753": 7, "74": 7, "8921": 7, "75": [7, 11], "8704": 7, "76": 7, "7734": 7, "77": 7, "6486": 7, "78": 7, "9483": 7, "79": 7, "8145": 7, "0546": 7, "81": [7, 8, 14], "2094": 7, "82": [7, 14], "8848": 7, "83": 7, "7014": 7, "84": 7, "0036": 7, "85": [7, 13, 14], "2027": 7, "86": 7, "7719": 7, "87": 7, "2104": 7, "88": [7, 14], "1077": 7, "89": [7, 14], "1913": 7, "1187": 7, "91": [7, 14], "8045": 7, "92": 7, "1866": 7, "93": 7, "1433": 7, "94": 7, "1358": 7, "95": [7, 36], "0606": 7, "96": 7, "8327": 7, "97": 7, "3395": 7, "98": [7, 8], "2071": 7, "0840": 7, "2641": 7, "101": [7, 14], "3255": 7, "1076": 7, "103": 7, "3887": 7, "104": [7, 8], "3459": 7, "105": 7, "2896": 7, "106": [7, 14], "0486": 7, "107": [7, 8], "1720": 7, "108": 7, "3628": 7, "109": 7, "2567": 7, "110": 7, "4963": 7, "111": 7, "3636": 7, "112": 7, "2849": 7, "113": 7, "1848": 7, "114": 7, "4218": 7, "115": 7, "5415": 7, "116": 7, "4086": 7, "117": [7, 14], "4688": 7, "118": 7, "3316": 7, "119": 7, "5377": 7, "120": [7, 14, 21], "5881": 7, "121": 7, "2610": 7, "122": 7, "1884": 7, "123": 7, "5057": 7, "124": [7, 14], "6652": 7, "125": 7, "4807": 7, "126": 7, "5941": 7, "127": 7, "4402": 7, "128": 7, "5899": 7, "129": 7, "6717": 7, "130": 7, "7818": 7, "131": 7, "5089": 7, "132": 7, "6811": 7, "133": 7, "4734": 7, "134": 7, "6051": 7, "135": 7, "6378": 7, "136": 7, "6876": 7, "137": 7, "5723": 7, "7550": 7, "139": 7, "140": 7, "6651": 7, "141": 7, "7251": 7, "142": 7, "8088": 7, "143": 7, "6272": 7, "144": [7, 14], "6373": 7, "145": 7, "8107": 7, "146": 7, "8617": 7, "147": 7, "12m": 7, "8905": 7, "148": 7, "9687": 7, "149": 7, "6024": 7, "150": [7, 14], "7846": 7, "151": 7, "8150": 7, "152": 7, "0052": 7, "153": [7, 14], "9283": 7, "154": 7, "0504": 7, "155": 7, "8670": 7, "156": 7, "0604": 7, "157": 7, "0452": 7, "158": 7, "9956": 7, "159": 7, "8637": 7, "160": 7, "0492": 7, "161": 7, "2419": 7, "162": 7, "14m": 7, "0192": 7, "163": 7, "1573": 7, "164": 7, "0064": 7, "165": 7, "1912": 7, "166": 7, "0800": 7, "167": 7, "0389": 7, "168": 7, "2700": 7, "169": 7, "3217": 7, "170": 7, "3196": 7, "171": 7, "0230": 7, "172": 7, "2097": 7, "173": 7, "0778": 7, "174": 7, "2015": 7, "175": 7, "2222": 7, "176": 7, "15m": 7, "2063": 7, "177": 7, "3632": 7, "178": 7, "3876": 7, "179": 7, "4047": 7, "2296": 7, "181": 7, "4032": 7, "182": 7, "183": 7, "3455": 7, "184": 7, "0272": 7, "185": 7, "2886": 7, "186": 7, "3880": 7, "187": 7, "4071": 7, "188": 7, "4448": 7, "189": 7, "3125": 7, "190": 7, "4197": 7, "191": 7, "6435": 7, "192": 7, "4093": 7, "193": 7, "4141": 7, "194": 7, "5205": 7, "195": 7, "6082": 7, "196": 7, "6875": 7, "197": 7, "5896": 7, "198": 7, "4946": 7, "199": 7, "4706": 7, "p": [7, 11, 13, 35], "linspac": [7, 8, 10, 11, 12, 13, 26], "250": [7, 13], "projected_kei": [7, 13], "onshore_fwd0": [7, 12, 13], "400": [7, 11, 13], "power_germany_fwd0": [7, 10, 13], "ab": [7, 13], "argmin": [7, 13], "ttm": [7, 13, 23, 26, 28, 30], "k": [7, 11, 13, 23, 28, 30], "item": [7, 13], "els": [7, 13], "shape": [7, 8, 9, 10, 11, 12, 13, 23, 26, 28, 30], "fill_valu": [7, 13], "compute_delta": [7, 13], "axhlin": [7, 13], "2m": [7, 13], "hist": [7, 9, 10, 11, 12, 13], "bin": [7, 9, 10, 11, 12, 13], "alpha": [7, 8, 9, 10, 11, 12, 13, 23, 28], "densiti": [7, 9, 11, 13], "true": [7, 9, 11, 13, 14, 17, 21, 28, 30, 32, 34, 35], "axvlin": [7, 13], "313": [7, 13], "3m": [7, 13], "4m": [7, 13], "5m": 7, "6m": [7, 35], "arrai": [7, 8, 14, 16, 23, 25, 28, 30], "96342516": 7, "9541502": 7, "93505478": 7, "96750641": 7, "94349718": 7, "9708209": 7, "9377141": 7, "94514942": 7, "93932056": 7, "97665215": 7, "89261341": 7, "98755884": 7, "91135311": 7, "4707756": 7, "53898621": 7, "6346302": 7, "44033623": 7, "54989147": 7, "69465256": 7, "26119041": 7, "7964592": 7, "15811348": 7, "18714333": 7, "7241621": 7, "53804398": 7, "61169815": 7, "44512558": 7, "17195511": 7, "64533424": 7, "50994349": 7, "93655777": 7, "10000": 7, "figsiz": [7, 9, 10, 11, 12, 13], "n_x": [7, 13], "n_y": [7, 13], "l": [7, 13], "w": [7, 9, 13, 20, 23, 26, 34, 36], "subplot": [7, 9, 10, 12, 13], "factor": [8, 20, 21, 23, 30], "power": [8, 10, 14, 15, 19, 24, 27, 29, 30], "mathemat": [8, 30], "explain": [8, 11, 30], "behavior": [8, 9, 30], "electr": [8, 26, 30], "mainten": [8, 30], "plant": [8, 20, 30], "failur": [8, 30], "revert": [8, 30], "process": [8, 9, 11, 15, 26, 29, 34], "tend": [8, 30], "move": [8, 30], "toward": [8, 30], "averag": [8, 9, 30], "overal": [8, 26, 30, 36], "trend": [8, 30], "economi": [8, 30], "energi": [8, 15, 20, 29, 30], "fuel": [8, 30], "technolog": [8, 30], "advanc": [8, 30], "walk": [8, 30], "unpredict": [8, 30], "manner": [8, 30], "understand": [8, 30], "complex": [8, 30], "By": [8, 20, 25, 30], "trader": [8, 30], "analyst": [8, 30], "make": [8, 9, 11, 30], "risk": [8, 30], "path": [8, 9, 10, 12, 14, 26, 28, 30, 32], "doeltz": [8, 9, 10, 11, 13, 14], "doc": [8, 10, 11], "__init__": [8, 9, 10, 11, 13], "userwarn": [8, 9, 10, 11, 13], "pyvacon": [8, 9, 10, 11, 13], "avail": [8, 9, 10, 11, 13], "warn": [8, 9, 10, 11, 13], "ls_model": 8, "luciaschwartz": [8, 29, 30], "rho": [8, 23, 28, 30, 34], "kappa": [8, 28, 30], "077": 8, "sigma1": [8, 30], "mu": [8, 9, 30], "sigma2": [8, 30], "rnd": [8, 9, 10, 11, 12, 13, 26, 28, 30], "rnd_shape": [8, 10, 11, 12, 13, 26, 29, 30], "start_valu": [8, 9, 26, 30], "plot": [8, 9, 10, 11, 12, 21, 23, 26], "commod": 8, "liquidli": 8, "interval": 8, "approxim": [8, 12], "t_1": [8, 30], "t_2": [8, 30], "int_": [8, 30], "compute_fwd_valu": [8, 29, 30], "t1": [8, 28, 30], "t2": [8, 30], "specifi": [8, 17, 30, 35], "100_000": [8, 13], "label_fwd1": 8, "label_fwd2": 8, "label": [8, 9, 10, 11, 12, 17], "ou": [9, 12], "evolut": 9, "commoditii": 9, "context": 9, "captur": 9, "tendenc": 9, "fluctuat": 9, "around": 9, "dx_t": 9, "lambda": [9, 26, 30], "sigma": [9, 12, 23, 26, 30], "dw_t": [9, 23, 26, 30], "speed": [9, 11, 26, 28, 30], "how": [9, 11, 30], "fast": [9, 30], "drift": [9, 30], "denot": [9, 11, 26], "volati": 9, "sever": [9, 24], "real": [9, 10, 17], "world": 9, "phenomena": 9, "stationari": 9, "statist": 9, "markovian": 9, "state": 9, "histori": 9, "home": [9, 13, 14], "05": [9, 13, 21, 34], "07": 9, "860283": 9, "tensorflow": [9, 13], "stream_executor": [9, 13], "platform": [9, 13], "dso_load": [9, 13], "cc": [9, 13], "could": [9, 13], "dynam": [9, 13], "libcudart": [9, 13], "dlerror": [9, 13], "cannot": [9, 13], "share": [9, 13, 18], "No": [9, 13], "directori": [9, 13], "860298": 9, "cuda": [9, 13], "cudart_stub": [9, 13], "ignor": [9, 13, 20, 28], "cudart": [9, 13], "gpu": [9, 13], "machin": [9, 13, 28], "mr_speed": 9, "ou_model": 9, "ornsteinuhlenbeck": [9, 10, 13, 26, 29, 30], "sim": 9, "uniform": [9, 30], "grid": [9, 11, 23, 28, 35], "done": 9, "maximum": [9, 30], "likelihood": [9, 30], "least": [9, 30], "squar": [9, 30], "arang": 9, "5yr": 9, "horizon": 9, "iter": [9, 34], "perform": 9, "simualt": 9, "mean_level": [9, 26], "empti": 9, "reshap": 9, "minimum_least_squar": [9, 30], "mean_reversion_level": [9, 30], "meanrevers": 9, "residual_demand_model": [10, 13, 14], "windpowerforecastmodelparamet": [10, 12, 26], "n_call_strik": [10, 12], "min_strik": [10, 12], "max_strik": [10, 12], "setup": [10, 11, 26], "region_0": [10, 11], "simulated_wind": 10, "wind_germany_fwd0": [10, 11, 13], "simulated_pow": 10, "region_0_fwd0": [10, 11], "78492806280833": 10, "2f": [10, 12], "axi": [10, 12], "v": [10, 12, 13], "distribut": [10, 12, 36], "arriv": 10, "timegridpoint": [10, 35], "hand": 10, "forecast_point": 10, "indic": [10, 17, 18, 35, 36], "simulated_wind_disc": 10, "forecast_timepoint": [10, 26], "simulated_power_disc": 10, "twinx": 10, "residualdemandforwardmodel": [11, 13, 27, 29], "wind": [11, 13, 14, 20, 27, 29], "greeen": 11, "ppa": [11, 20, 32], "artifici": 11, "let": 11, "q_i": 11, "maxim": [11, 20], "i_t": 11, "x_0": 11, "right": 11, "mid": [11, 26], "invert": 11, "sigmoid": [11, 26], "logist": [11, 26, 36], "smoothstep": 11, "x_t": [11, 12, 26, 30], "stochast": [11, 15, 23, 29], "phi": 11, "i_0": 11, "forward_expiri": [11, 13, 26], "region_1": 11, "region_2": 11, "repsect": 11, "obtain": [11, 26], "region_0_fwd1": 11, "region_0_fwd2": 11, "region_0_fwd3": 11, "region_1_fwd0": 11, "region_1_fwd1": 11, "region_1_fwd2": 11, "region_1_fwd3": 11, "region_2_fwd0": 11, "region_2_fwd1": 11, "region_2_fwd2": 11, "region_2_fwd3": 11, "wind_germany_fwd1": 11, "wind_germany_fwd2": 11, "wind_germany_fwd3": 11, "fwd0": 11, "tmp": [11, 13], "j": [11, 30], "color": 11, "get_color": 11, "fontsiz": 11, "savefig": 11, "wind_efficiency_simul": 11, "png": 11, "dpi": 11, "wind_efficiency_dist": 11, "cell": 11, "snippet": 11, "easi": 11, "geopanda": 11, "visual": 11, "spatial": 11, "meaning": 11, "instructiosn": 11, "run": 11, "geopandas_residual_demand_forward_model": 11, "plot_efficiency_map": 11, "wind_efficiency_map": 11, "_inv_logit": 12, "_logit": 12, "startvalu": [12, 26], "onshore_wind": 12, "7986522910880403": 12, "_path": 12, "realiz": 12, "expected_": 12, "compute_expected_valu": [12, 29, 30], "simple_correct": 12, "inv_logit_from_expect": 12, "invers": 12, "approx": 12, "simpl": [12, 17, 20, 25, 26, 30, 36], "o": [13, 17], "environ": 13, "cuda_visible_devic": 13, "ppa_specif": 13, "smoothstepsupplycurv": 13, "scipi": [13, 30, 34], "special": [13, 36], "comb": 13, "ipython": [13, 14], "displai": [13, 14], "html": [13, 14], "width": [13, 14], "06": 13, "177259": 13, "177279": 13, "n_timestep": [13, 26], "model_result": 13, "offshore_fwd0": 13, "self": [13, 14], "repo_dir": 13, "typeerror": 13, "traceback": 13, "ipykernel_437888": 13, "2057733429": 13, "lt": 13, "gt": 13, "got": 13, "multipl": 13, "train": 13, "configur": [13, 34], "found": 13, "compil": 13, "futurewarn": [13, 14], "deprec": [13, 14], "favor": [13, 14], "inclus": [13, 14, 35], "date_rang": [13, 14, 20, 25, 35], "start": [13, 14, 17, 20, 25, 28, 30, 35], "freq": [13, 14, 20, 25, 35], "tz": [13, 14, 20, 25, 35], "to_pydatetim": [13, 14], "0018e": 13, "04": 13, "8207e": 13, "9591e": 13, "8396e": 13, "7541e": 13, "6689e": 13, "5947e": 13, "6003e": 13, "4701e": 13, "4335e": 13, "4303e": 13, "3094e": 13, "3400e": 13, "3353e": 13, "3494e": 13, "05a": 13, "3430e": 13, "2063e": 13, "2050e": 13, "2099e": 13, "2132e": 13, "dict_kei": 13, "1m": 13, "simpleschedul": [14, 20], "powerpriceforwardcurv": [14, 24], "rdm_sampl": 14, "pricing_request": [14, 32, 34], "greenppapricingrequest": [14, 31, 32], "green_ppa_mean_pric": 14, "simple_schedul": [14, 20], "1h": [14, 20, 25, 35], "green_ppa": 14, "pr": 14, "theo_val": [14, 32], "cf_expect": [14, 32], "cf_path": [14, 32], "rd_model": 14, "wagnermodel": 14, "capacity_wind": [14, 26], "capacity_solar": [14, 26], "33955937000052": 14, "65277778": 14, "38856324": 14, "46445778": 14, "01461317": 14, "81824448": 14, "65894031": 14, "59769197": 14, "59260888": 14, "56582072": 14, "00689862": 14, "17623418": 14, "07224311": 14, "66679196": 14, "10256533": 14, "52760532": 14, "1915637": 14, "27188838": 14, "63575482": 14, "34946064": 14, "04721905": 14, "40655705": 14, "98860263": 14, "47875851": 14, "48219098": 14, "83472586": 14, "56825408": 14, "22650758": 14, "22908045": 14, "48726577": 14, "08113649": 14, "12449773": 14, "31010233": 14, "90576107": 14, "5151421": 14, "99336384": 14, "78853215": 14, "ones": 14, "get_schedul": [14, 20], "hpfc": 14, "discount": [15, 23, 24, 34], "curv": [15, 24, 25, 34, 36], "combospecif": [15, 19], "compon": [15, 19, 23], "pricingrequest": [15, 31, 34], "datetimefunct": [15, 33], "obj_id": [16, 17, 21], "esg_rat": 16, "esgrat": [16, 36], "countri": [16, 35, 36], "sector": [16, 36], "static": [16, 17, 21, 23, 26, 28, 35, 36], "_create_sampl": [16, 17, 36], "n_sampl": [16, 17], "rating_prob": 16, "ndarrai": [16, 20, 23, 25, 26, 28, 30, 33, 36], "country_prob": 16, "sector_prob": 16, "esg_rating_prob": 16, "explicit": [16, 30], "chosen": 16, "unqiu": 16, "ordererd": 16, "aaa": 16, "element": 16, "rais": [16, 23, 25, 30, 35], "getter": [16, 34, 35], "bond_specif": 17, "zerocouponbondspecif": 17, "issue_d": 17, "maturity_d": 17, "notion": 17, "securitization_level": 17, "securitizationlevel": [17, 18, 35], "coupon": [17, 35], "prefer": 17, "uniqu": [17, 20], "isin": 17, "_union": [17, 35], "issuanc": 17, "lie": 17, "alphabet": 17, "securit": [17, 18, 36], "paper": [17, 23, 26], "ref_dat": [17, 33, 36], "sec_level": 17, "expected_cashflow": 17, "tupl": [17, 21, 23, 26, 30, 36], "_list": 17, "plainvanillacouponbondspecif": [17, 36], "accrual_start": 17, "coupon_freq": 17, "stub": [17, 35], "bool": [17, 18, 20, 21, 28, 30, 32, 34, 35], "plainvanillacouponbond": 17, "first_coupond": 17, "1y": [17, 35], "yearli": 17, "from_str": [17, 35], "definit": [17, 23], "valid": 17, "multipli": [17, 20, 26, 28], "internali": 17, "absolut": [17, 20, 26], "cds_specif": 17, "cdsspecif": [17, 34], "premium": 17, "premium_pay_d": 17, "protection_start": 17, "recoveri": 17, "cash_settl": 17, "protect": 17, "foat": 17, "flag": [17, 35], "physic": 17, "settl": 17, "sec_lvl": 18, "collater": [18, 35], "curr": 18, "udl_id": 18, "share_ratio": 18, "european": 18, "vanilla": 18, "put": [18, 34], "expir": [18, 23], "iso": 18, "4217": 18, "ratio": 18, "singl": [18, 20, 36], "exercise_before_ex_d": 18, "american": 18, "exercis": 18, "dividend": [18, 23, 24, 30, 34], "ex": 18, "barrierspecif": 19, "europeanvanillaspecif": 19, "americanvanillaspecif": 19, "rainbowspecif": 19, "memoryexpressspecif": 19, "swap": [19, 30], "agreement": 19, "green": [19, 32], "secton": 20, "ppaspecif": 20, "union": [20, 21, 25, 26, 30, 35, 36], "volum": 20, "tabl": [20, 23, 24], "renew": 20, "paif": 20, "uuid": [20, 25], "compute_flow": 20, "pfc": 20, "datafram": [20, 25, 26, 36], "result_col": 20, "n_deliveri": 20, "set_amount": 20, "quantiti": 20, "kind": 20, "solar": [20, 27, 29], "uncertain": 20, "total_capac": [20, 26], "featur": [20, 36], "forecast_amount": 20, "weekdai": 20, "exclud": [20, 25], "detail": [20, 25, 30, 35, 36], "integ": 20, "monai": 20, "tuesdai": 20, "sundai": [20, 35], "tzinfo": [20, 25], "zone": [20, 25, 35], "local": [20, 25, 29, 35], "asia": [20, 25], "hong_kong": [20, 25], "timezon": [20, 25], "naiv": [20, 25], "restrict": 20, "mondai": 20, "get_df": [20, 21, 25], "get_param": 20, "dict": [20, 26, 36], "serializ": 20, "dictionari": 20, "belong": [20, 21, 36], "datetimepoint": [20, 25], "daycount": [21, 23, 35], "distinct": 21, "otherwis": [21, 30], "thrown": [21, 35], "length": 21, "doe": [21, 30], "get_dat": 21, "act365": 21, "yearfract": 21, "pass": [21, 23], "plto": [21, 23], "nelsonsiegel": [21, 36], "beta0": 21, "beta1": 21, "beta2": 21, "tau": 21, "nelson": [21, 36], "siegel": [21, 36], "mostli": 21, "conjunct": 21, "beta_0": 21, "beta_1": 21, "beta_2": 21, "asymptot": 21, "control": 21, "hump": 21, "rate_parametr": 21, "_summary_": [21, 28], "longrun": 21, "shortrun": 21, "locaton": 21, "nelsonsiegelsvensson": 21, "beta3": 21, "tau2": 21, "constantr": 21, "callabl": [21, 26, 30], "value_r": 21, "dividendt": [22, 23], "ex_dat": 22, "pay_dat": 22, "div_yield": 22, "div_cash": 22, "tax_factor": 22, "summari": 22, "equityforwardcurv": 23, "spot": [23, 27, 28, 29, 30], "funding_curv": 23, "borrow_curv": 23, "div_tabl": 23, "discount_curv": [23, 34], "days_end": 23, "3650": 23, "10yr": 23, "volatilitysurfac": 23, "forward_curv": 23, "vol_param": [23, 28], "market_data": [23, 36], "volatilityparametrizationflat": 23, "volatilityparametrizationterm": 23, "volatilityparametrizationssvi": 23, "calc_implied_vol": 23, "impli": [23, 28, 34], "set_sticky": 23, "vol_sticky": 23, "volatilitysticky": [23, 35], "fwd_atm_vol": 23, "sort": 23, "nearest": [23, 35], "farest": 23, "volatilityparametrizationsvi": 23, "svi_param": 23, "_volatilityparametrizationexpiri": 23, "raw": 23, "svi": 23, "http": 23, "ssrn": [23, 26], "com": 23, "sol3": 23, "cfm": 23, "abstract_id": 23, "2033323": 23, "sqrt": [23, 26, 30], "eta": 23, "gamma": [23, 34], "ssvi": 23, "skew": 23, "curvatur": 23, "decai": 23, "get_eta": 23, "get_fwd_atm_vol": 23, "get_gamma": 23, "get_rho": 23, "volatilityparametrizationsabr": 23, "sabr_param": 23, "sabr": 23, "bsic": 23, "smile": 23, "instantan": 23, "brownian": 23, "motion": 23, "df_t": 23, "alpha_t": 23, "f_t": 23, "beta": [23, 36], "nu": [23, 26], "bigl": 23, "bigr": 23, "satisfi": 23, "sigma_b": 23, "biggl": 23, "fk": 23, "biggr": 23, "ln": 23, "1920": 23, "z": 23, "chi": 23, "atm": 23, "simplifi": 23, "sigma_": 23, "drive": 23, "cev": 23, "backbond": 23, "volatilitygridparametr": 23, "neighbor": 23, "splien": 23, "varianc": [23, 28, 30], "dimension": [23, 25, 28, 30], "row": [23, 28, 36], "There": 24, "discountcurveparametr": 24, "forad": 25, "datetimepint": 25, "impact": 25, "windpowermodel": [26, 27, 29], "That": 26, "deviation_process": 26, "seasonal_funct": 26, "basemodel": 26, "calibr": [26, 28, 29, 30, 36], "deviation_model": 26, "seasonality_funct": 26, "min_effici": 26, "001": 26, "max_effici": 26, "n_timepoint": [26, 30], "basefwdmodel": 26, "ornstein": [26, 29], "uhlenbeck": [26, 29], "w_": 26, "x_": [26, 30, 36], "dx": [26, 30], "bar": 26, "_": 26, "forwardsimulationresult": 26, "wind_forecast_model": 26, "n_forward": 26, "eval_call_funct": 26, "weight": 26, "get_forward": 26, "ou_additive_forward_correct": 26, "region_forecast_model": 26, "sum": 26, "leq": 26, "x_i": 26, "sum_i": 26, "regions_result": 26, "n_random": 26, "region_nam": 26, "region_relative_capac": 26, "daily_maximum_process": 26, "profil": 26, "solar_germani": 26, "wind_model": 26, "solar_model": 26, "load_model": 26, "supply_curv": 26, "residu": 26, "wagner": 26, "p_t": 26, "determinist": [26, 30], "r_t": 26, "l_t": 26, "ic": 26, "e_t": [26, 30], "ic_t": 26, "wind_nam": 26, "start_value_wind": 26, "start_value_solar": 26, "start_value_load": 26, "rnd_wind": 26, "rnd_solar": 26, "rnd_load": 26, "rnd_state": 26, "_type_": [26, 28], "highest_pric": 26, "wind_result": 26, "additive_correct": 26, "get_technologi": 26, "highest_price_ou_model": 26, "max_pric": 26, "load_profil": 26, "floor": 26, "cap": 26, "peak": 26, "offpeak": 26, "peak_hour": 26, "q": [26, 30], "res_demand_low": 26, "res_demand_high": 26, "andrea": 26, "applic": 26, "journal": 26, "doi": [26, 30], "2139": 26, "2018908": 26, "instanten": [27, 29], "solarpowermodel": [27, 29], "residualdemandmodel": [27, 29], "loadmodel": [27, 29], "supplyfunct": [27, 29], "localvol": [28, 29], "x_strike": 28, "time_grid": 28, "call_pric": [28, 29], "local_vol_grid": 28, "parametris": 28, "call_param": 28, "Not": 28, "compat": 28, "apply_mc_step": [28, 29, 30], "t0": [28, 30], "inplac": [28, 30], "mc": [28, 30], "euler": [28, 30], "lv": 28, "column": 28, "compute_local_var": [28, 29], "min_lv": 28, "max_lv": 28, "hestonmodel": [28, 29], "long_run_vari": 28, "vol_of_vol": 28, "initial_vari": 28, "slv": [28, 30], "timestep": 28, "stochasticvolatilitymodel": 28, "s0": 28, "v0": 28, "characterist": 28, "feller_condit": [28, 29], "fulfil": 28, "feller": 28, "fullfil": 28, "get_initial_valu": [28, 29], "x0": [28, 30], "dw_": 28, "dy": 28, "theta": [28, 30, 34], "dw_y": 28, "dot": 28, "scottchesneymodel": [28, 29], "y0": 28, "timeseri": 28, "heta": 28, "lpha": 28, "stochasticlocalvol": [28, 29], "stoch_vol_model": 28, "stochastic_vol_model": 28, "stochasticvolmodel": 28, "calibrate_mc": [28, 29], "local_var": 28, "kernel": 28, "regress": [28, 36], "parametr": [28, 36], "reproduc": 28, "learn": 28, "compute_call_pric": [29, 30], "conditional_probability_dens": [29, 30], "lucia": 29, "schwartz": 29, "heston": 29, "scott": 29, "chesnei": 29, "faster": 30, "maximum_likelihood": 30, "fit": 30, "datapoint": [30, 35], "throw": [30, 34], "notimplementederror": 30, "encount": 30, "x_delta_t": 30, "delta_t": 30, "delta": [30, 34], "varepsilon": 30, "arg": 30, "arepsilon": 30, "timest": 30, "teh": 30, "th": 30, "introduc": 30, "discuss": 30, "x_1": 30, "x_2": 30, "dx_1": 30, "sigma_1dw_1": 30, "dx_2": 30, "sigma_2": 30, "dw_2": 30, "interpret": 30, "sigma_1": 30, "w_2": 30, "x1": 30, "x2": 30, "onedimension": 30, "twodimension": 30, "qm": 30, "qm_kwarg": 30, "continuo": 30, "neutral": 30, "measur": 30, "quadratur": 30, "romberg": 30, "keyword": 30, "forward_start_valu": 30, "julio": 30, "eduardo": 30, "evid": 30, "nordic": 30, "review": 30, "research": 30, "2002": 30, "1023": 30, "1013846631785": 30, "pricingrequestbas": 32, "abc": 33, "abstract": 33, "dt_grid": 33, "compute_european_price_buehl": 34, "is_cal": 34, "buehler": 34, "etc": [34, 35], "black": 34, "schole": 34, "compute_implied_vol_buehl": 34, "min_vol": 34, "max_vol": 34, "cal": 34, "putl": 34, "brentq": 34, "pricing_data": 34, "americanpdepricingdata": 34, "vol_surfac": 34, "resulttyp": 34, "time_steps_year": 34, "spot_step": 34, "americanpdepricingd": 34, "basepricingdata": 34, "pricer": 34, "black76pricingdata": 34, "black76pricingd": 34, "bondpricingdata": 34, "bondbasespecif": 34, "valuation_d": 34, "fixing_curv": 34, "bondpricingparamet": 34, "bondpricingrequest": 34, "bondpric": 34, "past_fix": 34, "survival_curv": 34, "survivalcurv": 34, "recovery_curv": 34, "basedatedcurv": 34, "cdspricingdata": 34, "integration_step": 34, "relativedelta": 34, "par_spread": 34, "integration_steps": 34, "pricingresult": 34, "getpric": 34, "set_pric": 34, "intenum": 34, "enumer": [34, 35], "vanna": 34, "vega": 34, "creat": [35, 36], "start_dai": 35, "end_dai": 35, "time_period": 35, "backward": 35, "business_day_convent": 35, "rollconvent": 35, "modified_follow": 35, "calendar": 35, "holidaybas": 35, "fist": 35, "distanc": 35, "consecut": 35, "procedur": 35, "precis": 35, "direct": 35, "deal": 35, "incomplet": 35, "moreov": 35, "compli": 35, "holidai": 35, "accept": 35, "even": 35, "though": 35, "shorter": 35, "remain": 35, "neighbour": 35, "_holidaybas": 35, "provinc": 35, "saturdai": 35, "ecb": 35, "target2": 35, "2020": 35, "unadjust": 35, "holidays_d": 35, "generate_d": 35, "ends_onli": 35, "regard": 35, "accrual": 35, "datetimeindex": 35, "timestamp": 35, "transform": 35, "enddat": 35, "whether": 35, "boundari": 35, "valueerror": 35, "get_daily_subgrid": 35, "subgrid": 35, "reult": 35, "get_day_of_week": 35, "get_day_of_year": 35, "get_hour_of_dai": 35, "get_minute_of_dai": 35, "constrained_splin": 35, "linear_log": 35, "mezzanin": 35, "non_preferred_senior": 35, "preferred_senior": 35, "senior_secur": [35, 36], "senior_unsecur": [35, 36], "modifiedfollow": 35, "modified_following_bimonthli": 35, "modifiedfollowingbimonthli": 35, "modified_following_eom": 35, "modifiedfollowingeom": 35, "modified_preced": 35, "modifiedpreced": 35, "preced": 35, "act252": 35, "act360": 35, "act_act": 35, "actact": 35, "thirtye360": 35, "30e360": 35, "thirtyu360": 35, "30u360": 35, "inflationinterpol": 35, "german": 35, "japan": 35, "undefin": 35, "stickyfwdmoney": 35, "stickystrik": 35, "stickyxstrik": 35, "fanci": 36, "bunch": 36, "creation": 36, "spread_curv": 36, "spreadcurvesampl": 36, "sector_weight": 36, "country_weight": 36, "esg": 36, "get_curv": 36, "adequ": 36, "consistet": 36, "sens": 36, "strictli": 36, "parameter": 36, "sample_new": 36, "spreadcurvecollect": 36, "set_param": 36, "rating_curv": 36, "currency_spread": 36, "esg_spread": 36, "rating_weight": 36, "sector_spread": 36, "country_curv": 36, "sec_level_spread": 36, "collect": 36, "star": 36, "s_": 36, "credit_default": 36, "creditdefaultdata": 36, "n_data": 36, "cov": 36, "occur": 36, "did": 36, "coeffici": 36, "mbox": 36, "ag": 36, "hot": 36, "encod": 36, "live": 36, "uniformli": 36, "drawn": 36, "gaussian": 36, "copula": 36, "showsth": 36, "pairplot": 36, "covari": 36, "matrix": 36, "thena": 36}, "objects": {"rivapy.instruments": [[18, 0, 1, "", "AmericanVanillaSpecification"], [18, 0, 1, "", "BarrierSpecification"], [19, 0, 1, "", "ComboSpecification"], [18, 0, 1, "", "EuropeanVanillaSpecification"], [20, 0, 1, "", "GreenPPASpecification"], [18, 0, 1, "", "MemoryExpressSpecification"], [20, 0, 1, "", "PPASpecification"], [18, 0, 1, "", "RainbowSpecification"], [20, 0, 1, "", "SimpleSchedule"], [17, 2, 0, "-", "cds_specification"]], "rivapy.instruments.GreenPPASpecification": [[20, 1, 1, "", "compute_flows"]], "rivapy.instruments.PPASpecification": [[20, 1, 1, "", "compute_flows"], [20, 1, 1, "", "get_schedule"], [20, 1, 1, "", "n_deliveries"], [20, 1, 1, "", "set_amount"]], "rivapy.instruments.SimpleSchedule": [[20, 1, 1, "", "applies"], [20, 1, 1, "", "get_df"], [20, 1, 1, "", "get_params"], [20, 1, 1, "", "get_schedule"]], "rivapy.instruments.bond_specifications": [[17, 0, 1, "", "PlainVanillaCouponBondSpecification"], [17, 0, 1, "", "ZeroCouponBondSpecification"]], "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification": [[17, 1, 1, "", "_create_sample"], [17, 1, 1, "", "expected_cashflows"]], "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification": [[17, 1, 1, "", "_create_sample"], [17, 1, 1, "", "expected_cashflows"]], "rivapy.instruments.cds_specification": [[17, 0, 1, "", "CDSSpecification"]], "rivapy.instruments.cds_specification.CDSSpecification": [[17, 1, 1, "", "validate"]], "rivapy.instruments.components": [[16, 0, 1, "", "Issuer"]], "rivapy.instruments.components.Issuer": [[16, 1, 1, "", "_create_sample"], [16, 3, 1, "", "country"], [16, 3, 1, "", "esg_rating"], [16, 3, 1, "", "name"], [16, 3, 1, "", "obj_id"], [16, 3, 1, "", "rating"], [16, 3, 1, "", "sector"]], "rivapy.marketdata": [[21, 0, 1, "", "ConstantRate"], [21, 0, 1, "", "DiscountCurve"], [21, 0, 1, "", "DiscountCurveParametrized"], [22, 0, 1, "", "DividendTable"], [23, 0, 1, "", "EquityForwardCurve"], [21, 0, 1, "", "NelsonSiegel"], [21, 0, 1, "", "NelsonSiegelSvensson"], [25, 0, 1, "", "PowerPriceForwardCurve"], [23, 0, 1, "", "VolatilityGridParametrization"], [23, 0, 1, "", "VolatilityParametrizationFlat"], [23, 0, 1, "", "VolatilityParametrizationSABR"], [23, 0, 1, "", "VolatilityParametrizationSSVI"], [23, 0, 1, "", "VolatilityParametrizationSVI"], [23, 0, 1, "", "VolatilityParametrizationTerm"], [23, 0, 1, "", "VolatilitySurface"]], "rivapy.marketdata.DiscountCurve": [[21, 1, 1, "", "get_dates"], [21, 1, 1, "", "get_df"], [21, 1, 1, "", "plot"], [21, 1, 1, "", "value"]], "rivapy.marketdata.DiscountCurveParametrized": [[21, 1, 1, "", "value"], [21, 1, 1, "", "value_rate"]], "rivapy.marketdata.EquityForwardCurve": [[23, 1, 1, "", "plot"], [23, 1, 1, "", "value"]], "rivapy.marketdata.NelsonSiegel": [[21, 1, 1, "", "compute"]], "rivapy.marketdata.NelsonSiegelSvensson": [[21, 1, 1, "", "compute"]], "rivapy.marketdata.PowerPriceForwardCurve": [[25, 1, 1, "", "get_df"], [25, 1, 1, "", "value"]], "rivapy.marketdata.VolatilityGridParametrization": [[23, 1, 1, "", "calc_implied_vol"]], "rivapy.marketdata.VolatilityParametrizationSSVI": [[23, 1, 1, "", "calc_implied_vol"], [23, 1, 1, "", "get_eta"], [23, 1, 1, "", "get_fwd_atm_vols"], [23, 1, 1, "", "get_gamma"], [23, 1, 1, "", "get_rho"]], "rivapy.marketdata.VolatilitySurface": [[23, 1, 1, "", "calc_implied_vol"], [23, 1, 1, "", "load"], [23, 1, 1, "", "set_stickyness"]], "rivapy.models": [[28, 0, 1, "", "HestonModel"], [26, 0, 1, "", "LinearDemandForwardModel"], [26, 0, 1, "", "LoadModel"], [28, 0, 1, "", "LocalVol"], [30, 0, 1, "", "LuciaSchwartz"], [26, 0, 1, "", "MultiRegionWindForecastModel"], [30, 0, 1, "", "OrnsteinUhlenbeck"], [26, 0, 1, "", "ResidualDemandForwardModel"], [26, 0, 1, "", "ResidualDemandModel"], [28, 0, 1, "", "ScottChesneyModel"], [26, 0, 1, "", "SolarPowerModel"], [28, 0, 1, "", "StochasticLocalVol"], [26, 0, 1, "", "SupplyFunction"], [26, 0, 1, "", "WindPowerForecastModel"], [26, 0, 1, "", "WindPowerModel"]], "rivapy.models.HestonModel": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "call_price"], [28, 1, 1, "", "feller_condition"], [28, 1, 1, "", "get_initial_value"]], "rivapy.models.LinearDemandForwardModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "get_technology"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.LoadModel": [[26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"]], "rivapy.models.LocalVol": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "compute_local_var"]], "rivapy.models.LuciaSchwartz": [[30, 1, 1, "", "compute_expected_value"], [30, 1, 1, "", "compute_fwd_value"], [30, 1, 1, "", "rnd_shape"], [30, 1, 1, "", "simulate"]], "rivapy.models.MultiRegionWindForecastModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 0, 1, "", "Region"], [26, 1, 1, "", "region_names"], [26, 1, 1, "", "region_relative_capacity"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "total_capacity"], [26, 1, 1, "", "udls"]], "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.MultiRegionWindForecastModel.Region": [[26, 1, 1, "", "n_random"], [26, 1, 1, "", "name"], [26, 1, 1, "", "udls"]], "rivapy.models.OrnsteinUhlenbeck": [[30, 1, 1, "", "apply_mc_step"], [30, 1, 1, "", "calibrate"], [30, 1, 1, "", "compute_call_price"], [30, 1, 1, "", "compute_expected_value"], [30, 1, 1, "", "conditional_probability_density"], [30, 1, 1, "", "rnd_shape"], [30, 1, 1, "", "simulate"]], "rivapy.models.ResidualDemandForwardModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "get_technology"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.ResidualDemandModel": [[26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.ScottChesneyModel": [[28, 1, 1, "", "apply_mc_step"]], "rivapy.models.SolarPowerModel": [[26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.StochasticLocalVol": [[28, 1, 1, "", "apply_mc_step"], [28, 1, 1, "", "calibrate_MC"], [28, 1, 1, "", "get_initial_value"]], "rivapy.models.SupplyFunction": [[26, 1, 1, "", "compute"], [26, 1, 1, "", "plot"]], "rivapy.models.WindPowerForecastModel": [[26, 0, 1, "", "ForwardSimulationResult"], [26, 1, 1, "", "eval_call_functions"], [26, 1, 1, "", "get_forward"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.models.WindPowerForecastModel.ForwardSimulationResult": [[26, 1, 1, "", "get"], [26, 1, 1, "", "n_forwards"], [26, 1, 1, "", "udls"]], "rivapy.models.WindPowerModel": [[26, 1, 1, "", "calibrate"], [26, 1, 1, "", "rnd_shape"], [26, 1, 1, "", "simulate"], [26, 1, 1, "", "udls"]], "rivapy.pricing": [[34, 2, 0, "-", "analytics"], [34, 2, 0, "-", "pricing_data"]], "rivapy.pricing.analytics": [[34, 4, 1, "", "compute_european_price_Buehler"], [34, 4, 1, "", "compute_implied_vol_Buehler"]], "rivapy.pricing.pricing_data": [[34, 0, 1, "", "AmericanPdePricingData"], [34, 0, 1, "", "BasePricingData"], [34, 0, 1, "", "Black76PricingData"], [34, 0, 1, "", "BondPricingData"], [34, 0, 1, "", "BondPricingParameter"], [34, 0, 1, "", "CDSPricingData"], [34, 0, 1, "", "PricingResults"], [34, 0, 1, "", "ResultType"]], "rivapy.pricing.pricing_data.AmericanPdePricingData": [[34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.BasePricingData": [[34, 3, 1, "", "pricer"], [34, 3, 1, "", "pricing_request"]], "rivapy.pricing.pricing_data.Black76PricingData": [[34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.BondPricingData": [[34, 3, 1, "", "bond"], [34, 3, 1, "", "discount_curve"], [34, 3, 1, "", "fixing_curve"], [34, 3, 1, "", "parameters"], [34, 3, 1, "", "past_fixing"], [34, 3, 1, "", "recovery_curve"], [34, 3, 1, "", "survival_curve"], [34, 3, 1, "", "valuation_date"]], "rivapy.pricing.pricing_data.CDSPricingData": [[34, 1, 1, "", "par_spread"], [34, 1, 1, "", "price"]], "rivapy.pricing.pricing_data.PricingResults": [[34, 1, 1, "", "getPrice"], [34, 1, 1, "", "set_price"]], "rivapy.pricing.pricing_data.ResultType": [[34, 5, 1, "", "DELTA"], [34, 5, 1, "", "GAMMA"], [34, 5, 1, "", "PRICE"], [34, 5, 1, "", "RHO"], [34, 5, 1, "", "THETA"], [34, 5, 1, "", "VANNA"], [34, 5, 1, "", "VEGA"]], "rivapy.pricing.pricing_request": [[32, 0, 1, "", "GreenPPAPricingRequest"]], "rivapy.sample_data.market_data.credit_default": [[36, 0, 1, "", "CreditDefaultData"]], "rivapy.sample_data.market_data.credit_default.CreditDefaultData": [[36, 1, 1, "", "sample"]], "rivapy.sample_data.market_data.spread_curves": [[36, 0, 1, "", "SpreadCurveCollection"], [36, 0, 1, "", "SpreadCurveSampler"]], "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection": [[36, 1, 1, "", "get_curve"]], "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler": [[36, 1, 1, "", "get_curve"], [36, 1, 1, "", "sample"], [36, 1, 1, "", "sample_new"], [36, 1, 1, "", "set_params"]], "rivapy.tools": [[35, 0, 1, "", "DateTimeGrid"], [35, 0, 1, "", "Period"], [35, 0, 1, "", "Schedule"]], "rivapy.tools.DateTimeGrid": [[35, 1, 1, "", "get_daily_subgrid"], [35, 1, 1, "", "get_day_of_week"], [35, 1, 1, "", "get_day_of_year"], [35, 1, 1, "", "get_hour_of_day"], [35, 1, 1, "", "get_minute_of_day"]], "rivapy.tools.Period": [[35, 3, 1, "", "days"], [35, 1, 1, "", "from_string"], [35, 3, 1, "", "months"], [35, 3, 1, "", "years"]], "rivapy.tools.Schedule": [[35, 3, 1, "", "backwards"], [35, 3, 1, "", "business_day_convention"], [35, 3, 1, "", "calendar"], [35, 3, 1, "", "end_day"], [35, 1, 1, "", "generate_dates"], [35, 3, 1, "", "start_day"], [35, 3, 1, "", "stub"], [35, 3, 1, "", "time_period"]], "rivapy.tools.enums": [[35, 0, 1, "", "DayCounterType"], [35, 0, 1, "", "ExtrapolationType"], [35, 0, 1, "", "InflationInterpolation"], [35, 0, 1, "", "InterpolationType"], [35, 0, 1, "", "RollConvention"], [35, 0, 1, "", "SecuritizationLevel"], [35, 0, 1, "", "VolatilityStickyness"]], "rivapy.tools.enums.DayCounterType": [[35, 5, 1, "", "ACT252"], [35, 5, 1, "", "ACT360"], [35, 5, 1, "", "ACT_ACT"], [35, 5, 1, "", "Act365Fixed"], [35, 5, 1, "", "ThirtyE360"], [35, 5, 1, "", "ThirtyU360"]], "rivapy.tools.enums.ExtrapolationType": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "LINEAR"], [35, 5, 1, "", "LINEAR_LOG"], [35, 5, 1, "", "NONE"]], "rivapy.tools.enums.InflationInterpolation": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "GERMAN"], [35, 5, 1, "", "JAPAN"], [35, 5, 1, "", "UNDEFINED"]], "rivapy.tools.enums.InterpolationType": [[35, 5, 1, "", "CONSTANT"], [35, 5, 1, "", "CONSTRAINED_SPLINE"], [35, 5, 1, "", "HAGAN"], [35, 5, 1, "", "HAGAN_DF"], [35, 5, 1, "", "LINEAR"], [35, 5, 1, "", "LINEAR_LOG"]], "rivapy.tools.enums.RollConvention": [[35, 5, 1, "", "FOLLOWING"], [35, 5, 1, "", "MODIFIED_FOLLOWING"], [35, 5, 1, "", "MODIFIED_FOLLOWING_BIMONTHLY"], [35, 5, 1, "", "MODIFIED_FOLLOWING_EOM"], [35, 5, 1, "", "MODIFIED_PRECEDING"], [35, 5, 1, "", "NEAREST"], [35, 5, 1, "", "PRECEDING"], [35, 5, 1, "", "UNADJUSTED"]], "rivapy.tools.enums.SecuritizationLevel": [[35, 5, 1, "", "COLLATERALIZED"], [35, 5, 1, "", "EQUITY"], [35, 5, 1, "", "MEZZANINE"], [35, 5, 1, "", "NONE"], [35, 5, 1, "", "NON_PREFERRED_SENIOR"], [35, 5, 1, "", "PREFERRED_SENIOR"], [35, 5, 1, "", "SENIOR_SECURED"], [35, 5, 1, "", "SENIOR_UNSECURED"], [35, 5, 1, "", "SUBORDINATED"]], "rivapy.tools.enums.VolatilityStickyness": [[35, 5, 1, "", "NONE"], [35, 5, 1, "", "StickyFwdMoneyness"], [35, 5, 1, "", "StickyStrike"], [35, 5, 1, "", "StickyXStrike"]], "rivapy.tools.example_docstring": [[0, 0, 1, "", "DocStringExample"]], "rivapy.tools.interfaces": [[33, 0, 1, "", "DateTimeFunction"]], "rivapy.tools.interfaces.DateTimeFunction": [[33, 1, 1, "", "compute"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"develop": 0, "guid": 0, "styleguid": 0, "import": 0, "type": [0, 5], "annot": 0, "docstr": 0, "todo": 0, "comment": 0, "name": 0, "unit": 0, "test": [0, 36], "log": 0, "usag": 0, "glossari": 1, "welcom": 2, "rivapi": 2, "": 2, "document": [2, 15], "content": [2, 15, 19, 23, 24, 27, 29, 31], "instal": 3, "notebook": 4, "galleri": 4, "market": [4, 5], "data": [4, 36], "model": [4, 7, 8, 9, 10, 11, 12, 13, 26, 28, 29], "price": [4, 7, 14, 31, 34], "financi": 4, "instrument": [4, 17, 18, 19, 20], "repurchas": 5, "agreement": [5, 20], "basic": 5, "idea": 5, "The": 5, "repo": 5, "econom": 5, "function": 5, "size": 5, "european": 5, "typic": 5, "term": 5, "differ": 5, "collater": 5, "gener": 5, "special": 5, "risk": 5, "coupon": 5, "dividend": [5, 22], "vote": 5, "right": 5, "tri": 5, "parti": 5, "open": 5, "secur": 5, "lend": 5, "sourc": 5, "discount": [6, 21], "curv": [6, 21, 23], "definit": 6, "creat": 6, "setup": [6, 7], "specif": [6, 7, 14], "comput": 6, "factor": 6, "plot": [6, 7, 13], "exercis": 6, "green": [7, 13, 14, 20], "ppa": [7, 13, 14], "hedg": [7, 13], "wind": [7, 10, 12, 26], "power": [7, 12, 20, 25, 26], "pnl": [7, 13], "distribut": [7, 13], "delta": [7, 13], "v": 7, "volum": 7, "path": [7, 11, 13], "lucia": [8, 30], "schwartz": [8, 30], "simul": [8, 9, 10, 11, 12], "spot": [8, 9, 26], "forward": [8, 13, 26], "valu": [8, 14], "ornstein": [9, 30], "uhlenbeck": [9, 30], "calibr": 9, "powerpric": 10, "forecast": [10, 12, 26], "discret": 10, "timepoint": 10, "onli": 10, "multiregion": 11, "windpow": 11, "modelsetup": 11, "deep": 13, "residu": 13, "demand": 13, "expect": 14, "modul": 15, "compon": 16, "credit": [17, 36], "bond": 17, "default": [17, 36], "swap": 17, "equiti": [18, 23, 28], "barrierspecif": 18, "europeanvanillaspecif": 18, "americanvanillaspecif": 18, "rainbowspecif": 18, "memoryexpressspecif": 18, "purchas": 20, "schedul": 20, "discountcurv": 21, "discountcurveparametr": 21, "parametr": [21, 23], "tabl": 22, "volatil": [23, 28], "surfac": 23, "marketdata": 24, "powerpriceforwardcurv": 25, "instanten": 26, "product": 26, "windpowerforecastmodel": 26, "multiregionwindforecastmodel": 26, "solar": 26, "solarpowermodel": 26, "residualdemandmodel": 26, "lineardemandforwardmodel": 26, "residualdemandforwardmodel": 26, "loadmodel": 26, "supplyfunct": 26, "energi": 27, "weather": 27, "local": 28, "heston": 28, "scott": 28, "chesnei": 28, "stochast": [28, 30], "process": 30, "pricingrequest": 32, "interfac": 33, "tool": 35, "date": 35, "datetimegrid": 35, "enum": 35, "sampl": 36, "spreadcurv": 36}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Developer Guide": [[0, "developer-guide"]], "Styleguide": [[0, "styleguide"]], "Imports": [[0, "imports"]], "Type Annotation": [[0, "type-annotation"]], "Docstrings": [[0, "docstrings"]], "TODO Comments": [[0, "todo-comments"]], "Naming": [[0, "naming"]], "Unit Testing": [[0, "unit-testing"]], "Logging": [[0, "logging"]], "Logging Usage": [[0, "logging-usage"]], "Glossary": [[1, "glossary"]], "Welcome to rivapy\u2019s documentation!": [[2, "welcome-to-rivapy-s-documentation"]], "Contents:": [[2, null], [15, null], [19, null], [23, null], [24, null], [27, null], [29, null], [31, null]], "Installation": [[3, "installation"]], "Notebook Gallery": [[4, "notebook-gallery"]], "Market Data": [[4, "market-data"]], "Models": [[4, "models"], [29, "models"]], "Pricing": [[4, "pricing"], [31, "pricing"], [34, "module-rivapy.pricing.analytics"]], "Financial Instruments": [[4, "financial-instruments"]], "Repurchase Agreements": [[5, "Repurchase-Agreements"]], "Basic Idea": [[5, "Basic-Idea"]], "The Repo Market": [[5, "The-Repo-Market"]], "Economic Functions": [[5, "Economic-Functions"]], "The Size of the European Repo Market": [[5, "The-Size-of-the-European-Repo-Market"]], "Typical Terms for Repos": [[5, "Typical-Terms-for-Repos"]], "Different Types of Collateral": [[5, "Different-Types-of-Collateral"]], "General Collateral": [[5, "General-Collateral"]], "Special Collateral": [[5, "Special-Collateral"]], "Risks": [[5, "Risks"]], "Collateral - Coupons and Dividends": [[5, "Collateral---Coupons-and-Dividends"]], "Collateral - Voting Rights": [[5, "Collateral---Voting-Rights"]], "Different Types of Repos": [[5, "Different-Types-of-Repos"]], "Tri-party Repos": [[5, "Tri-party-Repos"]], "Open Repos": [[5, "Open-Repos"]], "Securities Lending": [[5, "Securities-Lending"]], "Sources:": [[5, "Sources:"]], "Discount Curves": [[6, "Discount-Curves"]], "Definition of Discount Curves": [[6, "Definition-of-Discount-Curves"]], "Creating Discount Curves": [[6, "Creating-Discount-Curves"]], "Setup the specification": [[6, "Setup-the-specification"]], "Setup the discount curve": [[6, "Setup-the-discount-curve"]], "Compute Discount Factors": [[6, "Compute-Discount-Factors"]], "Plotting Discount Curves": [[6, "Plotting-Discount-Curves"]], "Exercises": [[6, "Exercises"]], "Green PPA Hedging": [[7, "Green-PPA-Hedging"]], "Setup Model for Wind and Power Prices": [[7, "Setup-Model-for-Wind-and-Power-Prices"]], "Setup Green PPA Specification": [[7, "Setup-Green-PPA-Specification"]], "PPA Hedging": [[7, "PPA-Hedging"], [13, "PPA-Hedging"]], "Hedge PnL Distribution": [[7, "Hedge-PnL-Distribution"], [13, "Hedge-PnL-Distribution"]], "Delta vs Volume": [[7, "Delta-vs-Volume"]], "Path Plots": [[7, "Path-Plots"], [13, "Path-Plots"]], "Delta Plots": [[7, "Delta-Plots"], [13, "Delta-Plots"]], "Lucia-Schwartz Model": [[8, "Lucia-Schwartz-Model"]], "Simulation of Spot": [[8, "Simulation-of-Spot"], [9, "Simulation-of-Spot"]], "Forward Values": [[8, "Forward-Values"]], "Ornstein-Uhlenbeck Model": [[9, "Ornstein-Uhlenbeck-Model"]], "Calibration": [[9, "Calibration"]], "Powerprice and Wind Modeling": [[10, "Powerprice-and-Wind-Modeling"]], "Simulation of Powerprices and Wind": [[10, "Simulation-of-Powerprices-and-Wind"]], "Simulation with forecasts at discrete timepoints only": [[10, "Simulation-with-forecasts-at-discrete-timepoints-only"]], "Multiregion Windpower Model": [[11, "Multiregion-Windpower-Model"]], "Modelsetup": [[11, "Modelsetup"]], "Path Simulation": [[11, "Path-Simulation"]], "Wind Power Forecast Model": [[12, "Wind-Power-Forecast-Model"]], "Forecast Simulations": [[12, "Forecast-Simulations"]], "Deep Hedging of Green PPAs": [[13, "Deep-Hedging-of-Green-PPAs"]], "Residual Demand Forward Model": [[13, "Residual-Demand-Forward-Model"]], "Green PPA Pricing - Expected Value": [[14, "Green-PPA-Pricing---Expected-Value"]], "Green PPA Specification": [[14, "Green-PPA-Specification"]], "Module Documentation": [[15, "module-documentation"]], "Components": [[16, "components"]], "Credit Instruments": [[17, "credit-instruments"]], "Bonds": [[17, "bonds"]], "Credit Default Swaps": [[17, "module-rivapy.instruments.cds_specification"]], "Equity Instruments": [[18, "equity-instruments"]], "BarrierSpecification": [[18, "barrierspecification"]], "EuropeanVanillaSpecification": [[18, "europeanvanillaspecification"]], "AmericanVanillaSpecification": [[18, "americanvanillaspecification"]], "RainbowSpecification": [[18, "rainbowspecification"]], "MemoryExpressSpecification": [[18, "memoryexpressspecification"]], "Instruments": [[19, "instruments"]], "Power Instruments": [[20, "power-instruments"]], "Power Purchase Agreement": [[20, "power-purchase-agreement"]], "Green Power Purchase Agreement": [[20, "green-power-purchase-agreement"]], "Schedules": [[20, "schedules"]], "Discount Curve": [[21, "discount-curve"]], "DiscountCurve": [[21, "discountcurve"]], "DiscountCurveParametrized": [[21, "discountcurveparametrized"], [21, "id3"]], "Parametrizations": [[21, "parametrizations"]], "Dividend Tables": [[22, "dividend-tables"]], "Equity": [[23, "equity"], [28, "equity"]], "Curves": [[23, "curves"]], "Volatility Surface": [[23, "volatility-surface"]], "Volatility Parametrizations": [[23, "volatility-parametrizations"]], "Marketdata": [[24, "marketdata"]], "Power": [[25, "power"], [26, "power"]], "PowerPriceForwardCurve": [[25, "powerpriceforwardcurve"]], "Wind": [[26, "wind"]], "Instantenous Production Models (Spot Models)": [[26, "instantenous-production-models-spot-models"]], "Forecast Models (Forward Models)": [[26, "forecast-models-forward-models"]], "WindPowerForecastModel": [[26, "windpowerforecastmodel"]], "MultiRegionWindForecastModel": [[26, "multiregionwindforecastmodel"]], "Solar": [[26, "solar"]], "SolarPowerModel": [[26, "solarpowermodel"]], "Spot Models": [[26, "spot-models"]], "ResidualDemandModel": [[26, "residualdemandmodel"]], "Forward Models": [[26, "forward-models"]], "LinearDemandForwardModel": [[26, "lineardemandforwardmodel"]], "ResidualDemandForwardModel": [[26, "residualdemandforwardmodel"]], "LoadModel": [[26, "loadmodel"]], "SupplyFunction": [[26, "supplyfunction"]], "Energy and Weather": [[27, "energy-and-weather"]], "Local Volatility Model": [[28, "local-volatility-model"]], "Heston Model": [[28, "heston-model"]], "Scott Chesney": [[28, "scott-chesney"]], "Stochastic Local Volatility Model": [[28, "stochastic-local-volatility-model"]], "Stochastic Processes": [[30, "stochastic-processes"]], "Ornstein-Uhlenbeck": [[30, "ornstein-uhlenbeck"]], "Lucia-Schwartz": [[30, "lucia-schwartz"]], "PricingRequest": [[32, "pricingrequest"]], "Interfaces": [[33, "interfaces"]], "Tools": [[35, "tools"]], "Date Tools": [[35, "date-tools"]], "DateTimeGrid": [[35, "datetimegrid"]], "Enums": [[35, "enums"]], "Sample and Test Data": [[36, "sample-and-test-data"]], "Spreadcurves": [[36, "spreadcurves"]], "Credit Default Data": [[36, "credit-default-data"]]}, "indexentries": {"docstringexample (class in rivapy.tools.example_docstring)": [[0, "rivapy.tools.example_docstring.DocStringExample"]], "cash flow": [[1, "term-Cash-Flow"]], "fair value": [[1, "term-Fair-Value"]], "specification": [[1, "term-Specification"]], "theoretical value": [[1, "term-Theoretical-Value"]], "issuer (class in rivapy.instruments.components)": [[16, "rivapy.instruments.components.Issuer"]], "_create_sample() (rivapy.instruments.components.issuer static method)": [[16, "rivapy.instruments.components.Issuer._create_sample"]], "country (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.country"]], "esg_rating (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.esg_rating"]], "name (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.name"]], "obj_id (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.obj_id"]], "rating (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.rating"]], "sector (rivapy.instruments.components.issuer property)": [[16, "rivapy.instruments.components.Issuer.sector"]], "cdsspecification (class in rivapy.instruments.cds_specification)": [[17, "rivapy.instruments.cds_specification.CDSSpecification"]], "plainvanillacouponbondspecification (class in rivapy.instruments.bond_specifications)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification"]], "zerocouponbondspecification (class in rivapy.instruments.bond_specifications)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification"]], "_create_sample() (rivapy.instruments.bond_specifications.plainvanillacouponbondspecification static method)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification._create_sample"]], "_create_sample() (rivapy.instruments.bond_specifications.zerocouponbondspecification static method)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification._create_sample"]], "expected_cashflows() (rivapy.instruments.bond_specifications.plainvanillacouponbondspecification method)": [[17, "rivapy.instruments.bond_specifications.PlainVanillaCouponBondSpecification.expected_cashflows"]], "expected_cashflows() (rivapy.instruments.bond_specifications.zerocouponbondspecification method)": [[17, "rivapy.instruments.bond_specifications.ZeroCouponBondSpecification.expected_cashflows"]], "module": [[17, "module-rivapy.instruments.cds_specification"], [34, "module-rivapy.pricing.analytics"], [34, "module-rivapy.pricing.pricing_data"]], "rivapy.instruments.cds_specification": [[17, "module-rivapy.instruments.cds_specification"]], "validate() (rivapy.instruments.cds_specification.cdsspecification method)": [[17, "rivapy.instruments.cds_specification.CDSSpecification.validate"]], "americanvanillaspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.AmericanVanillaSpecification"]], "barrierspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.BarrierSpecification"]], "europeanvanillaspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.EuropeanVanillaSpecification"]], "memoryexpressspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.MemoryExpressSpecification"]], "rainbowspecification (class in rivapy.instruments)": [[18, "rivapy.instruments.RainbowSpecification"]], "combospecification (class in rivapy.instruments)": [[19, "rivapy.instruments.ComboSpecification"]], "greenppaspecification (class in rivapy.instruments)": [[20, "rivapy.instruments.GreenPPASpecification"]], "ppaspecification (class in rivapy.instruments)": [[20, "rivapy.instruments.PPASpecification"]], "simpleschedule (class in rivapy.instruments)": [[20, "rivapy.instruments.SimpleSchedule"]], "applies() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.applies"]], "compute_flows() (rivapy.instruments.greenppaspecification method)": [[20, "rivapy.instruments.GreenPPASpecification.compute_flows"]], "compute_flows() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.compute_flows"]], "get_df() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_df"]], "get_params() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_params"]], "get_schedule() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.get_schedule"]], "get_schedule() (rivapy.instruments.simpleschedule method)": [[20, "rivapy.instruments.SimpleSchedule.get_schedule"]], "n_deliveries() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.n_deliveries"]], "set_amount() (rivapy.instruments.ppaspecification method)": [[20, "rivapy.instruments.PPASpecification.set_amount"]], "constantrate (class in rivapy.marketdata)": [[21, "rivapy.marketdata.ConstantRate"]], "discountcurve (class in rivapy.marketdata)": [[21, "rivapy.marketdata.DiscountCurve"]], "discountcurveparametrized (class in rivapy.marketdata)": [[21, "rivapy.marketdata.DiscountCurveParametrized"]], "nelsonsiegel (class in rivapy.marketdata)": [[21, "rivapy.marketdata.NelsonSiegel"]], "nelsonsiegelsvensson (class in rivapy.marketdata)": [[21, "rivapy.marketdata.NelsonSiegelSvensson"]], "compute() (rivapy.marketdata.nelsonsiegel static method)": [[21, "rivapy.marketdata.NelsonSiegel.compute"]], "compute() (rivapy.marketdata.nelsonsiegelsvensson static method)": [[21, "rivapy.marketdata.NelsonSiegelSvensson.compute"]], "get_dates() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.get_dates"]], "get_df() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.get_df"]], "plot() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.plot"]], "value() (rivapy.marketdata.discountcurve method)": [[21, "rivapy.marketdata.DiscountCurve.value"]], "value() (rivapy.marketdata.discountcurveparametrized method)": [[21, "rivapy.marketdata.DiscountCurveParametrized.value"]], "value_rate() (rivapy.marketdata.discountcurveparametrized method)": [[21, "rivapy.marketdata.DiscountCurveParametrized.value_rate"]], "dividendtable (class in rivapy.marketdata)": [[22, "rivapy.marketdata.DividendTable"]], "equityforwardcurve (class in rivapy.marketdata)": [[23, "rivapy.marketdata.EquityForwardCurve"]], "volatilitygridparametrization (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityGridParametrization"]], "volatilityparametrizationflat (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationFlat"]], "volatilityparametrizationsabr (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSABR"]], "volatilityparametrizationssvi (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI"]], "volatilityparametrizationsvi (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationSVI"]], "volatilityparametrizationterm (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilityParametrizationTerm"]], "volatilitysurface (class in rivapy.marketdata)": [[23, "rivapy.marketdata.VolatilitySurface"]], "calc_implied_vol() (rivapy.marketdata.volatilitygridparametrization method)": [[23, "rivapy.marketdata.VolatilityGridParametrization.calc_implied_vol"]], "calc_implied_vol() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.calc_implied_vol"]], "calc_implied_vol() (rivapy.marketdata.volatilitysurface method)": [[23, "rivapy.marketdata.VolatilitySurface.calc_implied_vol"]], "get_eta() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_eta"]], "get_fwd_atm_vols() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_fwd_atm_vols"]], "get_gamma() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_gamma"]], "get_rho() (rivapy.marketdata.volatilityparametrizationssvi method)": [[23, "rivapy.marketdata.VolatilityParametrizationSSVI.get_rho"]], "load() (rivapy.marketdata.volatilitysurface static method)": [[23, "rivapy.marketdata.VolatilitySurface.load"]], "plot() (rivapy.marketdata.equityforwardcurve method)": [[23, "rivapy.marketdata.EquityForwardCurve.plot"]], "set_stickyness() (rivapy.marketdata.volatilitysurface static method)": [[23, "rivapy.marketdata.VolatilitySurface.set_stickyness"]], "value() (rivapy.marketdata.equityforwardcurve method)": [[23, "rivapy.marketdata.EquityForwardCurve.value"]], "powerpriceforwardcurve (class in rivapy.marketdata)": [[25, "rivapy.marketdata.PowerPriceForwardCurve"]], "get_df() (rivapy.marketdata.powerpriceforwardcurve method)": [[25, "rivapy.marketdata.PowerPriceForwardCurve.get_df"]], "value() (rivapy.marketdata.powerpriceforwardcurve method)": [[25, "rivapy.marketdata.PowerPriceForwardCurve.value"]], "lineardemandforwardmodel (class in rivapy.models)": [[26, "rivapy.models.LinearDemandForwardModel"]], "lineardemandforwardmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult"]], "loadmodel (class in rivapy.models)": [[26, "rivapy.models.LoadModel"]], "multiregionwindforecastmodel (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel"]], "multiregionwindforecastmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult"]], "multiregionwindforecastmodel.region (class in rivapy.models)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region"]], "residualdemandforwardmodel (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandForwardModel"]], "residualdemandforwardmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult"]], "residualdemandmodel (class in rivapy.models)": [[26, "rivapy.models.ResidualDemandModel"]], "solarpowermodel (class in rivapy.models)": [[26, "rivapy.models.SolarPowerModel"]], "supplyfunction (class in rivapy.models)": [[26, "rivapy.models.SupplyFunction"]], "windpowerforecastmodel (class in rivapy.models)": [[26, "rivapy.models.WindPowerForecastModel"]], "windpowerforecastmodel.forwardsimulationresult (class in rivapy.models)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult"]], "windpowermodel (class in rivapy.models)": [[26, "rivapy.models.WindPowerModel"]], "calibrate() (rivapy.models.windpowermodel static method)": [[26, "rivapy.models.WindPowerModel.calibrate"]], "compute() (rivapy.models.supplyfunction method)": [[26, "rivapy.models.SupplyFunction.compute"]], "eval_call_functions() (rivapy.models.windpowerforecastmodel static method)": [[26, "rivapy.models.WindPowerForecastModel.eval_call_functions"]], "get() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.get"]], "get() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.get"]], "get() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.get"]], "get() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.get"]], "get_forward() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.get_forward"]], "get_technology() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.get_technology"]], "get_technology() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.get_technology"]], "n_forwards() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.n_forwards"]], "n_forwards() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.n_forwards"]], "n_forwards() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.n_forwards"]], "n_forwards() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.n_forwards"]], "n_random() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.n_random"]], "name() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.name"]], "plot() (rivapy.models.supplyfunction method)": [[26, "rivapy.models.SupplyFunction.plot"]], "region_names() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.region_names"]], "region_relative_capacity() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.region_relative_capacity"]], "rnd_shape() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.rnd_shape"]], "rnd_shape() (rivapy.models.loadmodel method)": [[26, "rivapy.models.LoadModel.rnd_shape"]], "rnd_shape() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.rnd_shape"]], "rnd_shape() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.rnd_shape"]], "rnd_shape() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.rnd_shape"]], "rnd_shape() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.rnd_shape"]], "rnd_shape() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.rnd_shape"]], "simulate() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.simulate"]], "simulate() (rivapy.models.loadmodel method)": [[26, "rivapy.models.LoadModel.simulate"]], "simulate() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.simulate"]], "simulate() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.simulate"]], "simulate() (rivapy.models.residualdemandmodel method)": [[26, "rivapy.models.ResidualDemandModel.simulate"]], "simulate() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.simulate"]], "simulate() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.simulate"]], "simulate() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.simulate"]], "total_capacity() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.total_capacity"]], "udls() (rivapy.models.lineardemandforwardmodel method)": [[26, "rivapy.models.LinearDemandForwardModel.udls"]], "udls() (rivapy.models.lineardemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.LinearDemandForwardModel.ForwardSimulationResult.udls"]], "udls() (rivapy.models.multiregionwindforecastmodel method)": [[26, "rivapy.models.MultiRegionWindForecastModel.udls"]], "udls() (rivapy.models.multiregionwindforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.MultiRegionWindForecastModel.ForwardSimulationResult.udls"]], "udls() (rivapy.models.multiregionwindforecastmodel.region method)": [[26, "rivapy.models.MultiRegionWindForecastModel.Region.udls"]], "udls() (rivapy.models.residualdemandforwardmodel method)": [[26, "rivapy.models.ResidualDemandForwardModel.udls"]], "udls() (rivapy.models.residualdemandforwardmodel.forwardsimulationresult method)": [[26, "rivapy.models.ResidualDemandForwardModel.ForwardSimulationResult.udls"]], "udls() (rivapy.models.residualdemandmodel method)": [[26, "rivapy.models.ResidualDemandModel.udls"]], "udls() (rivapy.models.solarpowermodel method)": [[26, "rivapy.models.SolarPowerModel.udls"]], "udls() (rivapy.models.windpowerforecastmodel method)": [[26, "rivapy.models.WindPowerForecastModel.udls"]], "udls() (rivapy.models.windpowerforecastmodel.forwardsimulationresult method)": [[26, "rivapy.models.WindPowerForecastModel.ForwardSimulationResult.udls"]], "udls() (rivapy.models.windpowermodel method)": [[26, "rivapy.models.WindPowerModel.udls"]], "hestonmodel (class in rivapy.models)": [[28, "rivapy.models.HestonModel"]], "localvol (class in rivapy.models)": [[28, "rivapy.models.LocalVol"]], "scottchesneymodel (class in rivapy.models)": [[28, "rivapy.models.ScottChesneyModel"]], "stochasticlocalvol (class in rivapy.models)": [[28, "rivapy.models.StochasticLocalVol"]], "apply_mc_step() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.apply_mc_step"]], "apply_mc_step() (rivapy.models.localvol method)": [[28, "rivapy.models.LocalVol.apply_mc_step"]], "apply_mc_step() (rivapy.models.scottchesneymodel method)": [[28, "rivapy.models.ScottChesneyModel.apply_mc_step"]], "apply_mc_step() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.apply_mc_step"]], "calibrate_mc() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.calibrate_MC"]], "call_price() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.call_price"]], "compute_local_var() (rivapy.models.localvol static method)": [[28, "rivapy.models.LocalVol.compute_local_var"]], "feller_condition() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.feller_condition"]], "get_initial_value() (rivapy.models.hestonmodel method)": [[28, "rivapy.models.HestonModel.get_initial_value"]], "get_initial_value() (rivapy.models.stochasticlocalvol method)": [[28, "rivapy.models.StochasticLocalVol.get_initial_value"]], "luciaschwartz (class in rivapy.models)": [[30, "rivapy.models.LuciaSchwartz"]], "ornsteinuhlenbeck (class in rivapy.models)": [[30, "rivapy.models.OrnsteinUhlenbeck"]], "apply_mc_step() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.apply_mc_step"]], "calibrate() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.calibrate"]], "compute_call_price() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.compute_call_price"]], "compute_expected_value() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.compute_expected_value"]], "compute_expected_value() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.compute_expected_value"]], "compute_fwd_value() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.compute_fwd_value"]], "conditional_probability_density() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.conditional_probability_density"]], "rnd_shape() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.rnd_shape"]], "rnd_shape() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.rnd_shape"]], "simulate() (rivapy.models.luciaschwartz method)": [[30, "rivapy.models.LuciaSchwartz.simulate"]], "simulate() (rivapy.models.ornsteinuhlenbeck method)": [[30, "rivapy.models.OrnsteinUhlenbeck.simulate"]], "greenppapricingrequest (class in rivapy.pricing.pricing_request)": [[32, "rivapy.pricing.pricing_request.GreenPPAPricingRequest"]], "datetimefunction (class in rivapy.tools.interfaces)": [[33, "rivapy.tools.interfaces.DateTimeFunction"]], "compute() (rivapy.tools.interfaces.datetimefunction method)": [[33, "rivapy.tools.interfaces.DateTimeFunction.compute"]], "americanpdepricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.AmericanPdePricingData"]], "basepricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BasePricingData"]], "black76pricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.Black76PricingData"]], "bondpricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BondPricingData"]], "bondpricingparameter (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.BondPricingParameter"]], "cdspricingdata (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.CDSPricingData"]], "delta (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.DELTA"]], "gamma (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.GAMMA"]], "price (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.PRICE"]], "pricingresults (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.PricingResults"]], "rho (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.RHO"]], "resulttype (class in rivapy.pricing.pricing_data)": [[34, "rivapy.pricing.pricing_data.ResultType"]], "theta (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.THETA"]], "vanna (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.VANNA"]], "vega (rivapy.pricing.pricing_data.resulttype attribute)": [[34, "rivapy.pricing.pricing_data.ResultType.VEGA"]], "bond (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.bond"]], "compute_european_price_buehler() (in module rivapy.pricing.analytics)": [[34, "rivapy.pricing.analytics.compute_european_price_Buehler"]], "compute_implied_vol_buehler() (in module rivapy.pricing.analytics)": [[34, "rivapy.pricing.analytics.compute_implied_vol_Buehler"]], "discount_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.discount_curve"]], "fixing_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.fixing_curve"]], "getprice() (rivapy.pricing.pricing_data.pricingresults method)": [[34, "rivapy.pricing.pricing_data.PricingResults.getPrice"]], "par_spread() (rivapy.pricing.pricing_data.cdspricingdata method)": [[34, "rivapy.pricing.pricing_data.CDSPricingData.par_spread"]], "parameters (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.parameters"]], "past_fixing (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.past_fixing"]], "price() (rivapy.pricing.pricing_data.americanpdepricingdata method)": [[34, "rivapy.pricing.pricing_data.AmericanPdePricingData.price"]], "price() (rivapy.pricing.pricing_data.black76pricingdata method)": [[34, "rivapy.pricing.pricing_data.Black76PricingData.price"]], "price() (rivapy.pricing.pricing_data.cdspricingdata method)": [[34, "rivapy.pricing.pricing_data.CDSPricingData.price"]], "pricer (rivapy.pricing.pricing_data.basepricingdata property)": [[34, "rivapy.pricing.pricing_data.BasePricingData.pricer"]], "pricing_request (rivapy.pricing.pricing_data.basepricingdata property)": [[34, "rivapy.pricing.pricing_data.BasePricingData.pricing_request"]], "recovery_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.recovery_curve"]], "rivapy.pricing.analytics": [[34, "module-rivapy.pricing.analytics"]], "rivapy.pricing.pricing_data": [[34, "module-rivapy.pricing.pricing_data"]], "set_price() (rivapy.pricing.pricing_data.pricingresults method)": [[34, "rivapy.pricing.pricing_data.PricingResults.set_price"]], "survival_curve (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.survival_curve"]], "valuation_date (rivapy.pricing.pricing_data.bondpricingdata property)": [[34, "rivapy.pricing.pricing_data.BondPricingData.valuation_date"]], "act252 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT252"]], "act360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT360"]], "act_act (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ACT_ACT"]], "act365fixed (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.Act365Fixed"]], "collateralized (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.COLLATERALIZED"]], "constant (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.CONSTANT"]], "constant (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.CONSTANT"]], "constant (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.CONSTANT"]], "constrained_spline (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.CONSTRAINED_SPLINE"]], "datetimegrid (class in rivapy.tools)": [[35, "rivapy.tools.DateTimeGrid"]], "daycountertype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.DayCounterType"]], "equity (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.EQUITY"]], "extrapolationtype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.ExtrapolationType"]], "following (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.FOLLOWING"]], "german (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.GERMAN"]], "hagan (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.HAGAN"]], "hagan_df (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.HAGAN_DF"]], "inflationinterpolation (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.InflationInterpolation"]], "interpolationtype (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.InterpolationType"]], "japan (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.JAPAN"]], "linear (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.LINEAR"]], "linear (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.LINEAR"]], "linear_log (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.LINEAR_LOG"]], "linear_log (rivapy.tools.enums.interpolationtype attribute)": [[35, "rivapy.tools.enums.InterpolationType.LINEAR_LOG"]], "mezzanine (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.MEZZANINE"]], "modified_following (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING"]], "modified_following_bimonthly (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING_BIMONTHLY"]], "modified_following_eom (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_FOLLOWING_EOM"]], "modified_preceding (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.MODIFIED_PRECEDING"]], "nearest (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.NEAREST"]], "none (rivapy.tools.enums.extrapolationtype attribute)": [[35, "rivapy.tools.enums.ExtrapolationType.NONE"]], "none (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.NONE"]], "none (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.NONE"]], "non_preferred_senior (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.NON_PREFERRED_SENIOR"]], "preceding (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.PRECEDING"]], "preferred_senior (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.PREFERRED_SENIOR"]], "period (class in rivapy.tools)": [[35, "rivapy.tools.Period"]], "rollconvention (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.RollConvention"]], "senior_secured (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SENIOR_SECURED"]], "senior_unsecured (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SENIOR_UNSECURED"]], "subordinated (rivapy.tools.enums.securitizationlevel attribute)": [[35, "rivapy.tools.enums.SecuritizationLevel.SUBORDINATED"]], "schedule (class in rivapy.tools)": [[35, "rivapy.tools.Schedule"]], "securitizationlevel (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.SecuritizationLevel"]], "stickyfwdmoneyness (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyFwdMoneyness"]], "stickystrike (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyStrike"]], "stickyxstrike (rivapy.tools.enums.volatilitystickyness attribute)": [[35, "rivapy.tools.enums.VolatilityStickyness.StickyXStrike"]], "thirtye360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ThirtyE360"]], "thirtyu360 (rivapy.tools.enums.daycountertype attribute)": [[35, "rivapy.tools.enums.DayCounterType.ThirtyU360"]], "unadjusted (rivapy.tools.enums.rollconvention attribute)": [[35, "rivapy.tools.enums.RollConvention.UNADJUSTED"]], "undefined (rivapy.tools.enums.inflationinterpolation attribute)": [[35, "rivapy.tools.enums.InflationInterpolation.UNDEFINED"]], "volatilitystickyness (class in rivapy.tools.enums)": [[35, "rivapy.tools.enums.VolatilityStickyness"]], "backwards (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.backwards"]], "business_day_convention (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.business_day_convention"]], "calendar (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.calendar"]], "days (rivapy.tools.period property)": [[35, "rivapy.tools.Period.days"]], "end_day (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.end_day"]], "from_string() (rivapy.tools.period static method)": [[35, "rivapy.tools.Period.from_string"]], "generate_dates() (rivapy.tools.schedule method)": [[35, "rivapy.tools.Schedule.generate_dates"]], "get_daily_subgrid() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_daily_subgrid"]], "get_day_of_week() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_day_of_week"]], "get_day_of_year() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_day_of_year"]], "get_hour_of_day() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_hour_of_day"]], "get_minute_of_day() (rivapy.tools.datetimegrid method)": [[35, "rivapy.tools.DateTimeGrid.get_minute_of_day"]], "months (rivapy.tools.period property)": [[35, "rivapy.tools.Period.months"]], "start_day (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.start_day"]], "stub (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.stub"]], "time_period (rivapy.tools.schedule property)": [[35, "rivapy.tools.Schedule.time_period"]], "years (rivapy.tools.period property)": [[35, "rivapy.tools.Period.years"]], "creditdefaultdata (class in rivapy.sample_data.market_data.credit_default)": [[36, "rivapy.sample_data.market_data.credit_default.CreditDefaultData"]], "spreadcurvecollection (class in rivapy.sample_data.market_data.spread_curves)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection"]], "spreadcurvesampler (class in rivapy.sample_data.market_data.spread_curves)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler"]], "get_curve() (rivapy.sample_data.market_data.spread_curves.spreadcurvecollection method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveCollection.get_curve"]], "get_curve() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.get_curve"]], "sample() (rivapy.sample_data.market_data.credit_default.creditdefaultdata static method)": [[36, "rivapy.sample_data.market_data.credit_default.CreditDefaultData.sample"]], "sample() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.sample"]], "sample_new() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.sample_new"]], "set_params() (rivapy.sample_data.market_data.spread_curves.spreadcurvesampler method)": [[36, "rivapy.sample_data.market_data.spread_curves.SpreadCurveSampler.set_params"]]}})